"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.ConcatOperation = exports.ConcatOperationType = void 0;
var AbstractOperation_1 = require("./AbstractOperation");
var ConcatOperationType;
(function (ConcatOperationType) {
    ConcatOperationType["start"] = "start";
    ConcatOperationType["end"] = "end";
})(ConcatOperationType = exports.ConcatOperationType || (exports.ConcatOperationType = {}));
var ConcatOperation = /** @class */ (function (_super) {
    __extends(ConcatOperation, _super);
    function ConcatOperation(type, value) {
        var _this = _super.call(this) || this;
        _this.type = type;
        _this.value = value;
        return _this;
    }
    ConcatOperation.prototype.getSerializableProperties = function () {
        return ['type', 'value'];
    };
    ConcatOperation.prototype.getTextProperties = function () {
        return ['value'];
    };
    ConcatOperation.getAllowedTypes = function () {
        return [ConcatOperationType.start, ConcatOperationType.end];
    };
    return ConcatOperation;
}(AbstractOperation_1.AbstractOperation));
exports.ConcatOperation = ConcatOperation;
//# sourceMappingURL=ConcatOperation.js.map