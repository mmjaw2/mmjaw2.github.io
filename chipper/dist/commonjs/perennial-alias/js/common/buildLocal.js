"use strict";

// Copyright 2017, University of Colorado Boulder

/**
 * Settings defined in buildLocal
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

var assert = require('assert');
var fs = require('fs');
var winston = require('../../../../../../perennial-alias/node_modules/winston');

// Handle the lack of build.json
var buildLocalObject;
try {
  buildLocalObject = JSON.parse(fs.readFileSync("".concat(process.env.HOME, "/.phet/build-local.json"), 'utf8'));
} catch (e) {
  winston.warn('Missing or incorrect build-local.json!');
  buildLocalObject = {};
}
module.exports = {
  get devUsername() {
    assert(buildLocalObject.devUsername);
    return buildLocalObject.devUsername;
  },
  get buildServerAuthorizationCode() {
    assert(buildLocalObject.buildServerAuthorizationCode);
    return buildLocalObject.buildServerAuthorizationCode;
  },
  get phetDevGitHubAccessToken() {
    assert(buildLocalObject.phetDevGitHubAccessToken, 'The phetDevGitHubAccessToken field of build-local.json is required, and can be retrieved from the PhET ' + 'credentials document for the "Github Machine User" row with the node "phetDevGitHubAccessToken" (it is ' + 'a hexadecimal string).');
    return buildLocalObject.phetDevGitHubAccessToken;
  },
  get developerGithubAccessToken() {
    assert(buildLocalObject.developerGithubAccessToken, 'The developerGithubAccessToken field of build-local.json is required for the use of the scripts in' + 'phet-info/github-labels.  For information on how to create one, see' + 'https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line#creating-a-token');
    return buildLocalObject.developerGithubAccessToken;
  },
  get developerGithubUsername() {
    assert(buildLocalObject.developerGithubUsername, 'The developerGithubUsername field of build-local.json is required for the use of the scripts in' + 'phet-info/github-labels.');
    return buildLocalObject.developerGithubUsername;
  },
  get slackBotToken() {
    assert(buildLocalObject.slackBotToken, 'The slackBotToken field of build-local.json is required for CT Slack integration');
    return buildLocalObject.slackBotToken;
  },
  get slackSigningSecret() {
    assert(buildLocalObject.slackSigningSecret, 'The slackSigningSecret field of build-local.json is required for CT Slack integration');
    return buildLocalObject.slackSigningSecret;
  },
  // Wrappers are now deployed to the dev location (for convenience)
  devDeployServer: buildLocalObject.devDeployServer || 'bayes.colorado.edu',
  devDeployPath: buildLocalObject.devDeployPath || '/data/web/htdocs/dev/html/',
  decafDeployPath: buildLocalObject.decafDeployPath || '/data/web/htdocs/dev/decaf/',
  buildServerNotifyEmail: buildLocalObject.buildServerNotifyEmail || null,
  productionServerURL: buildLocalObject.productionServerURL || 'https://phet.colorado.edu',
  babelBranch: buildLocalObject.babelBranch || 'main'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiZnMiLCJ3aW5zdG9uIiwiYnVpbGRMb2NhbE9iamVjdCIsIkpTT04iLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsImNvbmNhdCIsInByb2Nlc3MiLCJlbnYiLCJIT01FIiwiZSIsIndhcm4iLCJtb2R1bGUiLCJleHBvcnRzIiwiZGV2VXNlcm5hbWUiLCJidWlsZFNlcnZlckF1dGhvcml6YXRpb25Db2RlIiwicGhldERldkdpdEh1YkFjY2Vzc1Rva2VuIiwiZGV2ZWxvcGVyR2l0aHViQWNjZXNzVG9rZW4iLCJkZXZlbG9wZXJHaXRodWJVc2VybmFtZSIsInNsYWNrQm90VG9rZW4iLCJzbGFja1NpZ25pbmdTZWNyZXQiLCJkZXZEZXBsb3lTZXJ2ZXIiLCJkZXZEZXBsb3lQYXRoIiwiZGVjYWZEZXBsb3lQYXRoIiwiYnVpbGRTZXJ2ZXJOb3RpZnlFbWFpbCIsInByb2R1Y3Rpb25TZXJ2ZXJVUkwiLCJiYWJlbEJyYW5jaCJdLCJzb3VyY2VzIjpbImJ1aWxkTG9jYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTcsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFNldHRpbmdzIGRlZmluZWQgaW4gYnVpbGRMb2NhbFxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSggJ2Fzc2VydCcgKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCAnZnMnICk7XHJcbmNvbnN0IHdpbnN0b24gPSByZXF1aXJlKCAnd2luc3RvbicgKTtcclxuXHJcbi8vIEhhbmRsZSB0aGUgbGFjayBvZiBidWlsZC5qc29uXHJcbmxldCBidWlsZExvY2FsT2JqZWN0O1xyXG50cnkge1xyXG4gIGJ1aWxkTG9jYWxPYmplY3QgPSBKU09OLnBhcnNlKCBmcy5yZWFkRmlsZVN5bmMoIGAke3Byb2Nlc3MuZW52LkhPTUV9Ly5waGV0L2J1aWxkLWxvY2FsLmpzb25gLCAndXRmOCcgKSApO1xyXG59XHJcbmNhdGNoKCBlICkge1xyXG4gIHdpbnN0b24ud2FybiggJ01pc3Npbmcgb3IgaW5jb3JyZWN0IGJ1aWxkLWxvY2FsLmpzb24hJyApO1xyXG4gIGJ1aWxkTG9jYWxPYmplY3QgPSB7fTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgZ2V0IGRldlVzZXJuYW1lKCkge1xyXG4gICAgYXNzZXJ0KCBidWlsZExvY2FsT2JqZWN0LmRldlVzZXJuYW1lICk7XHJcbiAgICByZXR1cm4gYnVpbGRMb2NhbE9iamVjdC5kZXZVc2VybmFtZTtcclxuICB9LFxyXG4gIGdldCBidWlsZFNlcnZlckF1dGhvcml6YXRpb25Db2RlKCkge1xyXG4gICAgYXNzZXJ0KCBidWlsZExvY2FsT2JqZWN0LmJ1aWxkU2VydmVyQXV0aG9yaXphdGlvbkNvZGUgKTtcclxuICAgIHJldHVybiBidWlsZExvY2FsT2JqZWN0LmJ1aWxkU2VydmVyQXV0aG9yaXphdGlvbkNvZGU7XHJcbiAgfSxcclxuICBnZXQgcGhldERldkdpdEh1YkFjY2Vzc1Rva2VuKCkge1xyXG4gICAgYXNzZXJ0KCBidWlsZExvY2FsT2JqZWN0LnBoZXREZXZHaXRIdWJBY2Nlc3NUb2tlbixcclxuICAgICAgJ1RoZSBwaGV0RGV2R2l0SHViQWNjZXNzVG9rZW4gZmllbGQgb2YgYnVpbGQtbG9jYWwuanNvbiBpcyByZXF1aXJlZCwgYW5kIGNhbiBiZSByZXRyaWV2ZWQgZnJvbSB0aGUgUGhFVCAnICtcclxuICAgICAgJ2NyZWRlbnRpYWxzIGRvY3VtZW50IGZvciB0aGUgXCJHaXRodWIgTWFjaGluZSBVc2VyXCIgcm93IHdpdGggdGhlIG5vZGUgXCJwaGV0RGV2R2l0SHViQWNjZXNzVG9rZW5cIiAoaXQgaXMgJyArXHJcbiAgICAgICdhIGhleGFkZWNpbWFsIHN0cmluZykuJyApO1xyXG4gICAgcmV0dXJuIGJ1aWxkTG9jYWxPYmplY3QucGhldERldkdpdEh1YkFjY2Vzc1Rva2VuO1xyXG4gIH0sXHJcblxyXG4gIGdldCBkZXZlbG9wZXJHaXRodWJBY2Nlc3NUb2tlbigpIHtcclxuICAgIGFzc2VydCggYnVpbGRMb2NhbE9iamVjdC5kZXZlbG9wZXJHaXRodWJBY2Nlc3NUb2tlbixcclxuICAgICAgJ1RoZSBkZXZlbG9wZXJHaXRodWJBY2Nlc3NUb2tlbiBmaWVsZCBvZiBidWlsZC1sb2NhbC5qc29uIGlzIHJlcXVpcmVkIGZvciB0aGUgdXNlIG9mIHRoZSBzY3JpcHRzIGluJyArXHJcbiAgICAgICdwaGV0LWluZm8vZ2l0aHViLWxhYmVscy4gIEZvciBpbmZvcm1hdGlvbiBvbiBob3cgdG8gY3JlYXRlIG9uZSwgc2VlJyArXHJcbiAgICAgICdodHRwczovL2hlbHAuZ2l0aHViLmNvbS9lbi9naXRodWIvYXV0aGVudGljYXRpbmctdG8tZ2l0aHViL2NyZWF0aW5nLWEtcGVyc29uYWwtYWNjZXNzLXRva2VuLWZvci10aGUtY29tbWFuZC1saW5lI2NyZWF0aW5nLWEtdG9rZW4nICk7XHJcbiAgICByZXR1cm4gYnVpbGRMb2NhbE9iamVjdC5kZXZlbG9wZXJHaXRodWJBY2Nlc3NUb2tlbjtcclxuICB9LFxyXG4gIGdldCBkZXZlbG9wZXJHaXRodWJVc2VybmFtZSgpIHtcclxuICAgIGFzc2VydCggYnVpbGRMb2NhbE9iamVjdC5kZXZlbG9wZXJHaXRodWJVc2VybmFtZSxcclxuICAgICAgJ1RoZSBkZXZlbG9wZXJHaXRodWJVc2VybmFtZSBmaWVsZCBvZiBidWlsZC1sb2NhbC5qc29uIGlzIHJlcXVpcmVkIGZvciB0aGUgdXNlIG9mIHRoZSBzY3JpcHRzIGluJyArXHJcbiAgICAgICdwaGV0LWluZm8vZ2l0aHViLWxhYmVscy4nICk7XHJcbiAgICByZXR1cm4gYnVpbGRMb2NhbE9iamVjdC5kZXZlbG9wZXJHaXRodWJVc2VybmFtZTtcclxuICB9LFxyXG4gIGdldCBzbGFja0JvdFRva2VuKCkge1xyXG4gICAgYXNzZXJ0KCBidWlsZExvY2FsT2JqZWN0LnNsYWNrQm90VG9rZW4sXHJcbiAgICAgICdUaGUgc2xhY2tCb3RUb2tlbiBmaWVsZCBvZiBidWlsZC1sb2NhbC5qc29uIGlzIHJlcXVpcmVkIGZvciBDVCBTbGFjayBpbnRlZ3JhdGlvbicgKTtcclxuICAgIHJldHVybiBidWlsZExvY2FsT2JqZWN0LnNsYWNrQm90VG9rZW47XHJcbiAgfSxcclxuICBnZXQgc2xhY2tTaWduaW5nU2VjcmV0KCkge1xyXG4gICAgYXNzZXJ0KCBidWlsZExvY2FsT2JqZWN0LnNsYWNrU2lnbmluZ1NlY3JldCxcclxuICAgICAgJ1RoZSBzbGFja1NpZ25pbmdTZWNyZXQgZmllbGQgb2YgYnVpbGQtbG9jYWwuanNvbiBpcyByZXF1aXJlZCBmb3IgQ1QgU2xhY2sgaW50ZWdyYXRpb24nICk7XHJcbiAgICByZXR1cm4gYnVpbGRMb2NhbE9iamVjdC5zbGFja1NpZ25pbmdTZWNyZXQ7XHJcbiAgfSxcclxuXHJcbiAgLy8gV3JhcHBlcnMgYXJlIG5vdyBkZXBsb3llZCB0byB0aGUgZGV2IGxvY2F0aW9uIChmb3IgY29udmVuaWVuY2UpXHJcbiAgZGV2RGVwbG95U2VydmVyOiBidWlsZExvY2FsT2JqZWN0LmRldkRlcGxveVNlcnZlciB8fCAnYmF5ZXMuY29sb3JhZG8uZWR1JyxcclxuICBkZXZEZXBsb3lQYXRoOiBidWlsZExvY2FsT2JqZWN0LmRldkRlcGxveVBhdGggfHwgJy9kYXRhL3dlYi9odGRvY3MvZGV2L2h0bWwvJyxcclxuICBkZWNhZkRlcGxveVBhdGg6IGJ1aWxkTG9jYWxPYmplY3QuZGVjYWZEZXBsb3lQYXRoIHx8ICcvZGF0YS93ZWIvaHRkb2NzL2Rldi9kZWNhZi8nLFxyXG4gIGJ1aWxkU2VydmVyTm90aWZ5RW1haWw6IGJ1aWxkTG9jYWxPYmplY3QuYnVpbGRTZXJ2ZXJOb3RpZnlFbWFpbCB8fCBudWxsLFxyXG4gIHByb2R1Y3Rpb25TZXJ2ZXJVUkw6IGJ1aWxkTG9jYWxPYmplY3QucHJvZHVjdGlvblNlcnZlclVSTCB8fCAnaHR0cHM6Ly9waGV0LmNvbG9yYWRvLmVkdScsXHJcbiAgYmFiZWxCcmFuY2g6IGJ1aWxkTG9jYWxPYmplY3QuYmFiZWxCcmFuY2ggfHwgJ21haW4nXHJcbn07Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUUsUUFBUyxDQUFDO0FBQ2xDLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFFLElBQUssQ0FBQztBQUMxQixJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBRSxTQUFVLENBQUM7O0FBRXBDO0FBQ0EsSUFBSUcsZ0JBQWdCO0FBQ3BCLElBQUk7RUFDRkEsZ0JBQWdCLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFFSixFQUFFLENBQUNLLFlBQVksSUFBQUMsTUFBQSxDQUFLQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSw4QkFBMkIsTUFBTyxDQUFFLENBQUM7QUFDMUcsQ0FBQyxDQUNELE9BQU9DLENBQUMsRUFBRztFQUNUVCxPQUFPLENBQUNVLElBQUksQ0FBRSx3Q0FBeUMsQ0FBQztFQUN4RFQsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO0FBQ3ZCO0FBRUFVLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2YsSUFBSUMsV0FBV0EsQ0FBQSxFQUFHO0lBQ2hCaEIsTUFBTSxDQUFFSSxnQkFBZ0IsQ0FBQ1ksV0FBWSxDQUFDO0lBQ3RDLE9BQU9aLGdCQUFnQixDQUFDWSxXQUFXO0VBQ3JDLENBQUM7RUFDRCxJQUFJQyw0QkFBNEJBLENBQUEsRUFBRztJQUNqQ2pCLE1BQU0sQ0FBRUksZ0JBQWdCLENBQUNhLDRCQUE2QixDQUFDO0lBQ3ZELE9BQU9iLGdCQUFnQixDQUFDYSw0QkFBNEI7RUFDdEQsQ0FBQztFQUNELElBQUlDLHdCQUF3QkEsQ0FBQSxFQUFHO0lBQzdCbEIsTUFBTSxDQUFFSSxnQkFBZ0IsQ0FBQ2Msd0JBQXdCLEVBQy9DLHlHQUF5RyxHQUN6Ryx5R0FBeUcsR0FDekcsd0JBQXlCLENBQUM7SUFDNUIsT0FBT2QsZ0JBQWdCLENBQUNjLHdCQUF3QjtFQUNsRCxDQUFDO0VBRUQsSUFBSUMsMEJBQTBCQSxDQUFBLEVBQUc7SUFDL0JuQixNQUFNLENBQUVJLGdCQUFnQixDQUFDZSwwQkFBMEIsRUFDakQsb0dBQW9HLEdBQ3BHLHFFQUFxRSxHQUNyRSxtSUFBb0ksQ0FBQztJQUN2SSxPQUFPZixnQkFBZ0IsQ0FBQ2UsMEJBQTBCO0VBQ3BELENBQUM7RUFDRCxJQUFJQyx1QkFBdUJBLENBQUEsRUFBRztJQUM1QnBCLE1BQU0sQ0FBRUksZ0JBQWdCLENBQUNnQix1QkFBdUIsRUFDOUMsaUdBQWlHLEdBQ2pHLDBCQUEyQixDQUFDO0lBQzlCLE9BQU9oQixnQkFBZ0IsQ0FBQ2dCLHVCQUF1QjtFQUNqRCxDQUFDO0VBQ0QsSUFBSUMsYUFBYUEsQ0FBQSxFQUFHO0lBQ2xCckIsTUFBTSxDQUFFSSxnQkFBZ0IsQ0FBQ2lCLGFBQWEsRUFDcEMsa0ZBQW1GLENBQUM7SUFDdEYsT0FBT2pCLGdCQUFnQixDQUFDaUIsYUFBYTtFQUN2QyxDQUFDO0VBQ0QsSUFBSUMsa0JBQWtCQSxDQUFBLEVBQUc7SUFDdkJ0QixNQUFNLENBQUVJLGdCQUFnQixDQUFDa0Isa0JBQWtCLEVBQ3pDLHVGQUF3RixDQUFDO0lBQzNGLE9BQU9sQixnQkFBZ0IsQ0FBQ2tCLGtCQUFrQjtFQUM1QyxDQUFDO0VBRUQ7RUFDQUMsZUFBZSxFQUFFbkIsZ0JBQWdCLENBQUNtQixlQUFlLElBQUksb0JBQW9CO0VBQ3pFQyxhQUFhLEVBQUVwQixnQkFBZ0IsQ0FBQ29CLGFBQWEsSUFBSSw0QkFBNEI7RUFDN0VDLGVBQWUsRUFBRXJCLGdCQUFnQixDQUFDcUIsZUFBZSxJQUFJLDZCQUE2QjtFQUNsRkMsc0JBQXNCLEVBQUV0QixnQkFBZ0IsQ0FBQ3NCLHNCQUFzQixJQUFJLElBQUk7RUFDdkVDLG1CQUFtQixFQUFFdkIsZ0JBQWdCLENBQUN1QixtQkFBbUIsSUFBSSwyQkFBMkI7RUFDeEZDLFdBQVcsRUFBRXhCLGdCQUFnQixDQUFDd0IsV0FBVyxJQUFJO0FBQy9DLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=