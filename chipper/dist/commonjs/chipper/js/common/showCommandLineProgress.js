"use strict";

// Copyright 2022-2023, University of Colorado Boulder

/**
 * Helper function to show a progress bar on the command line.
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

/* eslint-env node */
var _ = require('lodash');

/**
 * See https://jagascript.com/how-to-build-a-textual-progress-bar-for-cli-and-terminal-apps/
 * @param {number} progress - decimal between 0 and 1
 * @param {boolean} newline - if each new progress should give a new line, should be false during progress, and true when finally completed
 * @param {Object} [options]
 */
module.exports = function showCommandLineProgress(progress, newline, options) {
  options = _.assignIn({
    progressBarLength: 40 // in characters
  }, options);
  var dots = '.'.repeat(Math.round(progress * options.progressBarLength));
  var empty = ' '.repeat(Math.round((1 - progress) * options.progressBarLength));
  var newlineString = newline ? '\n' : '';
  process.stdout.write("\r[".concat(dots).concat(empty, "] ").concat((progress * 100).toFixed(2), "%").concat(newlineString));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzaG93Q29tbWFuZExpbmVQcm9ncmVzcyIsInByb2dyZXNzIiwibmV3bGluZSIsIm9wdGlvbnMiLCJhc3NpZ25JbiIsInByb2dyZXNzQmFyTGVuZ3RoIiwiZG90cyIsInJlcGVhdCIsIk1hdGgiLCJyb3VuZCIsImVtcHR5IiwibmV3bGluZVN0cmluZyIsInByb2Nlc3MiLCJzdGRvdXQiLCJ3cml0ZSIsImNvbmNhdCIsInRvRml4ZWQiXSwic291cmNlcyI6WyJzaG93Q29tbWFuZExpbmVQcm9ncmVzcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gc2hvdyBhIHByb2dyZXNzIGJhciBvbiB0aGUgY29tbWFuZCBsaW5lLlxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuLyogZXNsaW50LWVudiBub2RlICovXHJcbmNvbnN0IF8gPSByZXF1aXJlKCAnbG9kYXNoJyApO1xyXG5cclxuLyoqXHJcbiAqIFNlZSBodHRwczovL2phZ2FzY3JpcHQuY29tL2hvdy10by1idWlsZC1hLXRleHR1YWwtcHJvZ3Jlc3MtYmFyLWZvci1jbGktYW5kLXRlcm1pbmFsLWFwcHMvXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9ncmVzcyAtIGRlY2ltYWwgYmV0d2VlbiAwIGFuZCAxXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gbmV3bGluZSAtIGlmIGVhY2ggbmV3IHByb2dyZXNzIHNob3VsZCBnaXZlIGEgbmV3IGxpbmUsIHNob3VsZCBiZSBmYWxzZSBkdXJpbmcgcHJvZ3Jlc3MsIGFuZCB0cnVlIHdoZW4gZmluYWxseSBjb21wbGV0ZWRcclxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gKi9cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaG93Q29tbWFuZExpbmVQcm9ncmVzcyggcHJvZ3Jlc3MsIG5ld2xpbmUsIG9wdGlvbnMgKSB7XHJcbiAgb3B0aW9ucyA9IF8uYXNzaWduSW4oIHtcclxuICAgIHByb2dyZXNzQmFyTGVuZ3RoOiA0MCAvLyBpbiBjaGFyYWN0ZXJzXHJcbiAgfSwgb3B0aW9ucyApO1xyXG5cclxuICBjb25zdCBkb3RzID0gJy4nLnJlcGVhdCggTWF0aC5yb3VuZCggcHJvZ3Jlc3MgKiBvcHRpb25zLnByb2dyZXNzQmFyTGVuZ3RoICkgKTtcclxuICBjb25zdCBlbXB0eSA9ICcgJy5yZXBlYXQoIE1hdGgucm91bmQoICggMSAtIHByb2dyZXNzICkgKiBvcHRpb25zLnByb2dyZXNzQmFyTGVuZ3RoICkgKTtcclxuICBjb25zdCBuZXdsaW5lU3RyaW5nID0gbmV3bGluZSA/ICdcXG4nIDogJyc7XHJcbiAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoIGBcXHJbJHtkb3RzfSR7ZW1wdHl9XSAkeyggcHJvZ3Jlc3MgKiAxMDAgKS50b0ZpeGVkKCAyICl9JSR7bmV3bGluZVN0cmluZ31gICk7XHJcbn07Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBRSxRQUFTLENBQUM7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyx1QkFBdUJBLENBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUc7RUFDOUVBLE9BQU8sR0FBR1AsQ0FBQyxDQUFDUSxRQUFRLENBQUU7SUFDcEJDLGlCQUFpQixFQUFFLEVBQUUsQ0FBQztFQUN4QixDQUFDLEVBQUVGLE9BQVEsQ0FBQztFQUVaLElBQU1HLElBQUksR0FBRyxHQUFHLENBQUNDLE1BQU0sQ0FBRUMsSUFBSSxDQUFDQyxLQUFLLENBQUVSLFFBQVEsR0FBR0UsT0FBTyxDQUFDRSxpQkFBa0IsQ0FBRSxDQUFDO0VBQzdFLElBQU1LLEtBQUssR0FBRyxHQUFHLENBQUNILE1BQU0sQ0FBRUMsSUFBSSxDQUFDQyxLQUFLLENBQUUsQ0FBRSxDQUFDLEdBQUdSLFFBQVEsSUFBS0UsT0FBTyxDQUFDRSxpQkFBa0IsQ0FBRSxDQUFDO0VBQ3RGLElBQU1NLGFBQWEsR0FBR1QsT0FBTyxHQUFHLElBQUksR0FBRyxFQUFFO0VBQ3pDVSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsS0FBSyxPQUFBQyxNQUFBLENBQVFULElBQUksRUFBQVMsTUFBQSxDQUFHTCxLQUFLLFFBQUFLLE1BQUEsQ0FBSyxDQUFFZCxRQUFRLEdBQUcsR0FBRyxFQUFHZSxPQUFPLENBQUUsQ0FBRSxDQUFDLE9BQUFELE1BQUEsQ0FBSUosYUFBYSxDQUFHLENBQUM7QUFDbkcsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==