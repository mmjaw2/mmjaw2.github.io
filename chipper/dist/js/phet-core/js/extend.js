// Copyright 2013-2023, University of Colorado Boulder

/**
 * Like Underscore's _.extend and PHET_CORE/merge, but with hardcoded support for ES5 getters/setters. In general this
 * type shouldn't be used for phet's options pattern, and instead was designed to support extension for defining
 * mixins and object prototypes.
 *
 * See https://github.com/documentcloud/underscore/pull/986.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import phetCore from './phetCore.js';
function extend(obj, ...sources) {
  _.each(sources, source => {
    if (source) {
      for (const prop in source) {
        Object.defineProperty(obj, prop, Object.getOwnPropertyDescriptor(source, prop));
      }
    }
  });
  return obj;
}
phetCore.register('extend', extend);
export default extend;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwaGV0Q29yZSIsImV4dGVuZCIsIm9iaiIsInNvdXJjZXMiLCJfIiwiZWFjaCIsInNvdXJjZSIsInByb3AiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiZXh0ZW5kLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIExpa2UgVW5kZXJzY29yZSdzIF8uZXh0ZW5kIGFuZCBQSEVUX0NPUkUvbWVyZ2UsIGJ1dCB3aXRoIGhhcmRjb2RlZCBzdXBwb3J0IGZvciBFUzUgZ2V0dGVycy9zZXR0ZXJzLiBJbiBnZW5lcmFsIHRoaXNcclxuICogdHlwZSBzaG91bGRuJ3QgYmUgdXNlZCBmb3IgcGhldCdzIG9wdGlvbnMgcGF0dGVybiwgYW5kIGluc3RlYWQgd2FzIGRlc2lnbmVkIHRvIHN1cHBvcnQgZXh0ZW5zaW9uIGZvciBkZWZpbmluZ1xyXG4gKiBtaXhpbnMgYW5kIG9iamVjdCBwcm90b3R5cGVzLlxyXG4gKlxyXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2RvY3VtZW50Y2xvdWQvdW5kZXJzY29yZS9wdWxsLzk4Ni5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBwaGV0Q29yZSBmcm9tICcuL3BoZXRDb3JlLmpzJztcclxuXHJcbmZ1bmN0aW9uIGV4dGVuZDxUPiggb2JqOiBULCAuLi5zb3VyY2VzOiBBcnJheTxvYmplY3QgfCB1bmRlZmluZWQ+ICk6IFQge1xyXG4gIF8uZWFjaCggc291cmNlcywgc291cmNlID0+IHtcclxuICAgIGlmICggc291cmNlICkge1xyXG4gICAgICBmb3IgKCBjb25zdCBwcm9wIGluIHNvdXJjZSApIHtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoIG9iaiwgcHJvcCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciggc291cmNlLCBwcm9wICkhICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9ICk7XHJcbiAgcmV0dXJuIG9iajtcclxufVxyXG5cclxucGhldENvcmUucmVnaXN0ZXIoICdleHRlbmQnLCBleHRlbmQgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGV4dGVuZDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sZUFBZTtBQUVwQyxTQUFTQyxNQUFNQSxDQUFLQyxHQUFNLEVBQUUsR0FBR0MsT0FBa0MsRUFBTTtFQUNyRUMsQ0FBQyxDQUFDQyxJQUFJLENBQUVGLE9BQU8sRUFBRUcsTUFBTSxJQUFJO0lBQ3pCLElBQUtBLE1BQU0sRUFBRztNQUNaLEtBQU0sTUFBTUMsSUFBSSxJQUFJRCxNQUFNLEVBQUc7UUFDM0JFLE1BQU0sQ0FBQ0MsY0FBYyxDQUFFUCxHQUFHLEVBQUVLLElBQUksRUFBRUMsTUFBTSxDQUFDRSx3QkFBd0IsQ0FBRUosTUFBTSxFQUFFQyxJQUFLLENBQUcsQ0FBQztNQUN0RjtJQUNGO0VBQ0YsQ0FBRSxDQUFDO0VBQ0gsT0FBT0wsR0FBRztBQUNaO0FBRUFGLFFBQVEsQ0FBQ1csUUFBUSxDQUFFLFFBQVEsRUFBRVYsTUFBTyxDQUFDO0FBRXJDLGVBQWVBLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=