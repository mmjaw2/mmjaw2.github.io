// Copyright 2019-2023, University of Colorado Boulder

/**
 * swapObjectKeys tests
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import swapObjectKeys from './swapObjectKeys.js';
QUnit.module('swapObjectKeys');
QUnit.test('swapObjectKeys', assert => {
  let object = {
    x: 3,
    y: 4
  };
  swapObjectKeys(object, 'x', 'y');
  assert.ok(object.x === 4);
  assert.ok(object.y === 3);
  object = {
    x: 3,
    y: undefined
  };
  swapObjectKeys(object, 'x', 'y');
  assert.ok(object.x === undefined);
  assert.ok(object.hasOwnProperty('x'));
  assert.ok(object.y === 3);
  object = {
    x: 3,
    y: new RegExp('matchOnThis')
  };
  const regex = object.y; // store the reference
  swapObjectKeys(object, 'x', 'y');
  assert.ok(object.x === regex, 'reference to object');
  assert.ok(object.y === 3, 'reference to primitive');
  object = {
    x: 4
  };
  swapObjectKeys(object, 'x', 'y');
  assert.ok(object.y === 4);
  assert.ok(!Object.hasOwnProperty('x'));
  object = {
    otherStuff: 'hi'
  };
  swapObjectKeys(object, 'x', 'y');
  assert.ok(object.otherStuff === 'hi');
  assert.ok(!Object.hasOwnProperty('x'));
  assert.ok(!Object.hasOwnProperty('y'));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzd2FwT2JqZWN0S2V5cyIsIlFVbml0IiwibW9kdWxlIiwidGVzdCIsImFzc2VydCIsIm9iamVjdCIsIngiLCJ5Iiwib2siLCJ1bmRlZmluZWQiLCJoYXNPd25Qcm9wZXJ0eSIsIlJlZ0V4cCIsInJlZ2V4IiwiT2JqZWN0Iiwib3RoZXJTdHVmZiJdLCJzb3VyY2VzIjpbInN3YXBPYmplY3RLZXlzVGVzdHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogc3dhcE9iamVjdEtleXMgdGVzdHNcclxuICpcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBzd2FwT2JqZWN0S2V5cyBmcm9tICcuL3N3YXBPYmplY3RLZXlzLmpzJztcclxuaW1wb3J0IEludGVudGlvbmFsQW55IGZyb20gJy4vdHlwZXMvSW50ZW50aW9uYWxBbnkuanMnO1xyXG5cclxuUVVuaXQubW9kdWxlKCAnc3dhcE9iamVjdEtleXMnICk7XHJcblxyXG5RVW5pdC50ZXN0KCAnc3dhcE9iamVjdEtleXMnLCBhc3NlcnQgPT4ge1xyXG4gIGxldCBvYmplY3Q6IFJlY29yZDxzdHJpbmcsIEludGVudGlvbmFsQW55PiA9IHsgeDogMywgeTogNCB9O1xyXG4gIHN3YXBPYmplY3RLZXlzKCBvYmplY3QsICd4JywgJ3knICk7XHJcbiAgYXNzZXJ0Lm9rKCBvYmplY3QueCA9PT0gNCApO1xyXG4gIGFzc2VydC5vayggb2JqZWN0LnkgPT09IDMgKTtcclxuXHJcbiAgb2JqZWN0ID0geyB4OiAzLCB5OiB1bmRlZmluZWQgfTtcclxuICBzd2FwT2JqZWN0S2V5cyggb2JqZWN0LCAneCcsICd5JyApO1xyXG4gIGFzc2VydC5vayggb2JqZWN0LnggPT09IHVuZGVmaW5lZCApO1xyXG4gIGFzc2VydC5vayggb2JqZWN0Lmhhc093blByb3BlcnR5KCAneCcgKSApO1xyXG4gIGFzc2VydC5vayggb2JqZWN0LnkgPT09IDMgKTtcclxuXHJcbiAgb2JqZWN0ID0geyB4OiAzLCB5OiBuZXcgUmVnRXhwKCAnbWF0Y2hPblRoaXMnICkgfTtcclxuICBjb25zdCByZWdleCA9IG9iamVjdC55OyAvLyBzdG9yZSB0aGUgcmVmZXJlbmNlXHJcbiAgc3dhcE9iamVjdEtleXMoIG9iamVjdCwgJ3gnLCAneScgKTtcclxuICBhc3NlcnQub2soIG9iamVjdC54ID09PSByZWdleCwgJ3JlZmVyZW5jZSB0byBvYmplY3QnICk7XHJcbiAgYXNzZXJ0Lm9rKCBvYmplY3QueSA9PT0gMywgJ3JlZmVyZW5jZSB0byBwcmltaXRpdmUnICk7XHJcblxyXG4gIG9iamVjdCA9IHsgeDogNCB9O1xyXG4gIHN3YXBPYmplY3RLZXlzKCBvYmplY3QsICd4JywgJ3knICk7XHJcbiAgYXNzZXJ0Lm9rKCBvYmplY3QueSA9PT0gNCApO1xyXG4gIGFzc2VydC5vayggIU9iamVjdC5oYXNPd25Qcm9wZXJ0eSggJ3gnICkgKTtcclxuXHJcbiAgb2JqZWN0ID0geyBvdGhlclN0dWZmOiAnaGknIH07XHJcbiAgc3dhcE9iamVjdEtleXMoIG9iamVjdCwgJ3gnLCAneScgKTtcclxuICBhc3NlcnQub2soIG9iamVjdC5vdGhlclN0dWZmID09PSAnaGknICk7XHJcbiAgYXNzZXJ0Lm9rKCAhT2JqZWN0Lmhhc093blByb3BlcnR5KCAneCcgKSApO1xyXG4gIGFzc2VydC5vayggIU9iamVjdC5oYXNPd25Qcm9wZXJ0eSggJ3knICkgKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0scUJBQXFCO0FBR2hEQyxLQUFLLENBQUNDLE1BQU0sQ0FBRSxnQkFBaUIsQ0FBQztBQUVoQ0QsS0FBSyxDQUFDRSxJQUFJLENBQUUsZ0JBQWdCLEVBQUVDLE1BQU0sSUFBSTtFQUN0QyxJQUFJQyxNQUFzQyxHQUFHO0lBQUVDLENBQUMsRUFBRSxDQUFDO0lBQUVDLENBQUMsRUFBRTtFQUFFLENBQUM7RUFDM0RQLGNBQWMsQ0FBRUssTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFJLENBQUM7RUFDbENELE1BQU0sQ0FBQ0ksRUFBRSxDQUFFSCxNQUFNLENBQUNDLENBQUMsS0FBSyxDQUFFLENBQUM7RUFDM0JGLE1BQU0sQ0FBQ0ksRUFBRSxDQUFFSCxNQUFNLENBQUNFLENBQUMsS0FBSyxDQUFFLENBQUM7RUFFM0JGLE1BQU0sR0FBRztJQUFFQyxDQUFDLEVBQUUsQ0FBQztJQUFFQyxDQUFDLEVBQUVFO0VBQVUsQ0FBQztFQUMvQlQsY0FBYyxDQUFFSyxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUNsQ0QsTUFBTSxDQUFDSSxFQUFFLENBQUVILE1BQU0sQ0FBQ0MsQ0FBQyxLQUFLRyxTQUFVLENBQUM7RUFDbkNMLE1BQU0sQ0FBQ0ksRUFBRSxDQUFFSCxNQUFNLENBQUNLLGNBQWMsQ0FBRSxHQUFJLENBQUUsQ0FBQztFQUN6Q04sTUFBTSxDQUFDSSxFQUFFLENBQUVILE1BQU0sQ0FBQ0UsQ0FBQyxLQUFLLENBQUUsQ0FBQztFQUUzQkYsTUFBTSxHQUFHO0lBQUVDLENBQUMsRUFBRSxDQUFDO0lBQUVDLENBQUMsRUFBRSxJQUFJSSxNQUFNLENBQUUsYUFBYztFQUFFLENBQUM7RUFDakQsTUFBTUMsS0FBSyxHQUFHUCxNQUFNLENBQUNFLENBQUMsQ0FBQyxDQUFDO0VBQ3hCUCxjQUFjLENBQUVLLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBSSxDQUFDO0VBQ2xDRCxNQUFNLENBQUNJLEVBQUUsQ0FBRUgsTUFBTSxDQUFDQyxDQUFDLEtBQUtNLEtBQUssRUFBRSxxQkFBc0IsQ0FBQztFQUN0RFIsTUFBTSxDQUFDSSxFQUFFLENBQUVILE1BQU0sQ0FBQ0UsQ0FBQyxLQUFLLENBQUMsRUFBRSx3QkFBeUIsQ0FBQztFQUVyREYsTUFBTSxHQUFHO0lBQUVDLENBQUMsRUFBRTtFQUFFLENBQUM7RUFDakJOLGNBQWMsQ0FBRUssTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFJLENBQUM7RUFDbENELE1BQU0sQ0FBQ0ksRUFBRSxDQUFFSCxNQUFNLENBQUNFLENBQUMsS0FBSyxDQUFFLENBQUM7RUFDM0JILE1BQU0sQ0FBQ0ksRUFBRSxDQUFFLENBQUNLLE1BQU0sQ0FBQ0gsY0FBYyxDQUFFLEdBQUksQ0FBRSxDQUFDO0VBRTFDTCxNQUFNLEdBQUc7SUFBRVMsVUFBVSxFQUFFO0VBQUssQ0FBQztFQUM3QmQsY0FBYyxDQUFFSyxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUNsQ0QsTUFBTSxDQUFDSSxFQUFFLENBQUVILE1BQU0sQ0FBQ1MsVUFBVSxLQUFLLElBQUssQ0FBQztFQUN2Q1YsTUFBTSxDQUFDSSxFQUFFLENBQUUsQ0FBQ0ssTUFBTSxDQUFDSCxjQUFjLENBQUUsR0FBSSxDQUFFLENBQUM7RUFDMUNOLE1BQU0sQ0FBQ0ksRUFBRSxDQUFFLENBQUNLLE1BQU0sQ0FBQ0gsY0FBYyxDQUFFLEdBQUksQ0FBRSxDQUFDO0FBQzVDLENBQUUsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==