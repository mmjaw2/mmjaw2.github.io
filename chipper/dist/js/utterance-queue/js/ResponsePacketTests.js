// Copyright 2021-2024, University of Colorado Boulder

/**
 * QUnit tests for ResponsePacket
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import ResponsePacket from './ResponsePacket.js';
QUnit.module('ResponsePacket');
QUnit.test('ResponsePacket.copy()', async assert => {
  let x = new ResponsePacket({
    nameResponse: 'nameResponse',
    objectResponse: 'objectResponse',
    contextResponse: 'contextResponse'
  });
  const testIt = message => {
    assert.ok(x.nameResponse === 'nameResponse', `nameResponse: ${message}`);
    assert.ok(x.objectResponse === 'objectResponse', `objectResponse: ${message}`);
    assert.ok(x.contextResponse === 'contextResponse', `contextResponse: ${message}`);
    assert.ok(x.hintResponse === null, `hintResponse: ${message}`);
    assert.ok(x.ignoreProperties === new ResponsePacket().ignoreProperties, `ignoreProperties: ${message}`);
  };
  testIt('fromConstructor');
  x = x.copy();
  testIt('fromCopy');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZXNwb25zZVBhY2tldCIsIlFVbml0IiwibW9kdWxlIiwidGVzdCIsImFzc2VydCIsIngiLCJuYW1lUmVzcG9uc2UiLCJvYmplY3RSZXNwb25zZSIsImNvbnRleHRSZXNwb25zZSIsInRlc3RJdCIsIm1lc3NhZ2UiLCJvayIsImhpbnRSZXNwb25zZSIsImlnbm9yZVByb3BlcnRpZXMiLCJjb3B5Il0sInNvdXJjZXMiOlsiUmVzcG9uc2VQYWNrZXRUZXN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBRVW5pdCB0ZXN0cyBmb3IgUmVzcG9uc2VQYWNrZXRcclxuICpcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBSZXNwb25zZVBhY2tldCBmcm9tICcuL1Jlc3BvbnNlUGFja2V0LmpzJztcclxuXHJcblFVbml0Lm1vZHVsZSggJ1Jlc3BvbnNlUGFja2V0JyApO1xyXG5cclxuUVVuaXQudGVzdCggJ1Jlc3BvbnNlUGFja2V0LmNvcHkoKScsIGFzeW5jIGFzc2VydCA9PiB7XHJcblxyXG4gIGxldCB4ID0gbmV3IFJlc3BvbnNlUGFja2V0KCB7XHJcbiAgICBuYW1lUmVzcG9uc2U6ICduYW1lUmVzcG9uc2UnLFxyXG4gICAgb2JqZWN0UmVzcG9uc2U6ICdvYmplY3RSZXNwb25zZScsXHJcbiAgICBjb250ZXh0UmVzcG9uc2U6ICdjb250ZXh0UmVzcG9uc2UnXHJcbiAgfSApO1xyXG5cclxuICBjb25zdCB0ZXN0SXQgPSAoIG1lc3NhZ2U6IHN0cmluZyApID0+IHtcclxuXHJcbiAgICBhc3NlcnQub2soIHgubmFtZVJlc3BvbnNlID09PSAnbmFtZVJlc3BvbnNlJywgYG5hbWVSZXNwb25zZTogJHttZXNzYWdlfWAgKTtcclxuICAgIGFzc2VydC5vayggeC5vYmplY3RSZXNwb25zZSA9PT0gJ29iamVjdFJlc3BvbnNlJywgYG9iamVjdFJlc3BvbnNlOiAke21lc3NhZ2V9YCApO1xyXG4gICAgYXNzZXJ0Lm9rKCB4LmNvbnRleHRSZXNwb25zZSA9PT0gJ2NvbnRleHRSZXNwb25zZScsIGBjb250ZXh0UmVzcG9uc2U6ICR7bWVzc2FnZX1gICk7XHJcbiAgICBhc3NlcnQub2soIHguaGludFJlc3BvbnNlID09PSBudWxsLCBgaGludFJlc3BvbnNlOiAke21lc3NhZ2V9YCApO1xyXG4gICAgYXNzZXJ0Lm9rKCB4Lmlnbm9yZVByb3BlcnRpZXMgPT09IG5ldyBSZXNwb25zZVBhY2tldCgpLmlnbm9yZVByb3BlcnRpZXMsIGBpZ25vcmVQcm9wZXJ0aWVzOiAke21lc3NhZ2V9YCApO1xyXG4gIH07XHJcblxyXG4gIHRlc3RJdCggJ2Zyb21Db25zdHJ1Y3RvcicgKTtcclxuXHJcbiAgeCA9IHguY29weSgpO1xyXG5cclxuICB0ZXN0SXQoICdmcm9tQ29weScgKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0scUJBQXFCO0FBRWhEQyxLQUFLLENBQUNDLE1BQU0sQ0FBRSxnQkFBaUIsQ0FBQztBQUVoQ0QsS0FBSyxDQUFDRSxJQUFJLENBQUUsdUJBQXVCLEVBQUUsTUFBTUMsTUFBTSxJQUFJO0VBRW5ELElBQUlDLENBQUMsR0FBRyxJQUFJTCxjQUFjLENBQUU7SUFDMUJNLFlBQVksRUFBRSxjQUFjO0lBQzVCQyxjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDQyxlQUFlLEVBQUU7RUFDbkIsQ0FBRSxDQUFDO0VBRUgsTUFBTUMsTUFBTSxHQUFLQyxPQUFlLElBQU07SUFFcENOLE1BQU0sQ0FBQ08sRUFBRSxDQUFFTixDQUFDLENBQUNDLFlBQVksS0FBSyxjQUFjLEVBQUcsaUJBQWdCSSxPQUFRLEVBQUUsQ0FBQztJQUMxRU4sTUFBTSxDQUFDTyxFQUFFLENBQUVOLENBQUMsQ0FBQ0UsY0FBYyxLQUFLLGdCQUFnQixFQUFHLG1CQUFrQkcsT0FBUSxFQUFFLENBQUM7SUFDaEZOLE1BQU0sQ0FBQ08sRUFBRSxDQUFFTixDQUFDLENBQUNHLGVBQWUsS0FBSyxpQkFBaUIsRUFBRyxvQkFBbUJFLE9BQVEsRUFBRSxDQUFDO0lBQ25GTixNQUFNLENBQUNPLEVBQUUsQ0FBRU4sQ0FBQyxDQUFDTyxZQUFZLEtBQUssSUFBSSxFQUFHLGlCQUFnQkYsT0FBUSxFQUFFLENBQUM7SUFDaEVOLE1BQU0sQ0FBQ08sRUFBRSxDQUFFTixDQUFDLENBQUNRLGdCQUFnQixLQUFLLElBQUliLGNBQWMsQ0FBQyxDQUFDLENBQUNhLGdCQUFnQixFQUFHLHFCQUFvQkgsT0FBUSxFQUFFLENBQUM7RUFDM0csQ0FBQztFQUVERCxNQUFNLENBQUUsaUJBQWtCLENBQUM7RUFFM0JKLENBQUMsR0FBR0EsQ0FBQyxDQUFDUyxJQUFJLENBQUMsQ0FBQztFQUVaTCxNQUFNLENBQUUsVUFBVyxDQUFDO0FBQ3RCLENBQUUsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==