// Copyright 2016-2023, University of Colorado Boulder

/**
 * ScreenView for the 'Intro' screen
 * @author Andrea Lin (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import { Node } from '../../../../scenery/js/imports.js';
import ProjectileMotionScreenView from '../../common/view/ProjectileMotionScreenView.js';
import ProjectileMotionViewProperties from '../../common/view/ProjectileMotionViewProperties.js';
import projectileMotion from '../../projectileMotion.js';
import IntroProjectileControlPanel from './IntroProjectileControlPanel.js';
import IntroVectorsControlPanel from './IntroVectorsControlPanel.js';
class IntroScreenView extends ProjectileMotionScreenView {
  /**
   * @param {IntroModel} model
   * @param {Object} [options]
   */
  constructor(model, options) {
    options = merge({
      addFlatirons: false
    }, options);

    // contains Properties about vector visibility, used in super class
    const viewProperties = new ProjectileMotionViewProperties({
      tandem: options.tandem.createTandem('viewProperties'),
      forceProperties: false
    });

    // acts as listParent for the projectile dropdown box
    const comboBoxListParent = new Node();
    const projectileControlPanel = new IntroProjectileControlPanel(model.objectTypes, model.selectedProjectileObjectTypeProperty, comboBoxListParent, model.projectileMassProperty, model.projectileDiameterProperty, model.projectileDragCoefficientProperty, model.airResistanceOnProperty, {
      tandem: options.tandem.createTandem('projectileControlPanel')
    });
    super(model, projectileControlPanel, new IntroVectorsControlPanel(viewProperties, {
      tandem: options.tandem.createTandem('vectorsControlPanel')
    }), viewProperties, options);

    // @private
    this.projectilePanel = projectileControlPanel;

    // insert dropdown right on top of the right-side panels
    this.insertChild(this.indexOfChild(this.topRightPanel) + 1, comboBoxListParent);
  }

  /**
   * Layout
   * @param {Bounds2} viewBounds
   * @public (joist-internal)
   * @override
   */
  layout(viewBounds) {
    this.projectilePanel.hideComboBoxList();
    super.layout(viewBounds);
  }
}
projectileMotion.register('IntroScreenView', IntroScreenView);
export default IntroScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIk5vZGUiLCJQcm9qZWN0aWxlTW90aW9uU2NyZWVuVmlldyIsIlByb2plY3RpbGVNb3Rpb25WaWV3UHJvcGVydGllcyIsInByb2plY3RpbGVNb3Rpb24iLCJJbnRyb1Byb2plY3RpbGVDb250cm9sUGFuZWwiLCJJbnRyb1ZlY3RvcnNDb250cm9sUGFuZWwiLCJJbnRyb1NjcmVlblZpZXciLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwib3B0aW9ucyIsImFkZEZsYXRpcm9ucyIsInZpZXdQcm9wZXJ0aWVzIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiZm9yY2VQcm9wZXJ0aWVzIiwiY29tYm9Cb3hMaXN0UGFyZW50IiwicHJvamVjdGlsZUNvbnRyb2xQYW5lbCIsIm9iamVjdFR5cGVzIiwic2VsZWN0ZWRQcm9qZWN0aWxlT2JqZWN0VHlwZVByb3BlcnR5IiwicHJvamVjdGlsZU1hc3NQcm9wZXJ0eSIsInByb2plY3RpbGVEaWFtZXRlclByb3BlcnR5IiwicHJvamVjdGlsZURyYWdDb2VmZmljaWVudFByb3BlcnR5IiwiYWlyUmVzaXN0YW5jZU9uUHJvcGVydHkiLCJwcm9qZWN0aWxlUGFuZWwiLCJpbnNlcnRDaGlsZCIsImluZGV4T2ZDaGlsZCIsInRvcFJpZ2h0UGFuZWwiLCJsYXlvdXQiLCJ2aWV3Qm91bmRzIiwiaGlkZUNvbWJvQm94TGlzdCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiSW50cm9TY3JlZW5WaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE2LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFNjcmVlblZpZXcgZm9yIHRoZSAnSW50cm8nIHNjcmVlblxyXG4gKiBAYXV0aG9yIEFuZHJlYSBMaW4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUHJvamVjdGlsZU1vdGlvblNjcmVlblZpZXcgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvUHJvamVjdGlsZU1vdGlvblNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgUHJvamVjdGlsZU1vdGlvblZpZXdQcm9wZXJ0aWVzIGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L1Byb2plY3RpbGVNb3Rpb25WaWV3UHJvcGVydGllcy5qcyc7XHJcbmltcG9ydCBwcm9qZWN0aWxlTW90aW9uIGZyb20gJy4uLy4uL3Byb2plY3RpbGVNb3Rpb24uanMnO1xyXG5pbXBvcnQgSW50cm9Qcm9qZWN0aWxlQ29udHJvbFBhbmVsIGZyb20gJy4vSW50cm9Qcm9qZWN0aWxlQ29udHJvbFBhbmVsLmpzJztcclxuaW1wb3J0IEludHJvVmVjdG9yc0NvbnRyb2xQYW5lbCBmcm9tICcuL0ludHJvVmVjdG9yc0NvbnRyb2xQYW5lbC5qcyc7XHJcblxyXG5jbGFzcyBJbnRyb1NjcmVlblZpZXcgZXh0ZW5kcyBQcm9qZWN0aWxlTW90aW9uU2NyZWVuVmlldyB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7SW50cm9Nb2RlbH0gbW9kZWxcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG1vZGVsLCBvcHRpb25zICkge1xyXG5cclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBhZGRGbGF0aXJvbnM6IGZhbHNlXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gY29udGFpbnMgUHJvcGVydGllcyBhYm91dCB2ZWN0b3IgdmlzaWJpbGl0eSwgdXNlZCBpbiBzdXBlciBjbGFzc1xyXG4gICAgY29uc3Qgdmlld1Byb3BlcnRpZXMgPSBuZXcgUHJvamVjdGlsZU1vdGlvblZpZXdQcm9wZXJ0aWVzKCB7XHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlld1Byb3BlcnRpZXMnICksXHJcbiAgICAgIGZvcmNlUHJvcGVydGllczogZmFsc2VcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBhY3RzIGFzIGxpc3RQYXJlbnQgZm9yIHRoZSBwcm9qZWN0aWxlIGRyb3Bkb3duIGJveFxyXG4gICAgY29uc3QgY29tYm9Cb3hMaXN0UGFyZW50ID0gbmV3IE5vZGUoKTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0aWxlQ29udHJvbFBhbmVsID0gbmV3IEludHJvUHJvamVjdGlsZUNvbnRyb2xQYW5lbChcclxuICAgICAgbW9kZWwub2JqZWN0VHlwZXMsXHJcbiAgICAgIG1vZGVsLnNlbGVjdGVkUHJvamVjdGlsZU9iamVjdFR5cGVQcm9wZXJ0eSxcclxuICAgICAgY29tYm9Cb3hMaXN0UGFyZW50LFxyXG4gICAgICBtb2RlbC5wcm9qZWN0aWxlTWFzc1Byb3BlcnR5LFxyXG4gICAgICBtb2RlbC5wcm9qZWN0aWxlRGlhbWV0ZXJQcm9wZXJ0eSxcclxuICAgICAgbW9kZWwucHJvamVjdGlsZURyYWdDb2VmZmljaWVudFByb3BlcnR5LFxyXG4gICAgICBtb2RlbC5haXJSZXNpc3RhbmNlT25Qcm9wZXJ0eSxcclxuICAgICAgeyB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3Byb2plY3RpbGVDb250cm9sUGFuZWwnICkgfVxyXG4gICAgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgbW9kZWwsXHJcbiAgICAgIHByb2plY3RpbGVDb250cm9sUGFuZWwsXHJcbiAgICAgIG5ldyBJbnRyb1ZlY3RvcnNDb250cm9sUGFuZWwoIHZpZXdQcm9wZXJ0aWVzLCB7IHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmVjdG9yc0NvbnRyb2xQYW5lbCcgKSB9ICksXHJcbiAgICAgIHZpZXdQcm9wZXJ0aWVzLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG5cclxuICAgIC8vIEBwcml2YXRlXHJcbiAgICB0aGlzLnByb2plY3RpbGVQYW5lbCA9IHByb2plY3RpbGVDb250cm9sUGFuZWw7XHJcblxyXG4gICAgLy8gaW5zZXJ0IGRyb3Bkb3duIHJpZ2h0IG9uIHRvcCBvZiB0aGUgcmlnaHQtc2lkZSBwYW5lbHNcclxuICAgIHRoaXMuaW5zZXJ0Q2hpbGQoIHRoaXMuaW5kZXhPZkNoaWxkKCB0aGlzLnRvcFJpZ2h0UGFuZWwgKSArIDEsIGNvbWJvQm94TGlzdFBhcmVudCApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTGF5b3V0XHJcbiAgICogQHBhcmFtIHtCb3VuZHMyfSB2aWV3Qm91bmRzXHJcbiAgICogQHB1YmxpYyAoam9pc3QtaW50ZXJuYWwpXHJcbiAgICogQG92ZXJyaWRlXHJcbiAgICovXHJcbiAgbGF5b3V0KCB2aWV3Qm91bmRzICkge1xyXG4gICAgdGhpcy5wcm9qZWN0aWxlUGFuZWwuaGlkZUNvbWJvQm94TGlzdCgpO1xyXG4gICAgc3VwZXIubGF5b3V0KCB2aWV3Qm91bmRzICk7XHJcbiAgfVxyXG59XHJcblxyXG5wcm9qZWN0aWxlTW90aW9uLnJlZ2lzdGVyKCAnSW50cm9TY3JlZW5WaWV3JywgSW50cm9TY3JlZW5WaWV3ICk7XHJcbmV4cG9ydCBkZWZhdWx0IEludHJvU2NyZWVuVmlldzsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQywwQkFBMEIsTUFBTSxpREFBaUQ7QUFDeEYsT0FBT0MsOEJBQThCLE1BQU0scURBQXFEO0FBQ2hHLE9BQU9DLGdCQUFnQixNQUFNLDJCQUEyQjtBQUN4RCxPQUFPQywyQkFBMkIsTUFBTSxrQ0FBa0M7QUFDMUUsT0FBT0Msd0JBQXdCLE1BQU0sK0JBQStCO0FBRXBFLE1BQU1DLGVBQWUsU0FBU0wsMEJBQTBCLENBQUM7RUFFdkQ7QUFDRjtBQUNBO0FBQ0E7RUFDRU0sV0FBV0EsQ0FBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUc7SUFFNUJBLE9BQU8sR0FBR1YsS0FBSyxDQUFFO01BQ2ZXLFlBQVksRUFBRTtJQUNoQixDQUFDLEVBQUVELE9BQVEsQ0FBQzs7SUFFWjtJQUNBLE1BQU1FLGNBQWMsR0FBRyxJQUFJVCw4QkFBOEIsQ0FBRTtNQUN6RFUsTUFBTSxFQUFFSCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLGdCQUFpQixDQUFDO01BQ3ZEQyxlQUFlLEVBQUU7SUFDbkIsQ0FBRSxDQUFDOztJQUVIO0lBQ0EsTUFBTUMsa0JBQWtCLEdBQUcsSUFBSWYsSUFBSSxDQUFDLENBQUM7SUFFckMsTUFBTWdCLHNCQUFzQixHQUFHLElBQUlaLDJCQUEyQixDQUM1REksS0FBSyxDQUFDUyxXQUFXLEVBQ2pCVCxLQUFLLENBQUNVLG9DQUFvQyxFQUMxQ0gsa0JBQWtCLEVBQ2xCUCxLQUFLLENBQUNXLHNCQUFzQixFQUM1QlgsS0FBSyxDQUFDWSwwQkFBMEIsRUFDaENaLEtBQUssQ0FBQ2EsaUNBQWlDLEVBQ3ZDYixLQUFLLENBQUNjLHVCQUF1QixFQUM3QjtNQUFFVixNQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFBTSxDQUFDQyxZQUFZLENBQUUsd0JBQXlCO0lBQUUsQ0FDcEUsQ0FBQztJQUVELEtBQUssQ0FDSEwsS0FBSyxFQUNMUSxzQkFBc0IsRUFDdEIsSUFBSVgsd0JBQXdCLENBQUVNLGNBQWMsRUFBRTtNQUFFQyxNQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFBTSxDQUFDQyxZQUFZLENBQUUscUJBQXNCO0lBQUUsQ0FBRSxDQUFDLEVBQ2hIRixjQUFjLEVBQ2RGLE9BQ0YsQ0FBQzs7SUFFRDtJQUNBLElBQUksQ0FBQ2MsZUFBZSxHQUFHUCxzQkFBc0I7O0lBRTdDO0lBQ0EsSUFBSSxDQUFDUSxXQUFXLENBQUUsSUFBSSxDQUFDQyxZQUFZLENBQUUsSUFBSSxDQUFDQyxhQUFjLENBQUMsR0FBRyxDQUFDLEVBQUVYLGtCQUFtQixDQUFDO0VBQ3JGOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFWSxNQUFNQSxDQUFFQyxVQUFVLEVBQUc7SUFDbkIsSUFBSSxDQUFDTCxlQUFlLENBQUNNLGdCQUFnQixDQUFDLENBQUM7SUFDdkMsS0FBSyxDQUFDRixNQUFNLENBQUVDLFVBQVcsQ0FBQztFQUM1QjtBQUNGO0FBRUF6QixnQkFBZ0IsQ0FBQzJCLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRXhCLGVBQWdCLENBQUM7QUFDL0QsZUFBZUEsZUFBZSIsImlnbm9yZUxpc3QiOltdfQ==