// Copyright 2014-2024, University of Colorado Boulder

/**
 * Main ScreenView container for demonstrating and testing the various buttons.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import sun from '../../sun.js';
import DemosScreenView from '../DemosScreenView.js';
import demoAquaRadioButtonGroup from './demoAquaRadioButtonGroup.js';
import demoRadioButtons from './demoRadioButtons.js';
import demoMomentaryButtons from './demoMomentaryButtons.js';
import demoPushButtons from './demoPushButtons.js';
import demoRectangularRadioButtonGroup from './demoRectangularRadioButtonGroup.js';
import demoToggleButtons from './demoToggleButtons.js';
export default class ButtonsScreenView extends DemosScreenView {
  constructor(providedOptions) {
    // To add a demo, add an entry here of type DemoItemData.
    const demos = [{
      label: 'AquaRadioButtonGroup',
      createNode: demoAquaRadioButtonGroup
    }, {
      label: 'MomentaryButtons',
      createNode: demoMomentaryButtons
    }, {
      label: 'PushButtons',
      createNode: demoPushButtons
    }, {
      label: 'RadioButtons',
      createNode: demoRadioButtons
    }, {
      label: 'RadioButtons',
      createNode: demoRadioButtons
    }, {
      label: 'RectangularRadioButtonGroup',
      createNode: demoRectangularRadioButtonGroup
    }, {
      label: 'ToggleButtons',
      createNode: demoToggleButtons
    }];
    super(demos, providedOptions);
  }
}
sun.register('ButtonsScreenView', ButtonsScreenView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdW4iLCJEZW1vc1NjcmVlblZpZXciLCJkZW1vQXF1YVJhZGlvQnV0dG9uR3JvdXAiLCJkZW1vUmFkaW9CdXR0b25zIiwiZGVtb01vbWVudGFyeUJ1dHRvbnMiLCJkZW1vUHVzaEJ1dHRvbnMiLCJkZW1vUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwIiwiZGVtb1RvZ2dsZUJ1dHRvbnMiLCJCdXR0b25zU2NyZWVuVmlldyIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwiZGVtb3MiLCJsYWJlbCIsImNyZWF0ZU5vZGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkJ1dHRvbnNTY3JlZW5WaWV3LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE1haW4gU2NyZWVuVmlldyBjb250YWluZXIgZm9yIGRlbW9uc3RyYXRpbmcgYW5kIHRlc3RpbmcgdGhlIHZhcmlvdXMgYnV0dG9ucy5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jbyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBzdW4gZnJvbSAnLi4vLi4vc3VuLmpzJztcclxuaW1wb3J0IERlbW9zU2NyZWVuVmlldywgeyBEZW1vc1NjcmVlblZpZXdPcHRpb25zIH0gZnJvbSAnLi4vRGVtb3NTY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IGRlbW9BcXVhUmFkaW9CdXR0b25Hcm91cCBmcm9tICcuL2RlbW9BcXVhUmFkaW9CdXR0b25Hcm91cC5qcyc7XHJcbmltcG9ydCBkZW1vUmFkaW9CdXR0b25zIGZyb20gJy4vZGVtb1JhZGlvQnV0dG9ucy5qcyc7XHJcbmltcG9ydCBkZW1vTW9tZW50YXJ5QnV0dG9ucyBmcm9tICcuL2RlbW9Nb21lbnRhcnlCdXR0b25zLmpzJztcclxuaW1wb3J0IGRlbW9QdXNoQnV0dG9ucyBmcm9tICcuL2RlbW9QdXNoQnV0dG9ucy5qcyc7XHJcbmltcG9ydCBkZW1vUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwIGZyb20gJy4vZGVtb1JlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cC5qcyc7XHJcbmltcG9ydCBkZW1vVG9nZ2xlQnV0dG9ucyBmcm9tICcuL2RlbW9Ub2dnbGVCdXR0b25zLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG50eXBlIEJ1dHRvbnNTY3JlZW5WaWV3T3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPERlbW9zU2NyZWVuVmlld09wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1dHRvbnNTY3JlZW5WaWV3IGV4dGVuZHMgRGVtb3NTY3JlZW5WaWV3IHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogQnV0dG9uc1NjcmVlblZpZXdPcHRpb25zICkge1xyXG5cclxuICAgIC8vIFRvIGFkZCBhIGRlbW8sIGFkZCBhbiBlbnRyeSBoZXJlIG9mIHR5cGUgRGVtb0l0ZW1EYXRhLlxyXG4gICAgY29uc3QgZGVtb3MgPSBbXHJcbiAgICAgIHsgbGFiZWw6ICdBcXVhUmFkaW9CdXR0b25Hcm91cCcsIGNyZWF0ZU5vZGU6IGRlbW9BcXVhUmFkaW9CdXR0b25Hcm91cCB9LFxyXG4gICAgICB7IGxhYmVsOiAnTW9tZW50YXJ5QnV0dG9ucycsIGNyZWF0ZU5vZGU6IGRlbW9Nb21lbnRhcnlCdXR0b25zIH0sXHJcbiAgICAgIHsgbGFiZWw6ICdQdXNoQnV0dG9ucycsIGNyZWF0ZU5vZGU6IGRlbW9QdXNoQnV0dG9ucyB9LFxyXG4gICAgICB7IGxhYmVsOiAnUmFkaW9CdXR0b25zJywgY3JlYXRlTm9kZTogZGVtb1JhZGlvQnV0dG9ucyB9LFxyXG4gICAgICB7IGxhYmVsOiAnUmFkaW9CdXR0b25zJywgY3JlYXRlTm9kZTogZGVtb1JhZGlvQnV0dG9ucyB9LFxyXG4gICAgICB7IGxhYmVsOiAnUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwJywgY3JlYXRlTm9kZTogZGVtb1JlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCB9LFxyXG4gICAgICB7IGxhYmVsOiAnVG9nZ2xlQnV0dG9ucycsIGNyZWF0ZU5vZGU6IGRlbW9Ub2dnbGVCdXR0b25zIH1cclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoIGRlbW9zLCBwcm92aWRlZE9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnN1bi5yZWdpc3RlciggJ0J1dHRvbnNTY3JlZW5WaWV3JywgQnV0dG9uc1NjcmVlblZpZXcgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUEsT0FBT0EsR0FBRyxNQUFNLGNBQWM7QUFDOUIsT0FBT0MsZUFBZSxNQUFrQyx1QkFBdUI7QUFDL0UsT0FBT0Msd0JBQXdCLE1BQU0sK0JBQStCO0FBQ3BFLE9BQU9DLGdCQUFnQixNQUFNLHVCQUF1QjtBQUNwRCxPQUFPQyxvQkFBb0IsTUFBTSwyQkFBMkI7QUFDNUQsT0FBT0MsZUFBZSxNQUFNLHNCQUFzQjtBQUNsRCxPQUFPQywrQkFBK0IsTUFBTSxzQ0FBc0M7QUFDbEYsT0FBT0MsaUJBQWlCLE1BQU0sd0JBQXdCO0FBS3RELGVBQWUsTUFBTUMsaUJBQWlCLFNBQVNQLGVBQWUsQ0FBQztFQUN0RFEsV0FBV0EsQ0FBRUMsZUFBeUMsRUFBRztJQUU5RDtJQUNBLE1BQU1DLEtBQUssR0FBRyxDQUNaO01BQUVDLEtBQUssRUFBRSxzQkFBc0I7TUFBRUMsVUFBVSxFQUFFWDtJQUF5QixDQUFDLEVBQ3ZFO01BQUVVLEtBQUssRUFBRSxrQkFBa0I7TUFBRUMsVUFBVSxFQUFFVDtJQUFxQixDQUFDLEVBQy9EO01BQUVRLEtBQUssRUFBRSxhQUFhO01BQUVDLFVBQVUsRUFBRVI7SUFBZ0IsQ0FBQyxFQUNyRDtNQUFFTyxLQUFLLEVBQUUsY0FBYztNQUFFQyxVQUFVLEVBQUVWO0lBQWlCLENBQUMsRUFDdkQ7TUFBRVMsS0FBSyxFQUFFLGNBQWM7TUFBRUMsVUFBVSxFQUFFVjtJQUFpQixDQUFDLEVBQ3ZEO01BQUVTLEtBQUssRUFBRSw2QkFBNkI7TUFBRUMsVUFBVSxFQUFFUDtJQUFnQyxDQUFDLEVBQ3JGO01BQUVNLEtBQUssRUFBRSxlQUFlO01BQUVDLFVBQVUsRUFBRU47SUFBa0IsQ0FBQyxDQUMxRDtJQUVELEtBQUssQ0FBRUksS0FBSyxFQUFFRCxlQUFnQixDQUFDO0VBQ2pDO0FBQ0Y7QUFFQVYsR0FBRyxDQUFDYyxRQUFRLENBQUUsbUJBQW1CLEVBQUVOLGlCQUFrQixDQUFDIiwiaWdub3JlTGlzdCI6W119