// Copyright 2013-2024, University of Colorado Boulder

/**
 * This toggle button uses a boolean Property and a trueNode and falseNode to display its content.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import Tandem from '../../../tandem/js/Tandem.js';
import BooleanToggleNode from '../BooleanToggleNode.js';
import sun from '../sun.js';
import RectangularToggleButton from './RectangularToggleButton.js';
import optionize from '../../../phet-core/js/optionize.js';
export default class BooleanRectangularToggleButton extends RectangularToggleButton {
  /**
   * @param booleanProperty
   * @param trueNode - shown when booleanProperty is true
   * @param falseNode - shown when booleanProperty is false
   * @param providedOptions?
   */
  constructor(booleanProperty, trueNode, falseNode, providedOptions) {
    const content = new BooleanToggleNode(booleanProperty, trueNode, falseNode);
    const options = optionize()({
      content: content,
      tandem: Tandem.REQUIRED
    }, providedOptions);
    super(booleanProperty, false, true, options);
    this.disposeBooleanRectangularToggleButton = () => {
      content.dispose();
    };
  }
  dispose() {
    this.disposeBooleanRectangularToggleButton();
    super.dispose();
  }
}
sun.register('BooleanRectangularToggleButton', BooleanRectangularToggleButton);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYW5kZW0iLCJCb29sZWFuVG9nZ2xlTm9kZSIsInN1biIsIlJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIiwib3B0aW9uaXplIiwiQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIiwiY29uc3RydWN0b3IiLCJib29sZWFuUHJvcGVydHkiLCJ0cnVlTm9kZSIsImZhbHNlTm9kZSIsInByb3ZpZGVkT3B0aW9ucyIsImNvbnRlbnQiLCJvcHRpb25zIiwidGFuZGVtIiwiUkVRVUlSRUQiLCJkaXNwb3NlQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIiwiZGlzcG9zZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoaXMgdG9nZ2xlIGJ1dHRvbiB1c2VzIGEgYm9vbGVhbiBQcm9wZXJ0eSBhbmQgYSB0cnVlTm9kZSBhbmQgZmFsc2VOb2RlIHRvIGRpc3BsYXkgaXRzIGNvbnRlbnQuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY28gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEJvb2xlYW5Ub2dnbGVOb2RlIGZyb20gJy4uL0Jvb2xlYW5Ub2dnbGVOb2RlLmpzJztcclxuaW1wb3J0IHN1biBmcm9tICcuLi9zdW4uanMnO1xyXG5pbXBvcnQgUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24sIHsgUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b25PcHRpb25zIH0gZnJvbSAnLi9SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbi5qcyc7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbmV4cG9ydCB0eXBlIEJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbk9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFN0cmljdE9taXQ8UmVjdGFuZ3VsYXJUb2dnbGVCdXR0b25PcHRpb25zLCAnY29udGVudCc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIGV4dGVuZHMgUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b248Ym9vbGVhbj4ge1xyXG5cclxuICBwcml2YXRlIHJlYWRvbmx5IGRpc3Bvc2VCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b246ICgpID0+IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBib29sZWFuUHJvcGVydHlcclxuICAgKiBAcGFyYW0gdHJ1ZU5vZGUgLSBzaG93biB3aGVuIGJvb2xlYW5Qcm9wZXJ0eSBpcyB0cnVlXHJcbiAgICogQHBhcmFtIGZhbHNlTm9kZSAtIHNob3duIHdoZW4gYm9vbGVhblByb3BlcnR5IGlzIGZhbHNlXHJcbiAgICogQHBhcmFtIHByb3ZpZGVkT3B0aW9ucz9cclxuICAgKi9cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGJvb2xlYW5Qcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj4sIHRydWVOb2RlOiBOb2RlLCBmYWxzZU5vZGU6IE5vZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlZE9wdGlvbnM/OiBCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b25PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IGNvbnRlbnQgPSBuZXcgQm9vbGVhblRvZ2dsZU5vZGUoIGJvb2xlYW5Qcm9wZXJ0eSwgdHJ1ZU5vZGUsIGZhbHNlTm9kZSApO1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8Qm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uT3B0aW9ucywgU2VsZk9wdGlvbnMsIFJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uT3B0aW9ucz4oKSgge1xyXG4gICAgICBjb250ZW50OiBjb250ZW50LFxyXG4gICAgICB0YW5kZW06IFRhbmRlbS5SRVFVSVJFRFxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIGJvb2xlYW5Qcm9wZXJ0eSwgZmFsc2UsIHRydWUsIG9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLmRpc3Bvc2VCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24gPSAoKSA9PiB7XHJcbiAgICAgIGNvbnRlbnQuZGlzcG9zZSgpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5kaXNwb3NlQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uKCk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5zdW4ucmVnaXN0ZXIoICdCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24nLCBCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsTUFBTSxNQUFNLDhCQUE4QjtBQUNqRCxPQUFPQyxpQkFBaUIsTUFBTSx5QkFBeUI7QUFDdkQsT0FBT0MsR0FBRyxNQUFNLFdBQVc7QUFDM0IsT0FBT0MsdUJBQXVCLE1BQTBDLDhCQUE4QjtBQUV0RyxPQUFPQyxTQUFTLE1BQTRCLG9DQUFvQztBQVFoRixlQUFlLE1BQU1DLDhCQUE4QixTQUFTRix1QkFBdUIsQ0FBVTtFQUkzRjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDU0csV0FBV0EsQ0FBRUMsZUFBa0MsRUFBRUMsUUFBYyxFQUFFQyxTQUFlLEVBQ25FQyxlQUF1RCxFQUFHO0lBRTVFLE1BQU1DLE9BQU8sR0FBRyxJQUFJVixpQkFBaUIsQ0FBRU0sZUFBZSxFQUFFQyxRQUFRLEVBQUVDLFNBQVUsQ0FBQztJQUU3RSxNQUFNRyxPQUFPLEdBQUdSLFNBQVMsQ0FBcUYsQ0FBQyxDQUFFO01BQy9HTyxPQUFPLEVBQUVBLE9BQU87TUFDaEJFLE1BQU0sRUFBRWIsTUFBTSxDQUFDYztJQUNqQixDQUFDLEVBQUVKLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUFFSCxlQUFlLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRUssT0FBUSxDQUFDO0lBRTlDLElBQUksQ0FBQ0cscUNBQXFDLEdBQUcsTUFBTTtNQUNqREosT0FBTyxDQUFDSyxPQUFPLENBQUMsQ0FBQztJQUNuQixDQUFDO0VBQ0g7RUFFZ0JBLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELHFDQUFxQyxDQUFDLENBQUM7SUFDNUMsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUFkLEdBQUcsQ0FBQ2UsUUFBUSxDQUFFLGdDQUFnQyxFQUFFWiw4QkFBK0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==