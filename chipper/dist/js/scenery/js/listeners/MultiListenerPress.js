// Copyright 2023-2024, University of Colorado Boulder

/**
 * A logical "press" for the MultiListener, capturing information when a Pointer goes down on the screen.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 * @author Jonathan Olson (PhET Interactive Simulations)
 */

import { scenery } from '../imports.js';
export default class MultiListenerPress {
  // down point for the new press, in the global coordinate frame

  // point for the new press, in the local coordinate frame of the leaf Node of the Trail

  constructor(pointer, trail) {
    this.pointer = pointer;
    this.trail = trail;
    this.interrupted = false;
    this.initialPoint = pointer.point;
    this.localPoint = null;
    this.recomputeLocalPoint();
  }

  /**
   * Compute the local point for this Press, which is the local point for the leaf Node of this Press's Trail.
   */
  recomputeLocalPoint() {
    this.localPoint = this.trail.globalToLocalPoint(this.pointer.point);
  }

  /**
   * The parent point of this press, relative to the leaf Node of this Press's Trail.
   */
  get targetPoint() {
    return this.trail.globalToParentPoint(this.pointer.point);
  }
}
scenery.register('MultiListenerPress', MultiListenerPress);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzY2VuZXJ5IiwiTXVsdGlMaXN0ZW5lclByZXNzIiwiY29uc3RydWN0b3IiLCJwb2ludGVyIiwidHJhaWwiLCJpbnRlcnJ1cHRlZCIsImluaXRpYWxQb2ludCIsInBvaW50IiwibG9jYWxQb2ludCIsInJlY29tcHV0ZUxvY2FsUG9pbnQiLCJnbG9iYWxUb0xvY2FsUG9pbnQiLCJ0YXJnZXRQb2ludCIsImdsb2JhbFRvUGFyZW50UG9pbnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk11bHRpTGlzdGVuZXJQcmVzcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMy0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBIGxvZ2ljYWwgXCJwcmVzc1wiIGZvciB0aGUgTXVsdGlMaXN0ZW5lciwgY2FwdHVyaW5nIGluZm9ybWF0aW9uIHdoZW4gYSBQb2ludGVyIGdvZXMgZG93biBvbiB0aGUgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgeyBQb2ludGVyLCBzY2VuZXJ5LCBUcmFpbCB9IGZyb20gJy4uL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgVmVjdG9yMiBmcm9tICcuLi8uLi8uLi9kb3QvanMvVmVjdG9yMi5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNdWx0aUxpc3RlbmVyUHJlc3Mge1xyXG4gIHB1YmxpYyBwb2ludGVyOiBQb2ludGVyO1xyXG4gIHB1YmxpYyB0cmFpbDogVHJhaWw7XHJcbiAgcHVibGljIGludGVycnVwdGVkOiBib29sZWFuO1xyXG5cclxuICAvLyBkb3duIHBvaW50IGZvciB0aGUgbmV3IHByZXNzLCBpbiB0aGUgZ2xvYmFsIGNvb3JkaW5hdGUgZnJhbWVcclxuICBwdWJsaWMgcmVhZG9ubHkgaW5pdGlhbFBvaW50OiBWZWN0b3IyO1xyXG5cclxuICAvLyBwb2ludCBmb3IgdGhlIG5ldyBwcmVzcywgaW4gdGhlIGxvY2FsIGNvb3JkaW5hdGUgZnJhbWUgb2YgdGhlIGxlYWYgTm9kZSBvZiB0aGUgVHJhaWxcclxuICBwdWJsaWMgbG9jYWxQb2ludDogVmVjdG9yMiB8IG51bGw7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcG9pbnRlcjogUG9pbnRlciwgdHJhaWw6IFRyYWlsICkge1xyXG4gICAgdGhpcy5wb2ludGVyID0gcG9pbnRlcjtcclxuICAgIHRoaXMudHJhaWwgPSB0cmFpbDtcclxuICAgIHRoaXMuaW50ZXJydXB0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmluaXRpYWxQb2ludCA9IHBvaW50ZXIucG9pbnQ7XHJcblxyXG4gICAgdGhpcy5sb2NhbFBvaW50ID0gbnVsbDtcclxuICAgIHRoaXMucmVjb21wdXRlTG9jYWxQb2ludCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29tcHV0ZSB0aGUgbG9jYWwgcG9pbnQgZm9yIHRoaXMgUHJlc3MsIHdoaWNoIGlzIHRoZSBsb2NhbCBwb2ludCBmb3IgdGhlIGxlYWYgTm9kZSBvZiB0aGlzIFByZXNzJ3MgVHJhaWwuXHJcbiAgICovXHJcbiAgcHVibGljIHJlY29tcHV0ZUxvY2FsUG9pbnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmxvY2FsUG9pbnQgPSB0aGlzLnRyYWlsLmdsb2JhbFRvTG9jYWxQb2ludCggdGhpcy5wb2ludGVyLnBvaW50ICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUaGUgcGFyZW50IHBvaW50IG9mIHRoaXMgcHJlc3MsIHJlbGF0aXZlIHRvIHRoZSBsZWFmIE5vZGUgb2YgdGhpcyBQcmVzcydzIFRyYWlsLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgdGFyZ2V0UG9pbnQoKTogVmVjdG9yMiB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFpbC5nbG9iYWxUb1BhcmVudFBvaW50KCB0aGlzLnBvaW50ZXIucG9pbnQgKTtcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnkucmVnaXN0ZXIoICdNdWx0aUxpc3RlbmVyUHJlc3MnLCBNdWx0aUxpc3RlbmVyUHJlc3MgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFrQkEsT0FBTyxRQUFlLGVBQWU7QUFHdkQsZUFBZSxNQUFNQyxrQkFBa0IsQ0FBQztFQUt0Qzs7RUFHQTs7RUFHT0MsV0FBV0EsQ0FBRUMsT0FBZ0IsRUFBRUMsS0FBWSxFQUFHO0lBQ25ELElBQUksQ0FBQ0QsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0lBQ2xCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLEtBQUs7SUFFeEIsSUFBSSxDQUFDQyxZQUFZLEdBQUdILE9BQU8sQ0FBQ0ksS0FBSztJQUVqQyxJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJO0lBQ3RCLElBQUksQ0FBQ0MsbUJBQW1CLENBQUMsQ0FBQztFQUM1Qjs7RUFFQTtBQUNGO0FBQ0E7RUFDU0EsbUJBQW1CQSxDQUFBLEVBQVM7SUFDakMsSUFBSSxDQUFDRCxVQUFVLEdBQUcsSUFBSSxDQUFDSixLQUFLLENBQUNNLGtCQUFrQixDQUFFLElBQUksQ0FBQ1AsT0FBTyxDQUFDSSxLQUFNLENBQUM7RUFDdkU7O0VBRUE7QUFDRjtBQUNBO0VBQ0UsSUFBV0ksV0FBV0EsQ0FBQSxFQUFZO0lBQ2hDLE9BQU8sSUFBSSxDQUFDUCxLQUFLLENBQUNRLG1CQUFtQixDQUFFLElBQUksQ0FBQ1QsT0FBTyxDQUFDSSxLQUFNLENBQUM7RUFDN0Q7QUFDRjtBQUVBUCxPQUFPLENBQUNhLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRVosa0JBQW1CLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=