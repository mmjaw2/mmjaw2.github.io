// Copyright 2013-2024, University of Colorado Boulder

/**
 * Displays mouse and touch areas when they are customized. Expensive to display!
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Bounds2 from '../../../dot/js/Bounds2.js';
import { Shape } from '../../../kite/js/imports.js';
import { scenery, ShapeBasedOverlay, Trail } from '../imports.js';
export default class PointerAreaOverlay extends ShapeBasedOverlay {
  constructor(display, rootNode) {
    super(display, rootNode, 'mouseTouchAreaOverlay');
  }
  addShapes() {
    new Trail(this.rootNode).eachTrailUnder(trail => {
      const node = trail.lastNode();
      if (!node.isVisible()) {
        // skip this subtree if the node is invisible
        return true;
      }
      if ((node.mouseArea || node.touchArea) && trail.isVisible()) {
        const transform = trail.getTransform();
        if (node.mouseArea) {
          this.addShape(transform.transformShape(node.mouseArea instanceof Bounds2 ? Shape.bounds(node.mouseArea) : node.mouseArea), 'rgba(0,0,255,0.8)', true);
        }
        if (node.touchArea) {
          this.addShape(transform.transformShape(node.touchArea instanceof Bounds2 ? Shape.bounds(node.touchArea) : node.touchArea), 'rgba(255,0,0,0.8)', false);
        }
      }
      return false;
    });
  }
}
scenery.register('PointerAreaOverlay', PointerAreaOverlay);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiU2hhcGUiLCJzY2VuZXJ5IiwiU2hhcGVCYXNlZE92ZXJsYXkiLCJUcmFpbCIsIlBvaW50ZXJBcmVhT3ZlcmxheSIsImNvbnN0cnVjdG9yIiwiZGlzcGxheSIsInJvb3ROb2RlIiwiYWRkU2hhcGVzIiwiZWFjaFRyYWlsVW5kZXIiLCJ0cmFpbCIsIm5vZGUiLCJsYXN0Tm9kZSIsImlzVmlzaWJsZSIsIm1vdXNlQXJlYSIsInRvdWNoQXJlYSIsInRyYW5zZm9ybSIsImdldFRyYW5zZm9ybSIsImFkZFNoYXBlIiwidHJhbnNmb3JtU2hhcGUiLCJib3VuZHMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlBvaW50ZXJBcmVhT3ZlcmxheS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5cyBtb3VzZSBhbmQgdG91Y2ggYXJlYXMgd2hlbiB0aGV5IGFyZSBjdXN0b21pemVkLiBFeHBlbnNpdmUgdG8gZGlzcGxheSFcclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLi8uLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgeyBEaXNwbGF5LCBOb2RlLCBzY2VuZXJ5LCBTaGFwZUJhc2VkT3ZlcmxheSwgVE92ZXJsYXksIFRyYWlsIH0gZnJvbSAnLi4vaW1wb3J0cy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludGVyQXJlYU92ZXJsYXkgZXh0ZW5kcyBTaGFwZUJhc2VkT3ZlcmxheSBpbXBsZW1lbnRzIFRPdmVybGF5IHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGRpc3BsYXk6IERpc3BsYXksIHJvb3ROb2RlOiBOb2RlICkge1xyXG4gICAgc3VwZXIoIGRpc3BsYXksIHJvb3ROb2RlLCAnbW91c2VUb3VjaEFyZWFPdmVybGF5JyApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZFNoYXBlcygpOiB2b2lkIHtcclxuICAgIG5ldyBUcmFpbCggdGhpcy5yb290Tm9kZSApLmVhY2hUcmFpbFVuZGVyKCB0cmFpbCA9PiB7XHJcbiAgICAgIGNvbnN0IG5vZGUgPSB0cmFpbC5sYXN0Tm9kZSgpO1xyXG4gICAgICBpZiAoICFub2RlLmlzVmlzaWJsZSgpICkge1xyXG4gICAgICAgIC8vIHNraXAgdGhpcyBzdWJ0cmVlIGlmIHRoZSBub2RlIGlzIGludmlzaWJsZVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICggKCBub2RlLm1vdXNlQXJlYSB8fCBub2RlLnRvdWNoQXJlYSApICYmIHRyYWlsLmlzVmlzaWJsZSgpICkge1xyXG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IHRyYWlsLmdldFRyYW5zZm9ybSgpO1xyXG5cclxuICAgICAgICBpZiAoIG5vZGUubW91c2VBcmVhICkge1xyXG4gICAgICAgICAgdGhpcy5hZGRTaGFwZSggdHJhbnNmb3JtLnRyYW5zZm9ybVNoYXBlKCBub2RlLm1vdXNlQXJlYSBpbnN0YW5jZW9mIEJvdW5kczIgPyBTaGFwZS5ib3VuZHMoIG5vZGUubW91c2VBcmVhICkgOiBub2RlLm1vdXNlQXJlYSApLCAncmdiYSgwLDAsMjU1LDAuOCknLCB0cnVlICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICggbm9kZS50b3VjaEFyZWEgKSB7XHJcbiAgICAgICAgICB0aGlzLmFkZFNoYXBlKCB0cmFuc2Zvcm0udHJhbnNmb3JtU2hhcGUoIG5vZGUudG91Y2hBcmVhIGluc3RhbmNlb2YgQm91bmRzMiA/IFNoYXBlLmJvdW5kcyggbm9kZS50b3VjaEFyZWEgKSA6IG5vZGUudG91Y2hBcmVhICksICdyZ2JhKDI1NSwwLDAsMC44KScsIGZhbHNlICk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnkucmVnaXN0ZXIoICdQb2ludGVyQXJlYU92ZXJsYXknLCBQb2ludGVyQXJlYU92ZXJsYXkgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsT0FBTyxNQUFNLDRCQUE0QjtBQUNoRCxTQUFTQyxLQUFLLFFBQVEsNkJBQTZCO0FBQ25ELFNBQXdCQyxPQUFPLEVBQUVDLGlCQUFpQixFQUFZQyxLQUFLLFFBQVEsZUFBZTtBQUUxRixlQUFlLE1BQU1DLGtCQUFrQixTQUFTRixpQkFBaUIsQ0FBcUI7RUFDN0VHLFdBQVdBLENBQUVDLE9BQWdCLEVBQUVDLFFBQWMsRUFBRztJQUNyRCxLQUFLLENBQUVELE9BQU8sRUFBRUMsUUFBUSxFQUFFLHVCQUF3QixDQUFDO0VBQ3JEO0VBRU9DLFNBQVNBLENBQUEsRUFBUztJQUN2QixJQUFJTCxLQUFLLENBQUUsSUFBSSxDQUFDSSxRQUFTLENBQUMsQ0FBQ0UsY0FBYyxDQUFFQyxLQUFLLElBQUk7TUFDbEQsTUFBTUMsSUFBSSxHQUFHRCxLQUFLLENBQUNFLFFBQVEsQ0FBQyxDQUFDO01BQzdCLElBQUssQ0FBQ0QsSUFBSSxDQUFDRSxTQUFTLENBQUMsQ0FBQyxFQUFHO1FBQ3ZCO1FBQ0EsT0FBTyxJQUFJO01BQ2I7TUFDQSxJQUFLLENBQUVGLElBQUksQ0FBQ0csU0FBUyxJQUFJSCxJQUFJLENBQUNJLFNBQVMsS0FBTUwsS0FBSyxDQUFDRyxTQUFTLENBQUMsQ0FBQyxFQUFHO1FBQy9ELE1BQU1HLFNBQVMsR0FBR04sS0FBSyxDQUFDTyxZQUFZLENBQUMsQ0FBQztRQUV0QyxJQUFLTixJQUFJLENBQUNHLFNBQVMsRUFBRztVQUNwQixJQUFJLENBQUNJLFFBQVEsQ0FBRUYsU0FBUyxDQUFDRyxjQUFjLENBQUVSLElBQUksQ0FBQ0csU0FBUyxZQUFZZixPQUFPLEdBQUdDLEtBQUssQ0FBQ29CLE1BQU0sQ0FBRVQsSUFBSSxDQUFDRyxTQUFVLENBQUMsR0FBR0gsSUFBSSxDQUFDRyxTQUFVLENBQUMsRUFBRSxtQkFBbUIsRUFBRSxJQUFLLENBQUM7UUFDN0o7UUFDQSxJQUFLSCxJQUFJLENBQUNJLFNBQVMsRUFBRztVQUNwQixJQUFJLENBQUNHLFFBQVEsQ0FBRUYsU0FBUyxDQUFDRyxjQUFjLENBQUVSLElBQUksQ0FBQ0ksU0FBUyxZQUFZaEIsT0FBTyxHQUFHQyxLQUFLLENBQUNvQixNQUFNLENBQUVULElBQUksQ0FBQ0ksU0FBVSxDQUFDLEdBQUdKLElBQUksQ0FBQ0ksU0FBVSxDQUFDLEVBQUUsbUJBQW1CLEVBQUUsS0FBTSxDQUFDO1FBQzlKO01BQ0Y7TUFDQSxPQUFPLEtBQUs7SUFDZCxDQUFFLENBQUM7RUFDTDtBQUNGO0FBRUFkLE9BQU8sQ0FBQ29CLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRWpCLGtCQUFtQixDQUFDIiwiaWdub3JlTGlzdCI6W119