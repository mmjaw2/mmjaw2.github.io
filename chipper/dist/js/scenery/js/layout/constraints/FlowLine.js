// Copyright 2022-2024, University of Colorado Boulder

/**
 * A poolable internal representation of a line for layout handling in FlowConstraint
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Orientation from '../../../../phet-core/js/Orientation.js';
import Pool from '../../../../phet-core/js/Pool.js';
import { LayoutLine, scenery } from '../../imports.js';
export default class FlowLine extends LayoutLine {
  // (scenery-internal)

  /**
   * (scenery-internal)
   */
  constructor(orientation, cells) {
    super();
    this.initialize(orientation, cells);
  }

  /**
   * (scenery-internal)
   */
  initialize(orientation, cells) {
    this.orientation = orientation;
    this.cells = cells;
    this.initializeLayoutLine();
    return this;
  }

  /**
   * (scenery-internal)
   */
  getMinimumSize(spacing) {
    return (this.cells.length - 1) * spacing + _.sum(this.cells.map(cell => cell.getMinimumSize(this.orientation)));
  }

  /**
   * (scenery-internal)
   */
  freeToPool() {
    FlowLine.pool.freeToPool(this);
  }
  clean() {
    this.cells.length = 0;
    this.freeToPool();
  }

  /**
   * (scenery-internal)
   */
  static pool = new Pool(FlowLine, {
    defaultArguments: [Orientation.HORIZONTAL, []]
  });
}
scenery.register('FlowLine', FlowLine);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPcmllbnRhdGlvbiIsIlBvb2wiLCJMYXlvdXRMaW5lIiwic2NlbmVyeSIsIkZsb3dMaW5lIiwiY29uc3RydWN0b3IiLCJvcmllbnRhdGlvbiIsImNlbGxzIiwiaW5pdGlhbGl6ZSIsImluaXRpYWxpemVMYXlvdXRMaW5lIiwiZ2V0TWluaW11bVNpemUiLCJzcGFjaW5nIiwibGVuZ3RoIiwiXyIsInN1bSIsIm1hcCIsImNlbGwiLCJmcmVlVG9Qb29sIiwicG9vbCIsImNsZWFuIiwiZGVmYXVsdEFyZ3VtZW50cyIsIkhPUklaT05UQUwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZsb3dMaW5lLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEEgcG9vbGFibGUgaW50ZXJuYWwgcmVwcmVzZW50YXRpb24gb2YgYSBsaW5lIGZvciBsYXlvdXQgaGFuZGxpbmcgaW4gRmxvd0NvbnN0cmFpbnRcclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBPcmllbnRhdGlvbiBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvT3JpZW50YXRpb24uanMnO1xyXG5pbXBvcnQgUG9vbCBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvUG9vbC5qcyc7XHJcbmltcG9ydCB7IEZsb3dDZWxsLCBMYXlvdXRMaW5lLCBzY2VuZXJ5IH0gZnJvbSAnLi4vLi4vaW1wb3J0cy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGbG93TGluZSBleHRlbmRzIExheW91dExpbmUge1xyXG5cclxuICAvLyAoc2NlbmVyeS1pbnRlcm5hbClcclxuICBwdWJsaWMgb3JpZW50YXRpb24hOiBPcmllbnRhdGlvbjtcclxuICBwdWJsaWMgY2VsbHMhOiBGbG93Q2VsbFtdO1xyXG5cclxuICAvKipcclxuICAgKiAoc2NlbmVyeS1pbnRlcm5hbClcclxuICAgKi9cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIG9yaWVudGF0aW9uOiBPcmllbnRhdGlvbiwgY2VsbHM6IEZsb3dDZWxsW10gKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuaW5pdGlhbGl6ZSggb3JpZW50YXRpb24sIGNlbGxzICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiAoc2NlbmVyeS1pbnRlcm5hbClcclxuICAgKi9cclxuICBwdWJsaWMgaW5pdGlhbGl6ZSggb3JpZW50YXRpb246IE9yaWVudGF0aW9uLCBjZWxsczogRmxvd0NlbGxbXSApOiB0aGlzIHtcclxuXHJcbiAgICB0aGlzLm9yaWVudGF0aW9uID0gb3JpZW50YXRpb247XHJcbiAgICB0aGlzLmNlbGxzID0gY2VsbHM7XHJcblxyXG4gICAgdGhpcy5pbml0aWFsaXplTGF5b3V0TGluZSgpO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogKHNjZW5lcnktaW50ZXJuYWwpXHJcbiAgICovXHJcbiAgcHVibGljIGdldE1pbmltdW1TaXplKCBzcGFjaW5nOiBudW1iZXIgKTogbnVtYmVyIHtcclxuICAgIHJldHVybiAoIHRoaXMuY2VsbHMubGVuZ3RoIC0gMSApICogc3BhY2luZyArIF8uc3VtKCB0aGlzLmNlbGxzLm1hcCggY2VsbCA9PiBjZWxsLmdldE1pbmltdW1TaXplKCB0aGlzLm9yaWVudGF0aW9uICkgKSApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogKHNjZW5lcnktaW50ZXJuYWwpXHJcbiAgICovXHJcbiAgcHVibGljIGZyZWVUb1Bvb2woKTogdm9pZCB7XHJcbiAgICBGbG93TGluZS5wb29sLmZyZWVUb1Bvb2woIHRoaXMgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjbGVhbigpOiB2b2lkIHtcclxuICAgIHRoaXMuY2VsbHMubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuZnJlZVRvUG9vbCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogKHNjZW5lcnktaW50ZXJuYWwpXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBwb29sID0gbmV3IFBvb2woIEZsb3dMaW5lLCB7XHJcbiAgICBkZWZhdWx0QXJndW1lbnRzOiBbIE9yaWVudGF0aW9uLkhPUklaT05UQUwsIFtdIF1cclxuICB9ICk7XHJcbn1cclxuXHJcbnNjZW5lcnkucmVnaXN0ZXIoICdGbG93TGluZScsIEZsb3dMaW5lICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFdBQVcsTUFBTSx5Q0FBeUM7QUFDakUsT0FBT0MsSUFBSSxNQUFNLGtDQUFrQztBQUNuRCxTQUFtQkMsVUFBVSxFQUFFQyxPQUFPLFFBQVEsa0JBQWtCO0FBRWhFLGVBQWUsTUFBTUMsUUFBUSxTQUFTRixVQUFVLENBQUM7RUFFL0M7O0VBSUE7QUFDRjtBQUNBO0VBQ1NHLFdBQVdBLENBQUVDLFdBQXdCLEVBQUVDLEtBQWlCLEVBQUc7SUFDaEUsS0FBSyxDQUFDLENBQUM7SUFFUCxJQUFJLENBQUNDLFVBQVUsQ0FBRUYsV0FBVyxFQUFFQyxLQUFNLENBQUM7RUFDdkM7O0VBRUE7QUFDRjtBQUNBO0VBQ1NDLFVBQVVBLENBQUVGLFdBQXdCLEVBQUVDLEtBQWlCLEVBQVM7SUFFckUsSUFBSSxDQUFDRCxXQUFXLEdBQUdBLFdBQVc7SUFDOUIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFFbEIsSUFBSSxDQUFDRSxvQkFBb0IsQ0FBQyxDQUFDO0lBRTNCLE9BQU8sSUFBSTtFQUNiOztFQUVBO0FBQ0Y7QUFDQTtFQUNTQyxjQUFjQSxDQUFFQyxPQUFlLEVBQVc7SUFDL0MsT0FBTyxDQUFFLElBQUksQ0FBQ0osS0FBSyxDQUFDSyxNQUFNLEdBQUcsQ0FBQyxJQUFLRCxPQUFPLEdBQUdFLENBQUMsQ0FBQ0MsR0FBRyxDQUFFLElBQUksQ0FBQ1AsS0FBSyxDQUFDUSxHQUFHLENBQUVDLElBQUksSUFBSUEsSUFBSSxDQUFDTixjQUFjLENBQUUsSUFBSSxDQUFDSixXQUFZLENBQUUsQ0FBRSxDQUFDO0VBQ3pIOztFQUVBO0FBQ0Y7QUFDQTtFQUNTVyxVQUFVQSxDQUFBLEVBQVM7SUFDeEJiLFFBQVEsQ0FBQ2MsSUFBSSxDQUFDRCxVQUFVLENBQUUsSUFBSyxDQUFDO0VBQ2xDO0VBRU9FLEtBQUtBLENBQUEsRUFBUztJQUNuQixJQUFJLENBQUNaLEtBQUssQ0FBQ0ssTUFBTSxHQUFHLENBQUM7SUFDckIsSUFBSSxDQUFDSyxVQUFVLENBQUMsQ0FBQztFQUNuQjs7RUFFQTtBQUNGO0FBQ0E7RUFDRSxPQUF1QkMsSUFBSSxHQUFHLElBQUlqQixJQUFJLENBQUVHLFFBQVEsRUFBRTtJQUNoRGdCLGdCQUFnQixFQUFFLENBQUVwQixXQUFXLENBQUNxQixVQUFVLEVBQUUsRUFBRTtFQUNoRCxDQUFFLENBQUM7QUFDTDtBQUVBbEIsT0FBTyxDQUFDbUIsUUFBUSxDQUFFLFVBQVUsRUFBRWxCLFFBQVMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==