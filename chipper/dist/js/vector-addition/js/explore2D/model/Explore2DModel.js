// Copyright 2019-2023, University of Colorado Boulder

/**
 * Explore2DModel is the model for the 'Explore 2D' screen.
 *
 * @author Martin Veillette
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import CoordinateSnapModes from '../../common/model/CoordinateSnapModes.js';
import VectorAdditionModel from '../../common/model/VectorAdditionModel.js';
import VectorAdditionColors from '../../common/VectorAdditionColors.js';
import VectorAdditionConstants from '../../common/VectorAdditionConstants.js';
import vectorAddition from '../../vectorAddition.js';
import Explore2DGraph from './Explore2DGraph.js';
export default class Explore2DModel extends VectorAdditionModel {
  // Property controlling the visibility of the sum for both Graph instances

  // graph for Cartesian snap mode

  // graph for Polar snap mode

  constructor(tandem) {
    super(tandem);
    this.sumVisibleProperty = new BooleanProperty(VectorAdditionConstants.DEFAULT_SUM_VISIBLE);
    this.cartesianVectorColorPalette = VectorAdditionColors.BLUE_COLOR_PALETTE;
    this.polarVectorColorPalette = VectorAdditionColors.PINK_COLOR_PALETTE;
    this.cartesianGraph = new Explore2DGraph(CoordinateSnapModes.CARTESIAN, this.componentStyleProperty, this.sumVisibleProperty, this.cartesianVectorColorPalette);
    this.polarGraph = new Explore2DGraph(CoordinateSnapModes.POLAR, this.componentStyleProperty, this.sumVisibleProperty, this.polarVectorColorPalette);
  }
  reset() {
    super.reset();
    this.sumVisibleProperty.reset();
    this.cartesianGraph.reset();
    this.polarGraph.reset();
  }
}
vectorAddition.register('Explore2DModel', Explore2DModel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJDb29yZGluYXRlU25hcE1vZGVzIiwiVmVjdG9yQWRkaXRpb25Nb2RlbCIsIlZlY3RvckFkZGl0aW9uQ29sb3JzIiwiVmVjdG9yQWRkaXRpb25Db25zdGFudHMiLCJ2ZWN0b3JBZGRpdGlvbiIsIkV4cGxvcmUyREdyYXBoIiwiRXhwbG9yZTJETW9kZWwiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsInN1bVZpc2libGVQcm9wZXJ0eSIsIkRFRkFVTFRfU1VNX1ZJU0lCTEUiLCJjYXJ0ZXNpYW5WZWN0b3JDb2xvclBhbGV0dGUiLCJCTFVFX0NPTE9SX1BBTEVUVEUiLCJwb2xhclZlY3RvckNvbG9yUGFsZXR0ZSIsIlBJTktfQ09MT1JfUEFMRVRURSIsImNhcnRlc2lhbkdyYXBoIiwiQ0FSVEVTSUFOIiwiY29tcG9uZW50U3R5bGVQcm9wZXJ0eSIsInBvbGFyR3JhcGgiLCJQT0xBUiIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFeHBsb3JlMkRNb2RlbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBFeHBsb3JlMkRNb2RlbCBpcyB0aGUgbW9kZWwgZm9yIHRoZSAnRXhwbG9yZSAyRCcgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIE1hcnRpbiBWZWlsbGV0dGVcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IENvb3JkaW5hdGVTbmFwTW9kZXMgZnJvbSAnLi4vLi4vY29tbW9uL21vZGVsL0Nvb3JkaW5hdGVTbmFwTW9kZXMuanMnO1xyXG5pbXBvcnQgVmVjdG9yQWRkaXRpb25Nb2RlbCBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvVmVjdG9yQWRkaXRpb25Nb2RlbC5qcyc7XHJcbmltcG9ydCBWZWN0b3JBZGRpdGlvbkNvbG9ycyBmcm9tICcuLi8uLi9jb21tb24vVmVjdG9yQWRkaXRpb25Db2xvcnMuanMnO1xyXG5pbXBvcnQgVmVjdG9yQWRkaXRpb25Db25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL1ZlY3RvckFkZGl0aW9uQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IHZlY3RvckFkZGl0aW9uIGZyb20gJy4uLy4uL3ZlY3RvckFkZGl0aW9uLmpzJztcclxuaW1wb3J0IEV4cGxvcmUyREdyYXBoIGZyb20gJy4vRXhwbG9yZTJER3JhcGguanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBWZWN0b3JDb2xvclBhbGV0dGUgZnJvbSAnLi4vLi4vY29tbW9uL21vZGVsL1ZlY3RvckNvbG9yUGFsZXR0ZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBsb3JlMkRNb2RlbCBleHRlbmRzIFZlY3RvckFkZGl0aW9uTW9kZWwge1xyXG5cclxuICAvLyBQcm9wZXJ0eSBjb250cm9sbGluZyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgc3VtIGZvciBib3RoIEdyYXBoIGluc3RhbmNlc1xyXG4gIHB1YmxpYyByZWFkb25seSBzdW1WaXNpYmxlUHJvcGVydHk6IFByb3BlcnR5PGJvb2xlYW4+O1xyXG5cclxuICBwdWJsaWMgcmVhZG9ubHkgY2FydGVzaWFuVmVjdG9yQ29sb3JQYWxldHRlOiBWZWN0b3JDb2xvclBhbGV0dGU7XHJcbiAgcHVibGljIHJlYWRvbmx5IHBvbGFyVmVjdG9yQ29sb3JQYWxldHRlOiBWZWN0b3JDb2xvclBhbGV0dGU7XHJcblxyXG4gIC8vIGdyYXBoIGZvciBDYXJ0ZXNpYW4gc25hcCBtb2RlXHJcbiAgcHVibGljIHJlYWRvbmx5IGNhcnRlc2lhbkdyYXBoOiBFeHBsb3JlMkRHcmFwaDtcclxuXHJcbiAgLy8gZ3JhcGggZm9yIFBvbGFyIHNuYXAgbW9kZVxyXG4gIHB1YmxpYyByZWFkb25seSBwb2xhckdyYXBoOiBFeHBsb3JlMkRHcmFwaDtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICBzdXBlciggdGFuZGVtICk7XHJcblxyXG4gICAgdGhpcy5zdW1WaXNpYmxlUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBWZWN0b3JBZGRpdGlvbkNvbnN0YW50cy5ERUZBVUxUX1NVTV9WSVNJQkxFICk7XHJcblxyXG4gICAgdGhpcy5jYXJ0ZXNpYW5WZWN0b3JDb2xvclBhbGV0dGUgPSBWZWN0b3JBZGRpdGlvbkNvbG9ycy5CTFVFX0NPTE9SX1BBTEVUVEU7XHJcbiAgICB0aGlzLnBvbGFyVmVjdG9yQ29sb3JQYWxldHRlID0gVmVjdG9yQWRkaXRpb25Db2xvcnMuUElOS19DT0xPUl9QQUxFVFRFO1xyXG5cclxuICAgIHRoaXMuY2FydGVzaWFuR3JhcGggPSBuZXcgRXhwbG9yZTJER3JhcGgoIENvb3JkaW5hdGVTbmFwTW9kZXMuQ0FSVEVTSUFOLFxyXG4gICAgICB0aGlzLmNvbXBvbmVudFN0eWxlUHJvcGVydHksXHJcbiAgICAgIHRoaXMuc3VtVmlzaWJsZVByb3BlcnR5LFxyXG4gICAgICB0aGlzLmNhcnRlc2lhblZlY3RvckNvbG9yUGFsZXR0ZSApO1xyXG5cclxuICAgIHRoaXMucG9sYXJHcmFwaCA9IG5ldyBFeHBsb3JlMkRHcmFwaCggQ29vcmRpbmF0ZVNuYXBNb2Rlcy5QT0xBUixcclxuICAgICAgdGhpcy5jb21wb25lbnRTdHlsZVByb3BlcnR5LFxyXG4gICAgICB0aGlzLnN1bVZpc2libGVQcm9wZXJ0eSxcclxuICAgICAgdGhpcy5wb2xhclZlY3RvckNvbG9yUGFsZXR0ZSApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgc3VwZXIucmVzZXQoKTtcclxuICAgIHRoaXMuc3VtVmlzaWJsZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLmNhcnRlc2lhbkdyYXBoLnJlc2V0KCk7XHJcbiAgICB0aGlzLnBvbGFyR3JhcGgucmVzZXQoKTtcclxuICB9XHJcbn1cclxuXHJcbnZlY3RvckFkZGl0aW9uLnJlZ2lzdGVyKCAnRXhwbG9yZTJETW9kZWwnLCBFeHBsb3JlMkRNb2RlbCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxlQUFlLE1BQU0sd0NBQXdDO0FBRXBFLE9BQU9DLG1CQUFtQixNQUFNLDJDQUEyQztBQUMzRSxPQUFPQyxtQkFBbUIsTUFBTSwyQ0FBMkM7QUFDM0UsT0FBT0Msb0JBQW9CLE1BQU0sc0NBQXNDO0FBQ3ZFLE9BQU9DLHVCQUF1QixNQUFNLHlDQUF5QztBQUM3RSxPQUFPQyxjQUFjLE1BQU0seUJBQXlCO0FBQ3BELE9BQU9DLGNBQWMsTUFBTSxxQkFBcUI7QUFJaEQsZUFBZSxNQUFNQyxjQUFjLFNBQVNMLG1CQUFtQixDQUFDO0VBRTlEOztFQU1BOztFQUdBOztFQUdPTSxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFbkMsS0FBSyxDQUFFQSxNQUFPLENBQUM7SUFFZixJQUFJLENBQUNDLGtCQUFrQixHQUFHLElBQUlWLGVBQWUsQ0FBRUksdUJBQXVCLENBQUNPLG1CQUFvQixDQUFDO0lBRTVGLElBQUksQ0FBQ0MsMkJBQTJCLEdBQUdULG9CQUFvQixDQUFDVSxrQkFBa0I7SUFDMUUsSUFBSSxDQUFDQyx1QkFBdUIsR0FBR1gsb0JBQW9CLENBQUNZLGtCQUFrQjtJQUV0RSxJQUFJLENBQUNDLGNBQWMsR0FBRyxJQUFJVixjQUFjLENBQUVMLG1CQUFtQixDQUFDZ0IsU0FBUyxFQUNyRSxJQUFJLENBQUNDLHNCQUFzQixFQUMzQixJQUFJLENBQUNSLGtCQUFrQixFQUN2QixJQUFJLENBQUNFLDJCQUE0QixDQUFDO0lBRXBDLElBQUksQ0FBQ08sVUFBVSxHQUFHLElBQUliLGNBQWMsQ0FBRUwsbUJBQW1CLENBQUNtQixLQUFLLEVBQzdELElBQUksQ0FBQ0Ysc0JBQXNCLEVBQzNCLElBQUksQ0FBQ1Isa0JBQWtCLEVBQ3ZCLElBQUksQ0FBQ0ksdUJBQXdCLENBQUM7RUFDbEM7RUFFZ0JPLEtBQUtBLENBQUEsRUFBUztJQUM1QixLQUFLLENBQUNBLEtBQUssQ0FBQyxDQUFDO0lBQ2IsSUFBSSxDQUFDWCxrQkFBa0IsQ0FBQ1csS0FBSyxDQUFDLENBQUM7SUFDL0IsSUFBSSxDQUFDTCxjQUFjLENBQUNLLEtBQUssQ0FBQyxDQUFDO0lBQzNCLElBQUksQ0FBQ0YsVUFBVSxDQUFDRSxLQUFLLENBQUMsQ0FBQztFQUN6QjtBQUNGO0FBRUFoQixjQUFjLENBQUNpQixRQUFRLENBQUUsZ0JBQWdCLEVBQUVmLGNBQWUsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==