// Copyright 2019-2023, University of Colorado Boulder

/**
 * Color palette used for rendering vectors.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Color } from '../../../../scenery/js/imports.js';
import vectorAddition from '../../vectorAddition.js';
import optionize from '../../../../phet-core/js/optionize.js';

// All colors are {Color|string|null}, where {string} is a CSS color string, and null is 'no color'.

export default class VectorColorPalette {
  constructor(providedOptions) {
    const options = optionize()({
      // SelfOptions
      mainFill: Color.BLACK,
      mainStroke: null,
      componentFill: null,
      sumFill: Color.BLACK,
      sumStroke: null,
      sumComponentFill: null,
      baseVectorFill: Color.WHITE,
      baseVectorStroke: null
    }, providedOptions);
    this.mainFill = options.mainFill;
    this.mainStroke = options.mainStroke;
    this.componentFill = options.componentFill || options.mainFill;
    this.sumFill = options.sumFill;
    this.sumStroke = options.sumStroke;
    this.sumComponentFill = options.sumComponentFill || options.sumFill;
    this.baseVectorFill = options.baseVectorFill;
    this.baseVectorStroke = options.baseVectorStroke || options.mainFill;
  }
}
vectorAddition.register('VectorColorPalette', VectorColorPalette);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb2xvciIsInZlY3RvckFkZGl0aW9uIiwib3B0aW9uaXplIiwiVmVjdG9yQ29sb3JQYWxldHRlIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwibWFpbkZpbGwiLCJCTEFDSyIsIm1haW5TdHJva2UiLCJjb21wb25lbnRGaWxsIiwic3VtRmlsbCIsInN1bVN0cm9rZSIsInN1bUNvbXBvbmVudEZpbGwiLCJiYXNlVmVjdG9yRmlsbCIsIldISVRFIiwiYmFzZVZlY3RvclN0cm9rZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiVmVjdG9yQ29sb3JQYWxldHRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIENvbG9yIHBhbGV0dGUgdXNlZCBmb3IgcmVuZGVyaW5nIHZlY3RvcnMuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgdmVjdG9yQWRkaXRpb24gZnJvbSAnLi4vLi4vdmVjdG9yQWRkaXRpb24uanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5cclxuLy8gQWxsIGNvbG9ycyBhcmUge0NvbG9yfHN0cmluZ3xudWxsfSwgd2hlcmUge3N0cmluZ30gaXMgYSBDU1MgY29sb3Igc3RyaW5nLCBhbmQgbnVsbCBpcyAnbm8gY29sb3InLlxyXG50eXBlIFBhbGV0dGVDb2xvciA9IENvbG9yIHwgc3RyaW5nIHwgbnVsbDtcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcblxyXG4gIC8vIENvbG9ycyBmb3IgbWFpbiB2ZWN0b3JzIChha2EgcGFyZW50IHZlY3RvcnMpXHJcbiAgbWFpbkZpbGw/OiBQYWxldHRlQ29sb3I7XHJcbiAgbWFpblN0cm9rZT86IFBhbGV0dGVDb2xvcjtcclxuXHJcbiAgLy8gQ29sb3JzIGZvciBjb21wb25lbnQgdmVjdG9ycy4gVGhleSBhcmUgb2YgdHlwZSBEYXNoZWRBcnJvd05vZGUsIHdoaWNoIGNhbm5vdCBiZSBzdHJva2VkLlxyXG4gIC8vIERlZmF1bHRzIHRvIG9wdGlvbnMubWFpbkZpbGxcclxuICBjb21wb25lbnRGaWxsPzogUGFsZXR0ZUNvbG9yOyAvLyBudWxsIGRlZmF1bHRzIHRvIG9wdGlvbnMubWFpbkZpbGxcclxuXHJcbiAgLy8gQ29sb3JzIGZvciBzdW0gdmVjdG9yc1xyXG4gIHN1bUZpbGw/OiBQYWxldHRlQ29sb3I7XHJcbiAgc3VtU3Ryb2tlPzogUGFsZXR0ZUNvbG9yO1xyXG5cclxuICAvLyBDb2xvciBmb3Igc3VtIGNvbXBvbmVudCB2ZWN0b3JzLiBUaGV5IGFyZSBvZiB0eXBlIERhc2hlZEFycm93Tm9kZSwgd2hpY2ggY2Fubm90IGJlIHN0cm9rZWQuXHJcbiAgc3VtQ29tcG9uZW50RmlsbD86IFBhbGV0dGVDb2xvcjsgLy8gbnVsbCBkZWZhdWx0cyB0byBvcHRpb25zLnN1bUZpbGxcclxuXHJcbiAgLy8gQ29sb3JzIGZvciBiYXNlIHZlY3RvcnNcclxuICBiYXNlVmVjdG9yRmlsbD86IFBhbGV0dGVDb2xvcjtcclxuICBiYXNlVmVjdG9yU3Ryb2tlPzogUGFsZXR0ZUNvbG9yOyAvLyBudWxsIGRlZmF1bHRzIHRvIG9wdGlvbnMubWFpbkZpbGxcclxufTtcclxuXHJcbnR5cGUgVmVjdG9yQ29sb3JQYWxldHRlT3B0aW9ucyA9IFNlbGZPcHRpb25zO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmVjdG9yQ29sb3JQYWxldHRlIHtcclxuXHJcbiAgcHVibGljIHJlYWRvbmx5IG1haW5GaWxsOiBQYWxldHRlQ29sb3I7XHJcbiAgcHVibGljIHJlYWRvbmx5IG1haW5TdHJva2U6IFBhbGV0dGVDb2xvcjtcclxuICBwdWJsaWMgcmVhZG9ubHkgY29tcG9uZW50RmlsbDogUGFsZXR0ZUNvbG9yO1xyXG4gIHB1YmxpYyByZWFkb25seSBzdW1GaWxsOiBQYWxldHRlQ29sb3I7XHJcbiAgcHVibGljIHJlYWRvbmx5IHN1bVN0cm9rZTogUGFsZXR0ZUNvbG9yO1xyXG4gIHB1YmxpYyByZWFkb25seSBzdW1Db21wb25lbnRGaWxsOiBQYWxldHRlQ29sb3I7XHJcbiAgcHVibGljIHJlYWRvbmx5IGJhc2VWZWN0b3JGaWxsOiBQYWxldHRlQ29sb3I7XHJcbiAgcHVibGljIHJlYWRvbmx5IGJhc2VWZWN0b3JTdHJva2U6IFBhbGV0dGVDb2xvcjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM/OiBWZWN0b3JDb2xvclBhbGV0dGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8VmVjdG9yQ29sb3JQYWxldHRlT3B0aW9ucywgU2VsZk9wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIFNlbGZPcHRpb25zXHJcbiAgICAgIG1haW5GaWxsOiBDb2xvci5CTEFDSyxcclxuICAgICAgbWFpblN0cm9rZTogbnVsbCxcclxuICAgICAgY29tcG9uZW50RmlsbDogbnVsbCxcclxuICAgICAgc3VtRmlsbDogQ29sb3IuQkxBQ0ssXHJcbiAgICAgIHN1bVN0cm9rZTogbnVsbCxcclxuICAgICAgc3VtQ29tcG9uZW50RmlsbDogbnVsbCxcclxuICAgICAgYmFzZVZlY3RvckZpbGw6IENvbG9yLldISVRFLFxyXG4gICAgICBiYXNlVmVjdG9yU3Ryb2tlOiBudWxsXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLm1haW5GaWxsID0gb3B0aW9ucy5tYWluRmlsbDtcclxuICAgIHRoaXMubWFpblN0cm9rZSA9IG9wdGlvbnMubWFpblN0cm9rZTtcclxuICAgIHRoaXMuY29tcG9uZW50RmlsbCA9ICggb3B0aW9ucy5jb21wb25lbnRGaWxsIHx8IG9wdGlvbnMubWFpbkZpbGwgKTtcclxuICAgIHRoaXMuc3VtRmlsbCA9IG9wdGlvbnMuc3VtRmlsbDtcclxuICAgIHRoaXMuc3VtU3Ryb2tlID0gb3B0aW9ucy5zdW1TdHJva2U7XHJcbiAgICB0aGlzLnN1bUNvbXBvbmVudEZpbGwgPSAoIG9wdGlvbnMuc3VtQ29tcG9uZW50RmlsbCB8fCBvcHRpb25zLnN1bUZpbGwgKTtcclxuICAgIHRoaXMuYmFzZVZlY3RvckZpbGwgPSBvcHRpb25zLmJhc2VWZWN0b3JGaWxsO1xyXG4gICAgdGhpcy5iYXNlVmVjdG9yU3Ryb2tlID0gKCBvcHRpb25zLmJhc2VWZWN0b3JTdHJva2UgfHwgb3B0aW9ucy5tYWluRmlsbCApO1xyXG4gIH1cclxufVxyXG5cclxudmVjdG9yQWRkaXRpb24ucmVnaXN0ZXIoICdWZWN0b3JDb2xvclBhbGV0dGUnLCBWZWN0b3JDb2xvclBhbGV0dGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBSyxRQUFRLG1DQUFtQztBQUN6RCxPQUFPQyxjQUFjLE1BQU0seUJBQXlCO0FBQ3BELE9BQU9DLFNBQVMsTUFBTSx1Q0FBdUM7O0FBRTdEOztBQTJCQSxlQUFlLE1BQU1DLGtCQUFrQixDQUFDO0VBVy9CQyxXQUFXQSxDQUFFQyxlQUEyQyxFQUFHO0lBRWhFLE1BQU1DLE9BQU8sR0FBR0osU0FBUyxDQUF5QyxDQUFDLENBQUU7TUFFbkU7TUFDQUssUUFBUSxFQUFFUCxLQUFLLENBQUNRLEtBQUs7TUFDckJDLFVBQVUsRUFBRSxJQUFJO01BQ2hCQyxhQUFhLEVBQUUsSUFBSTtNQUNuQkMsT0FBTyxFQUFFWCxLQUFLLENBQUNRLEtBQUs7TUFDcEJJLFNBQVMsRUFBRSxJQUFJO01BQ2ZDLGdCQUFnQixFQUFFLElBQUk7TUFDdEJDLGNBQWMsRUFBRWQsS0FBSyxDQUFDZSxLQUFLO01BQzNCQyxnQkFBZ0IsRUFBRTtJQUNwQixDQUFDLEVBQUVYLGVBQWdCLENBQUM7SUFFcEIsSUFBSSxDQUFDRSxRQUFRLEdBQUdELE9BQU8sQ0FBQ0MsUUFBUTtJQUNoQyxJQUFJLENBQUNFLFVBQVUsR0FBR0gsT0FBTyxDQUFDRyxVQUFVO0lBQ3BDLElBQUksQ0FBQ0MsYUFBYSxHQUFLSixPQUFPLENBQUNJLGFBQWEsSUFBSUosT0FBTyxDQUFDQyxRQUFVO0lBQ2xFLElBQUksQ0FBQ0ksT0FBTyxHQUFHTCxPQUFPLENBQUNLLE9BQU87SUFDOUIsSUFBSSxDQUFDQyxTQUFTLEdBQUdOLE9BQU8sQ0FBQ00sU0FBUztJQUNsQyxJQUFJLENBQUNDLGdCQUFnQixHQUFLUCxPQUFPLENBQUNPLGdCQUFnQixJQUFJUCxPQUFPLENBQUNLLE9BQVM7SUFDdkUsSUFBSSxDQUFDRyxjQUFjLEdBQUdSLE9BQU8sQ0FBQ1EsY0FBYztJQUM1QyxJQUFJLENBQUNFLGdCQUFnQixHQUFLVixPQUFPLENBQUNVLGdCQUFnQixJQUFJVixPQUFPLENBQUNDLFFBQVU7RUFDMUU7QUFDRjtBQUVBTixjQUFjLENBQUNnQixRQUFRLENBQUUsb0JBQW9CLEVBQUVkLGtCQUFtQixDQUFDIiwiaWdub3JlTGlzdCI6W119