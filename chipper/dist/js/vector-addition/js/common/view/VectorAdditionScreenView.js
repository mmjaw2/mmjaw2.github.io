// Copyright 2019-2024, University of Colorado Boulder

/**
 * Base class for the top-level view of each screen.
 *
 * @author Martin Veillette
 */

import ScreenView from '../../../../joist/js/ScreenView.js';
import ResetAllButton from '../../../../scenery-phet/js/buttons/ResetAllButton.js';
import vectorAddition from '../../vectorAddition.js';
import VectorAdditionConstants from '../VectorAdditionConstants.js';
export default class VectorAdditionScreenView extends ScreenView {
  // Must be added to scene graph by subclass

  constructor(model, tandem) {
    super({
      layoutBounds: VectorAdditionConstants.SCREEN_VIEW_BOUNDS,
      isDisposable: false,
      tandem: tandem
    });
    this.resetAllButton = new ResetAllButton({
      listener: () => {
        model.reset();
        this.reset();
      },
      right: this.layoutBounds.maxX - VectorAdditionConstants.SCREEN_VIEW_X_MARGIN,
      bottom: this.layoutBounds.maxY - VectorAdditionConstants.SCREEN_VIEW_Y_MARGIN,
      tandem: tandem.createTandem('resetAllButton')
    });
    this.addChild(this.resetAllButton);
  }
  reset() {
    // cancel any interactions that are in progress
    this.interruptSubtreeInput();
  }
}
vectorAddition.register('VectorAdditionScreenView', VectorAdditionScreenView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW5WaWV3IiwiUmVzZXRBbGxCdXR0b24iLCJ2ZWN0b3JBZGRpdGlvbiIsIlZlY3RvckFkZGl0aW9uQ29uc3RhbnRzIiwiVmVjdG9yQWRkaXRpb25TY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJtb2RlbCIsInRhbmRlbSIsImxheW91dEJvdW5kcyIsIlNDUkVFTl9WSUVXX0JPVU5EUyIsImlzRGlzcG9zYWJsZSIsInJlc2V0QWxsQnV0dG9uIiwibGlzdGVuZXIiLCJyZXNldCIsInJpZ2h0IiwibWF4WCIsIlNDUkVFTl9WSUVXX1hfTUFSR0lOIiwiYm90dG9tIiwibWF4WSIsIlNDUkVFTl9WSUVXX1lfTUFSR0lOIiwiY3JlYXRlVGFuZGVtIiwiYWRkQ2hpbGQiLCJpbnRlcnJ1cHRTdWJ0cmVlSW5wdXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZlY3RvckFkZGl0aW9uU2NyZWVuVmlldy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBCYXNlIGNsYXNzIGZvciB0aGUgdG9wLWxldmVsIHZpZXcgb2YgZWFjaCBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgTWFydGluIFZlaWxsZXR0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW5WaWV3IGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgUmVzZXRBbGxCdXR0b24gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2J1dHRvbnMvUmVzZXRBbGxCdXR0b24uanMnO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IHZlY3RvckFkZGl0aW9uIGZyb20gJy4uLy4uL3ZlY3RvckFkZGl0aW9uLmpzJztcclxuaW1wb3J0IFZlY3RvckFkZGl0aW9uTW9kZWwgZnJvbSAnLi4vbW9kZWwvVmVjdG9yQWRkaXRpb25Nb2RlbC5qcyc7XHJcbmltcG9ydCBWZWN0b3JBZGRpdGlvbkNvbnN0YW50cyBmcm9tICcuLi9WZWN0b3JBZGRpdGlvbkNvbnN0YW50cy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZWN0b3JBZGRpdGlvblNjcmVlblZpZXcgZXh0ZW5kcyBTY3JlZW5WaWV3IHtcclxuXHJcbiAgLy8gTXVzdCBiZSBhZGRlZCB0byBzY2VuZSBncmFwaCBieSBzdWJjbGFzc1xyXG4gIHByb3RlY3RlZCByZWFkb25seSByZXNldEFsbEJ1dHRvbjogTm9kZTtcclxuXHJcbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKCBtb2RlbDogVmVjdG9yQWRkaXRpb25Nb2RlbCwgdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgbGF5b3V0Qm91bmRzOiBWZWN0b3JBZGRpdGlvbkNvbnN0YW50cy5TQ1JFRU5fVklFV19CT1VORFMsXHJcbiAgICAgIGlzRGlzcG9zYWJsZTogZmFsc2UsXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5yZXNldEFsbEJ1dHRvbiA9IG5ldyBSZXNldEFsbEJ1dHRvbigge1xyXG4gICAgICBsaXN0ZW5lcjogKCkgPT4ge1xyXG4gICAgICAgIG1vZGVsLnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5yZXNldCgpO1xyXG4gICAgICB9LFxyXG4gICAgICByaWdodDogdGhpcy5sYXlvdXRCb3VuZHMubWF4WCAtIFZlY3RvckFkZGl0aW9uQ29uc3RhbnRzLlNDUkVFTl9WSUVXX1hfTUFSR0lOLFxyXG4gICAgICBib3R0b206IHRoaXMubGF5b3V0Qm91bmRzLm1heFkgLSBWZWN0b3JBZGRpdGlvbkNvbnN0YW50cy5TQ1JFRU5fVklFV19ZX01BUkdJTixcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAncmVzZXRBbGxCdXR0b24nIClcclxuICAgIH0gKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHRoaXMucmVzZXRBbGxCdXR0b24gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuXHJcbiAgICAvLyBjYW5jZWwgYW55IGludGVyYWN0aW9ucyB0aGF0IGFyZSBpbiBwcm9ncmVzc1xyXG4gICAgdGhpcy5pbnRlcnJ1cHRTdWJ0cmVlSW5wdXQoKTtcclxuICB9XHJcbn1cclxuXHJcbnZlY3RvckFkZGl0aW9uLnJlZ2lzdGVyKCAnVmVjdG9yQWRkaXRpb25TY3JlZW5WaWV3JywgVmVjdG9yQWRkaXRpb25TY3JlZW5WaWV3ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSxvQ0FBb0M7QUFDM0QsT0FBT0MsY0FBYyxNQUFNLHVEQUF1RDtBQUdsRixPQUFPQyxjQUFjLE1BQU0seUJBQXlCO0FBRXBELE9BQU9DLHVCQUF1QixNQUFNLCtCQUErQjtBQUVuRSxlQUFlLE1BQU1DLHdCQUF3QixTQUFTSixVQUFVLENBQUM7RUFFL0Q7O0VBR1VLLFdBQVdBLENBQUVDLEtBQTBCLEVBQUVDLE1BQWMsRUFBRztJQUVsRSxLQUFLLENBQUU7TUFDTEMsWUFBWSxFQUFFTCx1QkFBdUIsQ0FBQ00sa0JBQWtCO01BQ3hEQyxZQUFZLEVBQUUsS0FBSztNQUNuQkgsTUFBTSxFQUFFQTtJQUNWLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0ksY0FBYyxHQUFHLElBQUlWLGNBQWMsQ0FBRTtNQUN4Q1csUUFBUSxFQUFFQSxDQUFBLEtBQU07UUFDZE4sS0FBSyxDQUFDTyxLQUFLLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQ0EsS0FBSyxDQUFDLENBQUM7TUFDZCxDQUFDO01BQ0RDLEtBQUssRUFBRSxJQUFJLENBQUNOLFlBQVksQ0FBQ08sSUFBSSxHQUFHWix1QkFBdUIsQ0FBQ2Esb0JBQW9CO01BQzVFQyxNQUFNLEVBQUUsSUFBSSxDQUFDVCxZQUFZLENBQUNVLElBQUksR0FBR2YsdUJBQXVCLENBQUNnQixvQkFBb0I7TUFDN0VaLE1BQU0sRUFBRUEsTUFBTSxDQUFDYSxZQUFZLENBQUUsZ0JBQWlCO0lBQ2hELENBQUUsQ0FBQztJQUNILElBQUksQ0FBQ0MsUUFBUSxDQUFFLElBQUksQ0FBQ1YsY0FBZSxDQUFDO0VBQ3RDO0VBRU9FLEtBQUtBLENBQUEsRUFBUztJQUVuQjtJQUNBLElBQUksQ0FBQ1MscUJBQXFCLENBQUMsQ0FBQztFQUM5QjtBQUNGO0FBRUFwQixjQUFjLENBQUNxQixRQUFRLENBQUUsMEJBQTBCLEVBQUVuQix3QkFBeUIsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==