// Copyright 2019-2023, University of Colorado Boulder

/**
 * VectorCheckbox is a checkbox that is labeled with a vector symbol and vector arrow.
 * It's used to control the visibility of the sum ('c' or 'f') vector in the Equations screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Color, HBox } from '../../../../scenery/js/imports.js';
import vectorAddition from '../../vectorAddition.js';
import VectorAdditionConstants from '../VectorAdditionConstants.js';
import ArrowOverSymbolNode from './ArrowOverSymbolNode.js';
import VectorAdditionCheckbox from './VectorAdditionCheckbox.js';
import VectorAdditionIconFactory from './VectorAdditionIconFactory.js';
import optionize from '../../../../phet-core/js/optionize.js';
export default class VectorCheckbox extends VectorAdditionCheckbox {
  constructor(vectorVisibleProperty, symbol, providedOptions) {
    const options = optionize()({
      // SelfOptions
      vectorFill: Color.WHITE,
      vectorStroke: Color.BLACK
    }, providedOptions);
    const symbolNode = new ArrowOverSymbolNode(symbol, {
      maxWidth: 95 // determined empirically
    });
    const icon = VectorAdditionIconFactory.createVectorIcon(35, {
      fill: options.vectorFill,
      stroke: options.vectorStroke
    });
    const content = new HBox({
      spacing: VectorAdditionConstants.CHECKBOX_ICON_SPACING,
      children: [symbolNode, icon]
    });
    super(vectorVisibleProperty, content, options);
  }
}
vectorAddition.register('VectorCheckbox', VectorCheckbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb2xvciIsIkhCb3giLCJ2ZWN0b3JBZGRpdGlvbiIsIlZlY3RvckFkZGl0aW9uQ29uc3RhbnRzIiwiQXJyb3dPdmVyU3ltYm9sTm9kZSIsIlZlY3RvckFkZGl0aW9uQ2hlY2tib3giLCJWZWN0b3JBZGRpdGlvbkljb25GYWN0b3J5Iiwib3B0aW9uaXplIiwiVmVjdG9yQ2hlY2tib3giLCJjb25zdHJ1Y3RvciIsInZlY3RvclZpc2libGVQcm9wZXJ0eSIsInN5bWJvbCIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJ2ZWN0b3JGaWxsIiwiV0hJVEUiLCJ2ZWN0b3JTdHJva2UiLCJCTEFDSyIsInN5bWJvbE5vZGUiLCJtYXhXaWR0aCIsImljb24iLCJjcmVhdGVWZWN0b3JJY29uIiwiZmlsbCIsInN0cm9rZSIsImNvbnRlbnQiLCJzcGFjaW5nIiwiQ0hFQ0tCT1hfSUNPTl9TUEFDSU5HIiwiY2hpbGRyZW4iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZlY3RvckNoZWNrYm94LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFZlY3RvckNoZWNrYm94IGlzIGEgY2hlY2tib3ggdGhhdCBpcyBsYWJlbGVkIHdpdGggYSB2ZWN0b3Igc3ltYm9sIGFuZCB2ZWN0b3IgYXJyb3cuXHJcbiAqIEl0J3MgdXNlZCB0byBjb250cm9sIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBzdW0gKCdjJyBvciAnZicpIHZlY3RvciBpbiB0aGUgRXF1YXRpb25zIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgeyBDb2xvciwgSEJveCwgVENvbG9yIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHZlY3RvckFkZGl0aW9uIGZyb20gJy4uLy4uL3ZlY3RvckFkZGl0aW9uLmpzJztcclxuaW1wb3J0IFZlY3RvckFkZGl0aW9uQ29uc3RhbnRzIGZyb20gJy4uL1ZlY3RvckFkZGl0aW9uQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEFycm93T3ZlclN5bWJvbE5vZGUgZnJvbSAnLi9BcnJvd092ZXJTeW1ib2xOb2RlLmpzJztcclxuaW1wb3J0IFZlY3RvckFkZGl0aW9uQ2hlY2tib3gsIHsgVmVjdG9yQWRkaXRpb25DaGVja2JveE9wdGlvbnMgfSBmcm9tICcuL1ZlY3RvckFkZGl0aW9uQ2hlY2tib3guanMnO1xyXG5pbXBvcnQgVmVjdG9yQWRkaXRpb25JY29uRmFjdG9yeSBmcm9tICcuL1ZlY3RvckFkZGl0aW9uSWNvbkZhY3RvcnkuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG4gIHZlY3RvckZpbGw/OiBUQ29sb3I7XHJcbiAgdmVjdG9yU3Ryb2tlPzogVENvbG9yO1xyXG59O1xyXG5cclxudHlwZSBWZWN0b3JDaGVja2JveE9wdGlvbnMgPSBTZWxmT3B0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZlY3RvckNoZWNrYm94IGV4dGVuZHMgVmVjdG9yQWRkaXRpb25DaGVja2JveCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdmVjdG9yVmlzaWJsZVByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPiwgc3ltYm9sOiBzdHJpbmcsIHByb3ZpZGVkT3B0aW9ucz86IFZlY3RvckNoZWNrYm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFZlY3RvckNoZWNrYm94T3B0aW9ucywgU2VsZk9wdGlvbnMsIFZlY3RvckFkZGl0aW9uQ2hlY2tib3hPcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBTZWxmT3B0aW9uc1xyXG4gICAgICB2ZWN0b3JGaWxsOiBDb2xvci5XSElURSxcclxuICAgICAgdmVjdG9yU3Ryb2tlOiBDb2xvci5CTEFDS1xyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3Qgc3ltYm9sTm9kZSA9IG5ldyBBcnJvd092ZXJTeW1ib2xOb2RlKCBzeW1ib2wsIHtcclxuICAgICAgbWF4V2lkdGg6IDk1IC8vIGRldGVybWluZWQgZW1waXJpY2FsbHlcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBpY29uID0gVmVjdG9yQWRkaXRpb25JY29uRmFjdG9yeS5jcmVhdGVWZWN0b3JJY29uKCAzNSwge1xyXG4gICAgICBmaWxsOiBvcHRpb25zLnZlY3RvckZpbGwsXHJcbiAgICAgIHN0cm9rZTogb3B0aW9ucy52ZWN0b3JTdHJva2VcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBjb250ZW50ID0gbmV3IEhCb3goIHtcclxuICAgICAgc3BhY2luZzogVmVjdG9yQWRkaXRpb25Db25zdGFudHMuQ0hFQ0tCT1hfSUNPTl9TUEFDSU5HLFxyXG4gICAgICBjaGlsZHJlbjogWyBzeW1ib2xOb2RlLCBpY29uIF1cclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggdmVjdG9yVmlzaWJsZVByb3BlcnR5LCBjb250ZW50LCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG52ZWN0b3JBZGRpdGlvbi5yZWdpc3RlciggJ1ZlY3RvckNoZWNrYm94JywgVmVjdG9yQ2hlY2tib3ggKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxLQUFLLEVBQUVDLElBQUksUUFBZ0IsbUNBQW1DO0FBQ3ZFLE9BQU9DLGNBQWMsTUFBTSx5QkFBeUI7QUFDcEQsT0FBT0MsdUJBQXVCLE1BQU0sK0JBQStCO0FBQ25FLE9BQU9DLG1CQUFtQixNQUFNLDBCQUEwQjtBQUMxRCxPQUFPQyxzQkFBc0IsTUFBeUMsNkJBQTZCO0FBQ25HLE9BQU9DLHlCQUF5QixNQUFNLGdDQUFnQztBQUV0RSxPQUFPQyxTQUFTLE1BQU0sdUNBQXVDO0FBUzdELGVBQWUsTUFBTUMsY0FBYyxTQUFTSCxzQkFBc0IsQ0FBQztFQUUxREksV0FBV0EsQ0FBRUMscUJBQXdDLEVBQUVDLE1BQWMsRUFBRUMsZUFBdUMsRUFBRztJQUV0SCxNQUFNQyxPQUFPLEdBQUdOLFNBQVMsQ0FBb0UsQ0FBQyxDQUFFO01BRTlGO01BQ0FPLFVBQVUsRUFBRWQsS0FBSyxDQUFDZSxLQUFLO01BQ3ZCQyxZQUFZLEVBQUVoQixLQUFLLENBQUNpQjtJQUN0QixDQUFDLEVBQUVMLGVBQWdCLENBQUM7SUFFcEIsTUFBTU0sVUFBVSxHQUFHLElBQUlkLG1CQUFtQixDQUFFTyxNQUFNLEVBQUU7TUFDbERRLFFBQVEsRUFBRSxFQUFFLENBQUM7SUFDZixDQUFFLENBQUM7SUFFSCxNQUFNQyxJQUFJLEdBQUdkLHlCQUF5QixDQUFDZSxnQkFBZ0IsQ0FBRSxFQUFFLEVBQUU7TUFDM0RDLElBQUksRUFBRVQsT0FBTyxDQUFDQyxVQUFVO01BQ3hCUyxNQUFNLEVBQUVWLE9BQU8sQ0FBQ0c7SUFDbEIsQ0FBRSxDQUFDO0lBRUgsTUFBTVEsT0FBTyxHQUFHLElBQUl2QixJQUFJLENBQUU7TUFDeEJ3QixPQUFPLEVBQUV0Qix1QkFBdUIsQ0FBQ3VCLHFCQUFxQjtNQUN0REMsUUFBUSxFQUFFLENBQUVULFVBQVUsRUFBRUUsSUFBSTtJQUM5QixDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVWLHFCQUFxQixFQUFFYyxPQUFPLEVBQUVYLE9BQVEsQ0FBQztFQUNsRDtBQUNGO0FBRUFYLGNBQWMsQ0FBQzBCLFFBQVEsQ0FBRSxnQkFBZ0IsRUFBRXBCLGNBQWUsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==