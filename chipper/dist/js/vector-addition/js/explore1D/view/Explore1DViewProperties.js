// Copyright 2019-2023, University of Colorado Boulder

/**
 * View-specific Properties for the 'Explore 1D' screen.
 *
 * Extends VectorAdditionViewProperty but adds:
 *  - Graph Orientation Property
 *  - Disables coordinateSnapModeProperty and angle visible Property
 *
 * @author Brandon Li
 */

import EnumerationProperty from '../../../../axon/js/EnumerationProperty.js';
import CoordinateSnapModes from '../../common/model/CoordinateSnapModes.js';
import GraphOrientations from '../../common/model/GraphOrientations.js';
import VectorAdditionViewProperties from '../../common/view/VectorAdditionViewProperties.js';
import vectorAddition from '../../vectorAddition.js';
export default class Explore1DViewProperties extends VectorAdditionViewProperties {
  constructor() {
    super();
    this.graphOrientationProperty = new EnumerationProperty(GraphOrientations.HORIZONTAL);

    // Vector angle visualization is not supported by this screen.
    // unlink is unnecessary, exists for the lifetime of the sim.
    assert && this.anglesVisibleProperty.link(angleVisible => {
      if (angleVisible) {
        assert && assert(false, 'Explore 1D does not support angles');
      }
    });

    // Polar snap mode is not supported by this screen.
    // unlink is unnecessary, exists for the lifetime of the sim.
    assert && this.coordinateSnapModeProperty.link(coordinateSnapMode => {
      if (coordinateSnapMode === CoordinateSnapModes.POLAR) {
        assert && assert(false, 'Explore 1D does not support polar snap mode');
      }
    });
  }
  reset() {
    super.reset();
    this.graphOrientationProperty.reset();
  }
}
vectorAddition.register('Explore1DViewProperties', Explore1DViewProperties);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnVtZXJhdGlvblByb3BlcnR5IiwiQ29vcmRpbmF0ZVNuYXBNb2RlcyIsIkdyYXBoT3JpZW50YXRpb25zIiwiVmVjdG9yQWRkaXRpb25WaWV3UHJvcGVydGllcyIsInZlY3RvckFkZGl0aW9uIiwiRXhwbG9yZTFEVmlld1Byb3BlcnRpZXMiLCJjb25zdHJ1Y3RvciIsImdyYXBoT3JpZW50YXRpb25Qcm9wZXJ0eSIsIkhPUklaT05UQUwiLCJhc3NlcnQiLCJhbmdsZXNWaXNpYmxlUHJvcGVydHkiLCJsaW5rIiwiYW5nbGVWaXNpYmxlIiwiY29vcmRpbmF0ZVNuYXBNb2RlUHJvcGVydHkiLCJjb29yZGluYXRlU25hcE1vZGUiLCJQT0xBUiIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFeHBsb3JlMURWaWV3UHJvcGVydGllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaWV3LXNwZWNpZmljIFByb3BlcnRpZXMgZm9yIHRoZSAnRXhwbG9yZSAxRCcgc2NyZWVuLlxyXG4gKlxyXG4gKiBFeHRlbmRzIFZlY3RvckFkZGl0aW9uVmlld1Byb3BlcnR5IGJ1dCBhZGRzOlxyXG4gKiAgLSBHcmFwaCBPcmllbnRhdGlvbiBQcm9wZXJ0eVxyXG4gKiAgLSBEaXNhYmxlcyBjb29yZGluYXRlU25hcE1vZGVQcm9wZXJ0eSBhbmQgYW5nbGUgdmlzaWJsZSBQcm9wZXJ0eVxyXG4gKlxyXG4gKiBAYXV0aG9yIEJyYW5kb24gTGlcclxuICovXHJcblxyXG5pbXBvcnQgRW51bWVyYXRpb25Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0VudW1lcmF0aW9uUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgQ29vcmRpbmF0ZVNuYXBNb2RlcyBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvQ29vcmRpbmF0ZVNuYXBNb2Rlcy5qcyc7XHJcbmltcG9ydCBHcmFwaE9yaWVudGF0aW9ucyBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvR3JhcGhPcmllbnRhdGlvbnMuanMnO1xyXG5pbXBvcnQgVmVjdG9yQWRkaXRpb25WaWV3UHJvcGVydGllcyBmcm9tICcuLi8uLi9jb21tb24vdmlldy9WZWN0b3JBZGRpdGlvblZpZXdQcm9wZXJ0aWVzLmpzJztcclxuaW1wb3J0IHZlY3RvckFkZGl0aW9uIGZyb20gJy4uLy4uL3ZlY3RvckFkZGl0aW9uLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4cGxvcmUxRFZpZXdQcm9wZXJ0aWVzIGV4dGVuZHMgVmVjdG9yQWRkaXRpb25WaWV3UHJvcGVydGllcyB7XHJcblxyXG4gIHB1YmxpYyByZWFkb25seSBncmFwaE9yaWVudGF0aW9uUHJvcGVydHk6IEVudW1lcmF0aW9uUHJvcGVydHk8R3JhcGhPcmllbnRhdGlvbnM+O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmdyYXBoT3JpZW50YXRpb25Qcm9wZXJ0eSA9IG5ldyBFbnVtZXJhdGlvblByb3BlcnR5KCBHcmFwaE9yaWVudGF0aW9ucy5IT1JJWk9OVEFMICk7XHJcblxyXG4gICAgLy8gVmVjdG9yIGFuZ2xlIHZpc3VhbGl6YXRpb24gaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIHNjcmVlbi5cclxuICAgIC8vIHVubGluayBpcyB1bm5lY2Vzc2FyeSwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbS5cclxuICAgIGFzc2VydCAmJiB0aGlzLmFuZ2xlc1Zpc2libGVQcm9wZXJ0eS5saW5rKCBhbmdsZVZpc2libGUgPT4ge1xyXG4gICAgICBpZiAoIGFuZ2xlVmlzaWJsZSApIHtcclxuICAgICAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ0V4cGxvcmUgMUQgZG9lcyBub3Qgc3VwcG9ydCBhbmdsZXMnICk7XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBQb2xhciBzbmFwIG1vZGUgaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIHNjcmVlbi5cclxuICAgIC8vIHVubGluayBpcyB1bm5lY2Vzc2FyeSwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbS5cclxuICAgIGFzc2VydCAmJiB0aGlzLmNvb3JkaW5hdGVTbmFwTW9kZVByb3BlcnR5LmxpbmsoIGNvb3JkaW5hdGVTbmFwTW9kZSA9PiB7XHJcbiAgICAgIGlmICggY29vcmRpbmF0ZVNuYXBNb2RlID09PSBDb29yZGluYXRlU25hcE1vZGVzLlBPTEFSICkge1xyXG4gICAgICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnRXhwbG9yZSAxRCBkb2VzIG5vdCBzdXBwb3J0IHBvbGFyIHNuYXAgbW9kZScgKTtcclxuICAgICAgfVxyXG4gICAgfSApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgc3VwZXIucmVzZXQoKTtcclxuICAgIHRoaXMuZ3JhcGhPcmllbnRhdGlvblByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcblxyXG52ZWN0b3JBZGRpdGlvbi5yZWdpc3RlciggJ0V4cGxvcmUxRFZpZXdQcm9wZXJ0aWVzJywgRXhwbG9yZTFEVmlld1Byb3BlcnRpZXMgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxtQkFBbUIsTUFBTSw0Q0FBNEM7QUFDNUUsT0FBT0MsbUJBQW1CLE1BQU0sMkNBQTJDO0FBQzNFLE9BQU9DLGlCQUFpQixNQUFNLHlDQUF5QztBQUN2RSxPQUFPQyw0QkFBNEIsTUFBTSxtREFBbUQ7QUFDNUYsT0FBT0MsY0FBYyxNQUFNLHlCQUF5QjtBQUVwRCxlQUFlLE1BQU1DLHVCQUF1QixTQUFTRiw0QkFBNEIsQ0FBQztFQUl6RUcsV0FBV0EsQ0FBQSxFQUFHO0lBRW5CLEtBQUssQ0FBQyxDQUFDO0lBRVAsSUFBSSxDQUFDQyx3QkFBd0IsR0FBRyxJQUFJUCxtQkFBbUIsQ0FBRUUsaUJBQWlCLENBQUNNLFVBQVcsQ0FBQzs7SUFFdkY7SUFDQTtJQUNBQyxNQUFNLElBQUksSUFBSSxDQUFDQyxxQkFBcUIsQ0FBQ0MsSUFBSSxDQUFFQyxZQUFZLElBQUk7TUFDekQsSUFBS0EsWUFBWSxFQUFHO1FBQ2xCSCxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsb0NBQXFDLENBQUM7TUFDakU7SUFDRixDQUFFLENBQUM7O0lBRUg7SUFDQTtJQUNBQSxNQUFNLElBQUksSUFBSSxDQUFDSSwwQkFBMEIsQ0FBQ0YsSUFBSSxDQUFFRyxrQkFBa0IsSUFBSTtNQUNwRSxJQUFLQSxrQkFBa0IsS0FBS2IsbUJBQW1CLENBQUNjLEtBQUssRUFBRztRQUN0RE4sTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDZDQUE4QyxDQUFDO01BQzFFO0lBQ0YsQ0FBRSxDQUFDO0VBQ0w7RUFFZ0JPLEtBQUtBLENBQUEsRUFBUztJQUM1QixLQUFLLENBQUNBLEtBQUssQ0FBQyxDQUFDO0lBQ2IsSUFBSSxDQUFDVCx3QkFBd0IsQ0FBQ1MsS0FBSyxDQUFDLENBQUM7RUFDdkM7QUFDRjtBQUVBWixjQUFjLENBQUNhLFFBQVEsQ0FBRSx5QkFBeUIsRUFBRVosdUJBQXdCLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=