/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,//swxAAABbQXJue9InEGkeow9gy2AWSSSTAYoasSAbQuZ2IxjE6OhsMSZyx0576hvOP937/yhc4f0+H8LGFLHEz/XACUm0rv4BAiekAH6Jm5k8ECY8EgUIZ/AWGETh20scbX3gG7mZV3GgAhQncv3c4W4c9K5vl8EbDh9vE4Pl0bhBdl1QI5EgYIAkvMcggdSAIDGiYaCi1TJEP3//syxAuDiiyfQi2kcoEWjupFl5kgnLqM4ZI3NY8CQdRuXdoWvuuoGEFJjQ7a8upTGkSD3r2gYuE8ECDCcjuVOucc7PFj4P9PekLOItFR8vjb6SV/gLubu4jCdBDBUZqEFTw/hQO0ybCPVq3CQyd5UHRCwsCEH0Q2jEIIZNfXX87QzJsM1BcYADgQAD46ZctK/iAM1+rAAABG7CPrHv/7MsQEAAhUV2EspMpBDpFtsPMN3ulsDrrB7ZQEtNXcZW2+eAIHA1iQRS9ljECBZvLtnu+S6a0YJB+JgA6CDaxPlVGWHQ8HCBR6DCHeop9TISRiRalWFgH80HmEgJsLEZSTTztIStqpXKlQ8kZdEvWy8/YHdL2UHbB5ExRrSNWBrmZcZcEPZJL6UvqfSVDXar//BZXAxySNtyOOAMj/+zLEBIAItGtxp6SqsRAR7HT0jS4d8QmJJZG00FqAYyyFThGaVJDhkyhEHLIVsIpRT5Ssl3QDJM4wO6FDnlUhth1ElXKmXHvDqFQ0q1d5VN1FDjbkjTkcbALCLomUkUyMYChZlETMFQ9IXGnxGCb5rKyyHa0yhr8jfhbAY0MMamoklKVfb/Chu1FTLVMmzBJmtJ63PVoASmWaSySw//swxAOACFCLR6wwY6EPjiUFjRgoASFZYJYluFJiTQJCKPxyWSbCVDbjImuKZcwigTEdWzMMCOq6gJHJt0opTbvnSzCnRRM4GisU2ZL21TSX8JwGyJ1hZsTyoi3rd1yuVAdq07U9pFBBxQEHNQFHBVEi558+dTrbqXNvkmfcf9RQCtDgmnC0PPQXGaQzhe3o3evtdZUlttySX9Dh//syxAOAB/CXQ4ekZbDzkKc08wy0Wm4WA3SxrggemjmvrLhYPMwbgiQojkTMANwObSCpMBsRVwWZ03B7lJnulzuVMH3jG94r//vrv9DwI1K5XLM2UAR0cp3AuyNw3weQIg517NTTJHBXYkqjgo8ISOcjM523jJ9g1NmhoJtiVyLJKhB5Wi//Tdr9qgE0i2422iBAFsxlsAgejsEw6//7MsQJAAdMYTOnsGGg5opk3YMM2AMNO5+lxBo0cc4gsbfEqUFiQY53+2jBwHIGwgfJbxsYm3Z2UK7P//0gBBSJAoKalowNRlKnpTAkNJysTRiR23F8rIPdNBNHvoJIJDyIPAuCbzAXFUx7FEd0cWU1ZTd//+/qCLRKSikaIMATpvhKx1LK+hL2NEuYzCasqVFKkCuijuwbJkO+FGr/+zLEEwAG5Gczp4RpIM2RZzTAjAQICZLT4rfEYug+7Vq//0f6tYJTcdlt2gaAD05A3UhQo0dZrmawLqX/IKoI1DC8rt4NGcleF1HLcuOR0TbQd/98bsfo/uoAgIJKVAFYD8GhU5BgKLBU6eDdbu/RJej3f6k9RX7NSP++3qpMQU1FMy45OS41qqqqqqqqqqqqqqqqqqqqqqqqqqqq//swxCGDxHAPGOekYBAAADSAAAAEqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbImVyYXNlX21wMy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5pbXBvcnQgYXN5bmNMb2FkZXIgZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL2FzeW5jTG9hZGVyLmpzJztcclxuaW1wb3J0IGJhc2U2NFNvdW5kVG9CeXRlQXJyYXkgZnJvbSAnLi4vLi4vdGFtYm8vanMvYmFzZTY0U291bmRUb0J5dGVBcnJheS5qcyc7XHJcbmltcG9ydCBXcmFwcGVkQXVkaW9CdWZmZXIgZnJvbSAnLi4vLi4vdGFtYm8vanMvV3JhcHBlZEF1ZGlvQnVmZmVyLmpzJztcclxuaW1wb3J0IHBoZXRBdWRpb0NvbnRleHQgZnJvbSAnLi4vLi4vdGFtYm8vanMvcGhldEF1ZGlvQ29udGV4dC5qcyc7XHJcblxyXG5jb25zdCBzb3VuZFVSSSA9ICdkYXRhOmF1ZGlvL21wZWc7YmFzZTY0LC8vc3d4QUFBQmJRWEp1ZTlJbkVHa2VvdzlneTJBV1NTU1RBWW9hc1NBYlF1WjJJeGpFNk9oc01TWnl4MDU3Nmh2T1A5MzcveWhjNGYwK0g4TEdGTEhFei9YQUNVbTBydjRCQWlla0FINkptNWs4RUNZOEVnVUlaL0FXR0VUaDIwc2NiWDNnRzdtWlYzR2dBaFFuY3YzYzRXNGM5SzV2bDhFYkRoOXZFNFBsMGJoQmRsMVFJNUVnWUlBa3ZNY2dnZFNBSURHaVlhQ2kxVEpFUDMvL3N5eEF1RGlpeWZRaTJrY29FV2p1cEZsNWtnbkxxTTRaSTNOWThDUWRSdVhkb1d2dXVvR0VGSmpRN2E4dXBUR2tTRDNyMmdZdUU4RUNEQ2NqdVZPdWNjN1BGajRQOVBla0xPSXRGUjh2amI2U1YvZ0x1YnU0akNkQkRCVVpxRUZUdy9oUU8weWJDUFZxM0NReWQ1VUhSQ3dzQ0VIMFEyakVJSVpOZlhYODdRekpzTTFCY1lBRGdRQUQ0NlpjdEsvaUFNMStyQUFBQkc3Q1BySHYvN01zUUVBQWhVVjJFc3BNcEJEcEZ0c1BNTjN1bHNEcnJCN1pRRXROWGNaVzIrZUFJSEExaVFSUzlsakVDQlp2THRudStTNmEwWUpCK0pnQTZDRGF4UGxWR1dIUThIQ0JSNkRDSGVvcDlUSVNSaVJhbFdGZ0g4MEhtRWdKc0xFWlNUVHp0SVN0cXBYS2xROGtaZEV2V3k4L1lIZEwyVUhiQjVFeFJyU05XQnJtWmNaY0VQWkpMNlV2cWZTVkRYYXIvL0JaWEF4eVNOdHlPT0FNai8rekxFQklBSXRHdHhwNlNxc1JBUjdIVDBqUzRkOFFtSkpaRzAwRnFBWXl5RlRoR2FWSkRoa3loRUhMSVZzSXBSVDVTc2wzUURKTTR3TzZGRG5sVWh0aDFFbFhLbVhIdkRxRlEwcTFkNVZOMUZEamJralRrY2JBTENMb21Va1V5TVlDaFpsRVRNRlE5SVhHbnhHQ2I1ckt5eUhhMHlocjhqZmhiQVkwTU1hbW9rbEtWZmIvQ2h1MUZUTFZNbXpCSm10SjYzUFZvQVNtV2FTeVN3Ly9zd3hBT0FDRkNMUjZ3d1k2RVBqaVVGalJnb0FTRlpZSllsdUZKaVRRSkNLUHh5V1NiQ1ZEYmpJbXVLWmN3aWdURWRXek1NQ09xNmdKSEp0MG9wVGJ2blN6Q25SUk00R2lzVTJaTDIxVFNYOEp3R3lKMWhac1R5b2kzcmQxeXVWQWRxMDdVOXBGQkJ4UUVITlFGSEJWRWk1NTgrZFRyYnFYTnZrbWZjZjlSUUN0RGdtbkMwUFBRWEdhUXpoZTNvM2V2dGRaVWx0dHlTWDlEaC8vc3l4QU9BQi9DWFE0ZWtaYkR6a0tjMDh3eTBXbTRXQTNTeHJnZ2Vtam12ckxoWVBNd2JnaVFvamtUTUFOd09iU0NwTUJzUlZ3V1owM0I3bEpudWx6dVZNSDNqRzk0ci8vdnJ2OUR3STFLNVhMTTJVQVIwY3AzQXV5Tnczd2VRSWc1MTdOVFRKSEJYWWtxamdvOElTT2NqTTUyM2pKOWcxTm1ob0p0aVZ5TEpLaEI1V2kvL1RkcjlxZ0UwaTI0MjJpQkFGc3hsc0FnZWpzRXc2Ly83TXNRSkFBZE1ZVE9uc0dHZzVvcGszWU1NMkFNTk81K2x4Qm8wY2M0Z3NiZkVxVUZpUVk1MysyakJ3SElHd2dmSmJ4c1ltM1oyVUs3UC8vMGdCQlNKQW9LYWxvd05SbEtucFRBa05KeXNUUmlSMjNGOHJJUGROQk5Idm9KSUpEeUlQQXVDYnpBWEZVeDdGRWQwY1dVMVpUZC8vKy9xQ0xSS1Npa2FJTUFUcHZoS3gxTEsraEwyTkV1WXpDYXNxVkZLa0N1aWp1d2JKa08rRkdyLyt6TEVFd0FHNUdjenA0UnBJTTJSWnpUQWpBUUlDWkxUNHJmRVl1Zys3VnEvLzBmNnRZSlRjZGx0MmdhQUQwNUEzVWhRbzBkWnJtYXdMcVgvSUtvSTFEQzhydDROR2NsZUYxSExjdU9SMFRiUWQvOThic2ZvL3VvQWdJSktWQUZZRDhHaFU1QmdLTEJVNmVEZGJ1L1JKZWozZjZrOVJYN05TUCsrM3FwTVFVMUZNeTQ1T1M0MXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXEvL3N3eENHRHhIQVBHT2VrWUJBQUFEU0FBQUFFcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxJztcclxuY29uc3Qgc291bmRCeXRlQXJyYXkgPSBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5KCBwaGV0QXVkaW9Db250ZXh0LCBzb3VuZFVSSSApO1xyXG5jb25zdCB1bmxvY2sgPSBhc3luY0xvYWRlci5jcmVhdGVMb2NrKCBzb3VuZFVSSSApO1xyXG5jb25zdCB3cmFwcGVkQXVkaW9CdWZmZXIgPSBuZXcgV3JhcHBlZEF1ZGlvQnVmZmVyKCk7XHJcblxyXG4vLyBzYWZlIHdheSB0byB1bmxvY2tcclxubGV0IHVubG9ja2VkID0gZmFsc2U7XHJcbmNvbnN0IHNhZmVVbmxvY2sgPSAoKSA9PiB7XHJcbiAgaWYgKCAhdW5sb2NrZWQgKSB7XHJcbiAgICB1bmxvY2soKTtcclxuICAgIHVubG9ja2VkID0gdHJ1ZTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBvbkRlY29kZVN1Y2Nlc3MgPSBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIGRlY29kZWRBdWRpbyApO1xyXG4gICAgc2FmZVVubG9jaygpO1xyXG4gIH1cclxufTtcclxuY29uc3Qgb25EZWNvZGVFcnJvciA9IGRlY29kZUVycm9yID0+IHtcclxuICBjb25zb2xlLndhcm4oICdkZWNvZGUgb2YgYXVkaW8gZGF0YSBmYWlsZWQsIHVzaW5nIHN0dWJiZWQgc291bmQsIGVycm9yOiAnICsgZGVjb2RlRXJyb3IgKTtcclxuICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIHBoZXRBdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKCAxLCAxLCBwaGV0QXVkaW9Db250ZXh0LnNhbXBsZVJhdGUgKSApO1xyXG4gIHNhZmVVbmxvY2soKTtcclxufTtcclxuY29uc3QgZGVjb2RlUHJvbWlzZSA9IHBoZXRBdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKCBzb3VuZEJ5dGVBcnJheS5idWZmZXIsIG9uRGVjb2RlU3VjY2Vzcywgb25EZWNvZGVFcnJvciApO1xyXG5pZiAoIGRlY29kZVByb21pc2UgKSB7XHJcbiAgZGVjb2RlUHJvbWlzZVxyXG4gICAgLnRoZW4oIGRlY29kZWRBdWRpbyA9PiB7XHJcbiAgICAgIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICAgICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgICAgICBzYWZlVW5sb2NrKCk7XHJcbiAgICAgIH1cclxuICAgIH0gKVxyXG4gICAgLmNhdGNoKCBlID0+IHtcclxuICAgICAgY29uc29sZS53YXJuKCAncHJvbWlzZSByZWplY3Rpb24gY2F1Z2h0IGZvciBhdWRpbyBkZWNvZGUsIGVycm9yID0gJyArIGUgKTtcclxuICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgfSApO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRBdWRpb0J1ZmZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBT0EsV0FBVyxNQUFNLG1DQUFtQztBQUMzRCxPQUFPQyxzQkFBc0IsTUFBTSwwQ0FBMEM7QUFDN0UsT0FBT0Msa0JBQWtCLE1BQU0sc0NBQXNDO0FBQ3JFLE9BQU9DLGdCQUFnQixNQUFNLG9DQUFvQztBQUVqRSxNQUFNQyxRQUFRLEdBQUcsaTNEQUFpM0Q7QUFDbDRELE1BQU1DLGNBQWMsR0FBR0osc0JBQXNCLENBQUVFLGdCQUFnQixFQUFFQyxRQUFTLENBQUM7QUFDM0UsTUFBTUUsTUFBTSxHQUFHTixXQUFXLENBQUNPLFVBQVUsQ0FBRUgsUUFBUyxDQUFDO0FBQ2pELE1BQU1JLGtCQUFrQixHQUFHLElBQUlOLGtCQUFrQixDQUFDLENBQUM7O0FBRW5EO0FBQ0EsSUFBSU8sUUFBUSxHQUFHLEtBQUs7QUFDcEIsTUFBTUMsVUFBVSxHQUFHQSxDQUFBLEtBQU07RUFDdkIsSUFBSyxDQUFDRCxRQUFRLEVBQUc7SUFDZkgsTUFBTSxDQUFDLENBQUM7SUFDUkcsUUFBUSxHQUFHLElBQUk7RUFDakI7QUFDRixDQUFDO0FBRUQsTUFBTUUsZUFBZSxHQUFHQyxZQUFZLElBQUk7RUFDdEMsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO0lBQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO0lBQzFERixVQUFVLENBQUMsQ0FBQztFQUNkO0FBQ0YsQ0FBQztBQUNELE1BQU1NLGFBQWEsR0FBR0MsV0FBVyxJQUFJO0VBQ25DQyxPQUFPLENBQUNDLElBQUksQ0FBRSwyREFBMkQsR0FBR0YsV0FBWSxDQUFDO0VBQ3pGVCxrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRVosZ0JBQWdCLENBQUNpQixZQUFZLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRWpCLGdCQUFnQixDQUFDa0IsVUFBVyxDQUFFLENBQUM7RUFDaEhYLFVBQVUsQ0FBQyxDQUFDO0FBQ2QsQ0FBQztBQUNELE1BQU1ZLGFBQWEsR0FBR25CLGdCQUFnQixDQUFDb0IsZUFBZSxDQUFFbEIsY0FBYyxDQUFDbUIsTUFBTSxFQUFFYixlQUFlLEVBQUVLLGFBQWMsQ0FBQztBQUMvRyxJQUFLTSxhQUFhLEVBQUc7RUFDbkJBLGFBQWEsQ0FDVkcsSUFBSSxDQUFFYixZQUFZLElBQUk7SUFDckIsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO01BQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO01BQzFERixVQUFVLENBQUMsQ0FBQztJQUNkO0VBQ0YsQ0FBRSxDQUFDLENBQ0ZnQixLQUFLLENBQUVDLENBQUMsSUFBSTtJQUNYVCxPQUFPLENBQUNDLElBQUksQ0FBRSxxREFBcUQsR0FBR1EsQ0FBRSxDQUFDO0lBQ3pFakIsVUFBVSxDQUFDLENBQUM7RUFDZCxDQUFFLENBQUM7QUFDUDtBQUNBLGVBQWVGLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==