// Copyright 2015-2023, University of Colorado Boulder

/**
 * Failure message displayed when a WebGL context loss is experienced and we can't recover. Offers a button to reload
 * the simulation.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import optionize from '../../phet-core/js/optionize.js';
import { HBox, Path, Text } from '../../scenery/js/imports.js';
import exclamationTriangleSolidShape from '../../sherpa/js/fontawesome-5/exclamationTriangleSolidShape.js';
import TextPushButton from '../../sun/js/buttons/TextPushButton.js';
import Dialog from '../../sun/js/Dialog.js';
import PhetFont from './PhetFont.js';
import sceneryPhet from './sceneryPhet.js';
import SceneryPhetStrings from './SceneryPhetStrings.js';
import Tandem from '../../tandem/js/Tandem.js';
export default class ContextLossFailureDialog extends Dialog {
  // see SelfOptions.reload

  constructor(providedOptions) {
    const options = optionize()({
      // ContextLossFailureDialogOptions
      reload: () => window.location.reload(),
      // Dialog options
      xSpacing: 30,
      topMargin: 30,
      bottomMargin: 30,
      leftMargin: 30
    }, providedOptions);
    const warningSign = new Path(exclamationTriangleSolidShape, {
      fill: '#E87600',
      // "safety orange", according to Wikipedia
      scale: 0.048
    });
    const text = new Text(SceneryPhetStrings.webglWarning.contextLossFailureStringProperty, {
      font: new PhetFont(12)
    });
    const button = new TextPushButton(SceneryPhetStrings.webglWarning.contextLossReloadStringProperty, {
      font: new PhetFont(12),
      baseColor: '#E87600',
      listener: () => this.hide(),
      tandem: Tandem.OPT_OUT
    });
    const content = new HBox({
      children: [warningSign, text, button],
      spacing: 10
    });
    super(content, options);
    this.reload = options.reload;
    this.disposeContextLossFailureDialog = () => {
      text.dispose();
      button.dispose();
    };
  }
  dispose() {
    this.disposeContextLossFailureDialog();
    super.dispose();
  }

  /**
   * Invokes the reload callback when the dialog is hidden.
   * See https://github.com/phetsims/scenery-phet/issues/373.
   */
  hide() {
    this.reload();
    super.hide();
  }

  /**
   * Hides the dialog without invoking the reload callback.
   */
  hideWithoutReload() {
    super.hide();
  }
}
sceneryPhet.register('ContextLossFailureDialog', ContextLossFailureDialog);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJIQm94IiwiUGF0aCIsIlRleHQiLCJleGNsYW1hdGlvblRyaWFuZ2xlU29saWRTaGFwZSIsIlRleHRQdXNoQnV0dG9uIiwiRGlhbG9nIiwiUGhldEZvbnQiLCJzY2VuZXJ5UGhldCIsIlNjZW5lcnlQaGV0U3RyaW5ncyIsIlRhbmRlbSIsIkNvbnRleHRMb3NzRmFpbHVyZURpYWxvZyIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInJlbG9hZCIsIndpbmRvdyIsImxvY2F0aW9uIiwieFNwYWNpbmciLCJ0b3BNYXJnaW4iLCJib3R0b21NYXJnaW4iLCJsZWZ0TWFyZ2luIiwid2FybmluZ1NpZ24iLCJmaWxsIiwic2NhbGUiLCJ0ZXh0Iiwid2ViZ2xXYXJuaW5nIiwiY29udGV4dExvc3NGYWlsdXJlU3RyaW5nUHJvcGVydHkiLCJmb250IiwiYnV0dG9uIiwiY29udGV4dExvc3NSZWxvYWRTdHJpbmdQcm9wZXJ0eSIsImJhc2VDb2xvciIsImxpc3RlbmVyIiwiaGlkZSIsInRhbmRlbSIsIk9QVF9PVVQiLCJjb250ZW50IiwiY2hpbGRyZW4iLCJzcGFjaW5nIiwiZGlzcG9zZUNvbnRleHRMb3NzRmFpbHVyZURpYWxvZyIsImRpc3Bvc2UiLCJoaWRlV2l0aG91dFJlbG9hZCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29udGV4dExvc3NGYWlsdXJlRGlhbG9nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEZhaWx1cmUgbWVzc2FnZSBkaXNwbGF5ZWQgd2hlbiBhIFdlYkdMIGNvbnRleHQgbG9zcyBpcyBleHBlcmllbmNlZCBhbmQgd2UgY2FuJ3QgcmVjb3Zlci4gT2ZmZXJzIGEgYnV0dG9uIHRvIHJlbG9hZFxyXG4gKiB0aGUgc2ltdWxhdGlvbi5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBvcHRpb25pemUgZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFBhdGgsIFRleHQgfSBmcm9tICcuLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUgZnJvbSAnLi4vLi4vc2hlcnBhL2pzL2ZvbnRhd2Vzb21lLTUvZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUuanMnO1xyXG5pbXBvcnQgVGV4dFB1c2hCdXR0b24gZnJvbSAnLi4vLi4vc3VuL2pzL2J1dHRvbnMvVGV4dFB1c2hCdXR0b24uanMnO1xyXG5pbXBvcnQgRGlhbG9nLCB7IERpYWxvZ09wdGlvbnMgfSBmcm9tICcuLi8uLi9zdW4vanMvRGlhbG9nLmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4vUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi9zY2VuZXJ5UGhldC5qcyc7XHJcbmltcG9ydCBTY2VuZXJ5UGhldFN0cmluZ3MgZnJvbSAnLi9TY2VuZXJ5UGhldFN0cmluZ3MuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IHtcclxuXHJcbiAgLy8gQnkgZGVmYXVsdCwgcHJlc3NpbmcgdGhlIFJlbG9hZCBidXR0b24gcmVsb2FkcyB0aGUgc2ltdWxhdGlvbiBpbiB0aGUgYnJvd3Nlci5cclxuICAvLyBQcm92aWRlZCBhcyBhbiBvcHRpb24gc28gdGhhdCBzY2VuZXJ5LXBoZXQgZGVtbyBhcHAgY2FuIHRlc3Qgd2l0aG91dCBjYXVzaW5nIGF1dG9tYXRlZC10ZXN0aW5nIGZhaWx1cmVzLlxyXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvc2NlbmVyeS1waGV0L2lzc3Vlcy8zNzVcclxuICByZWxvYWQ/OiAoKSA9PiB2b2lkO1xyXG59O1xyXG5cclxuZXhwb3J0IHR5cGUgQ29udGV4dExvc3NGYWlsdXJlRGlhbG9nT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgRGlhbG9nT3B0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRleHRMb3NzRmFpbHVyZURpYWxvZyBleHRlbmRzIERpYWxvZyB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgcmVsb2FkOiAoKSA9PiB2b2lkOyAvLyBzZWUgU2VsZk9wdGlvbnMucmVsb2FkXHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZUNvbnRleHRMb3NzRmFpbHVyZURpYWxvZzogKCkgPT4gdm9pZDtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM/OiBDb250ZXh0TG9zc0ZhaWx1cmVEaWFsb2dPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8Q29udGV4dExvc3NGYWlsdXJlRGlhbG9nT3B0aW9ucywgU2VsZk9wdGlvbnMsIERpYWxvZ09wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIENvbnRleHRMb3NzRmFpbHVyZURpYWxvZ09wdGlvbnNcclxuICAgICAgcmVsb2FkOiAoKSA9PiB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCksXHJcblxyXG4gICAgICAvLyBEaWFsb2cgb3B0aW9uc1xyXG4gICAgICB4U3BhY2luZzogMzAsXHJcbiAgICAgIHRvcE1hcmdpbjogMzAsXHJcbiAgICAgIGJvdHRvbU1hcmdpbjogMzAsXHJcbiAgICAgIGxlZnRNYXJnaW46IDMwXHJcblxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3Qgd2FybmluZ1NpZ24gPSBuZXcgUGF0aCggZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUsIHtcclxuICAgICAgZmlsbDogJyNFODc2MDAnLCAvLyBcInNhZmV0eSBvcmFuZ2VcIiwgYWNjb3JkaW5nIHRvIFdpa2lwZWRpYVxyXG4gICAgICBzY2FsZTogMC4wNDhcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCB0ZXh0ID0gbmV3IFRleHQoIFNjZW5lcnlQaGV0U3RyaW5ncy53ZWJnbFdhcm5pbmcuY29udGV4dExvc3NGYWlsdXJlU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCAxMiApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgYnV0dG9uID0gbmV3IFRleHRQdXNoQnV0dG9uKCBTY2VuZXJ5UGhldFN0cmluZ3Mud2ViZ2xXYXJuaW5nLmNvbnRleHRMb3NzUmVsb2FkU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCAxMiApLFxyXG4gICAgICBiYXNlQ29sb3I6ICcjRTg3NjAwJyxcclxuICAgICAgbGlzdGVuZXI6ICgpID0+IHRoaXMuaGlkZSgpLFxyXG4gICAgICB0YW5kZW06IFRhbmRlbS5PUFRfT1VUXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgY29udGVudCA9IG5ldyBIQm94KCB7XHJcbiAgICAgIGNoaWxkcmVuOiBbIHdhcm5pbmdTaWduLCB0ZXh0LCBidXR0b24gXSxcclxuICAgICAgc3BhY2luZzogMTBcclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggY29udGVudCwgb3B0aW9ucyApO1xyXG5cclxuICAgIHRoaXMucmVsb2FkID0gb3B0aW9ucy5yZWxvYWQ7XHJcblxyXG4gICAgdGhpcy5kaXNwb3NlQ29udGV4dExvc3NGYWlsdXJlRGlhbG9nID0gKCkgPT4ge1xyXG4gICAgICB0ZXh0LmRpc3Bvc2UoKTtcclxuICAgICAgYnV0dG9uLmRpc3Bvc2UoKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZGlzcG9zZUNvbnRleHRMb3NzRmFpbHVyZURpYWxvZygpO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW52b2tlcyB0aGUgcmVsb2FkIGNhbGxiYWNrIHdoZW4gdGhlIGRpYWxvZyBpcyBoaWRkZW4uXHJcbiAgICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9zY2VuZXJ5LXBoZXQvaXNzdWVzLzM3My5cclxuICAgKi9cclxuICBwdWJsaWMgb3ZlcnJpZGUgaGlkZSgpOiB2b2lkIHtcclxuICAgIHRoaXMucmVsb2FkKCk7XHJcbiAgICBzdXBlci5oaWRlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBIaWRlcyB0aGUgZGlhbG9nIHdpdGhvdXQgaW52b2tpbmcgdGhlIHJlbG9hZCBjYWxsYmFjay5cclxuICAgKi9cclxuICBwdWJsaWMgaGlkZVdpdGhvdXRSZWxvYWQoKTogdm9pZCB7XHJcbiAgICBzdXBlci5oaWRlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5zY2VuZXJ5UGhldC5yZWdpc3RlciggJ0NvbnRleHRMb3NzRmFpbHVyZURpYWxvZycsIENvbnRleHRMb3NzRmFpbHVyZURpYWxvZyApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBTSxpQ0FBaUM7QUFDdkQsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBUSw2QkFBNkI7QUFDOUQsT0FBT0MsNkJBQTZCLE1BQU0sZ0VBQWdFO0FBQzFHLE9BQU9DLGNBQWMsTUFBTSx3Q0FBd0M7QUFDbkUsT0FBT0MsTUFBTSxNQUF5Qix3QkFBd0I7QUFDOUQsT0FBT0MsUUFBUSxNQUFNLGVBQWU7QUFDcEMsT0FBT0MsV0FBVyxNQUFNLGtCQUFrQjtBQUMxQyxPQUFPQyxrQkFBa0IsTUFBTSx5QkFBeUI7QUFDeEQsT0FBT0MsTUFBTSxNQUFNLDJCQUEyQjtBQVk5QyxlQUFlLE1BQU1DLHdCQUF3QixTQUFTTCxNQUFNLENBQUM7RUFFdEI7O0VBSTlCTSxXQUFXQSxDQUFFQyxlQUFpRCxFQUFHO0lBRXRFLE1BQU1DLE9BQU8sR0FBR2QsU0FBUyxDQUE4RCxDQUFDLENBQUU7TUFFeEY7TUFDQWUsTUFBTSxFQUFFQSxDQUFBLEtBQU1DLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDRixNQUFNLENBQUMsQ0FBQztNQUV0QztNQUNBRyxRQUFRLEVBQUUsRUFBRTtNQUNaQyxTQUFTLEVBQUUsRUFBRTtNQUNiQyxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsVUFBVSxFQUFFO0lBRWQsQ0FBQyxFQUFFUixlQUFnQixDQUFDO0lBRXBCLE1BQU1TLFdBQVcsR0FBRyxJQUFJcEIsSUFBSSxDQUFFRSw2QkFBNkIsRUFBRTtNQUMzRG1CLElBQUksRUFBRSxTQUFTO01BQUU7TUFDakJDLEtBQUssRUFBRTtJQUNULENBQUUsQ0FBQztJQUVILE1BQU1DLElBQUksR0FBRyxJQUFJdEIsSUFBSSxDQUFFTSxrQkFBa0IsQ0FBQ2lCLFlBQVksQ0FBQ0MsZ0NBQWdDLEVBQUU7TUFDdkZDLElBQUksRUFBRSxJQUFJckIsUUFBUSxDQUFFLEVBQUc7SUFDekIsQ0FBRSxDQUFDO0lBRUgsTUFBTXNCLE1BQU0sR0FBRyxJQUFJeEIsY0FBYyxDQUFFSSxrQkFBa0IsQ0FBQ2lCLFlBQVksQ0FBQ0ksK0JBQStCLEVBQUU7TUFDbEdGLElBQUksRUFBRSxJQUFJckIsUUFBUSxDQUFFLEVBQUcsQ0FBQztNQUN4QndCLFNBQVMsRUFBRSxTQUFTO01BQ3BCQyxRQUFRLEVBQUVBLENBQUEsS0FBTSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDO01BQzNCQyxNQUFNLEVBQUV4QixNQUFNLENBQUN5QjtJQUNqQixDQUFFLENBQUM7SUFFSCxNQUFNQyxPQUFPLEdBQUcsSUFBSW5DLElBQUksQ0FBRTtNQUN4Qm9DLFFBQVEsRUFBRSxDQUFFZixXQUFXLEVBQUVHLElBQUksRUFBRUksTUFBTSxDQUFFO01BQ3ZDUyxPQUFPLEVBQUU7SUFDWCxDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVGLE9BQU8sRUFBRXRCLE9BQVEsQ0FBQztJQUV6QixJQUFJLENBQUNDLE1BQU0sR0FBR0QsT0FBTyxDQUFDQyxNQUFNO0lBRTVCLElBQUksQ0FBQ3dCLCtCQUErQixHQUFHLE1BQU07TUFDM0NkLElBQUksQ0FBQ2UsT0FBTyxDQUFDLENBQUM7TUFDZFgsTUFBTSxDQUFDVyxPQUFPLENBQUMsQ0FBQztJQUNsQixDQUFDO0VBQ0g7RUFFZ0JBLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELCtCQUErQixDQUFDLENBQUM7SUFDdEMsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNqQjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNrQlAsSUFBSUEsQ0FBQSxFQUFTO0lBQzNCLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQyxDQUFDO0lBQ2IsS0FBSyxDQUFDa0IsSUFBSSxDQUFDLENBQUM7RUFDZDs7RUFFQTtBQUNGO0FBQ0E7RUFDU1EsaUJBQWlCQSxDQUFBLEVBQVM7SUFDL0IsS0FBSyxDQUFDUixJQUFJLENBQUMsQ0FBQztFQUNkO0FBQ0Y7QUFFQXpCLFdBQVcsQ0FBQ2tDLFFBQVEsQ0FBRSwwQkFBMEIsRUFBRS9CLHdCQUF5QixDQUFDIiwiaWdub3JlTGlzdCI6W119