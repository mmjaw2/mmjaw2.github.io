// Copyright 2024, University of Colorado Boulder

/**
 * Node that represents a support column with a flat top. An example use case can be seen in Balancing Act,
 * and the default values represent the design decisions made for that sim.
 *
 * @author John Blanco (PhET Interactive Simulations)
 * @author Marla Schulz (PhET Interactive Simulations)
 */

import { LinearGradient, Node, Path, Rectangle } from '../../scenery/js/imports.js';
import sceneryPhet from './sceneryPhet.js';
import { Shape } from '../../kite/js/imports.js';
import optionize, { combineOptions } from '../../phet-core/js/optionize.js';
const COLUMN_SUPPORT_CORNER_RADIUS = 3;
class LevelSupportColumnNode extends Node {
  constructor(providedOptions) {
    const defaultSupportWidth = providedOptions.columnWidth * 1.3; // Empirically determined.
    const defaultSupportHeight = providedOptions.columnHeight * 0.15; // Empirically determined.

    const options = optionize()({
      columnFill: null,
      columnSupportFill: null,
      stroke: 'black',
      supportWidth: defaultSupportWidth,
      supportHeight: defaultSupportHeight
    }, providedOptions);
    const columnShape = Shape.rect(0, 0, options.columnWidth, options.columnHeight);
    const columnFill = options.columnFill || GET_COLUMN_BODY_GRADIENT(columnShape);
    const columnSupportFill = options.columnFill || GET_COLUMN_SUPPORT_GRADIENT(columnShape, options.supportWidth);
    const columnNode = new Path(columnShape, {
      fill: columnFill,
      stroke: options.stroke,
      lineWidth: 1
    });

    // Create and add the column support.
    const columnSupportNode = new Rectangle(columnShape.bounds.centerX - options.supportWidth / 2, columnShape.bounds.maxY - options.supportHeight, options.supportWidth, options.supportHeight, COLUMN_SUPPORT_CORNER_RADIUS, COLUMN_SUPPORT_CORNER_RADIUS, {
      fill: columnSupportFill,
      stroke: options.stroke,
      lineWidth: 1
    });
    const superOptions = combineOptions({
      children: [columnNode, columnSupportNode]
    }, options);
    super(superOptions);
  }
}

// Helper functions to create the Linear Gradient for the support columns.
export const GET_COLUMN_BODY_GRADIENT = columnNode => new LinearGradient(columnNode.bounds.minX, 0, columnNode.bounds.maxX, 0).addColorStop(0, '#BFBEBF').addColorStop(0.15, '#BFBEBF').addColorStop(0.16, '#CECECE').addColorStop(0.3, '#CECECE').addColorStop(0.31, '#ADAFAD').addColorStop(0.8, '#ADAFAD').addColorStop(0.81, '#979696').addColorStop(1, '#979696');
export const GET_COLUMN_SUPPORT_GRADIENT = (columnNode, supportWidth) => new LinearGradient(columnNode.bounds.centerX - supportWidth / 2, 0, columnNode.bounds.centerX + supportWidth / 2, 0).addColorStop(0, '#BFBEBF').addColorStop(0.15, '#BFBEBF').addColorStop(0.16, '#CECECE').addColorStop(0.22, '#CECECE').addColorStop(0.23, '#ADAFAD').addColorStop(0.84, '#ADAFAD').addColorStop(0.85, '#979696').addColorStop(1, '#979696');
sceneryPhet.register('LevelSupportColumnNode', LevelSupportColumnNode);
export default LevelSupportColumnNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMaW5lYXJHcmFkaWVudCIsIk5vZGUiLCJQYXRoIiwiUmVjdGFuZ2xlIiwic2NlbmVyeVBoZXQiLCJTaGFwZSIsIm9wdGlvbml6ZSIsImNvbWJpbmVPcHRpb25zIiwiQ09MVU1OX1NVUFBPUlRfQ09STkVSX1JBRElVUyIsIkxldmVsU3VwcG9ydENvbHVtbk5vZGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsImRlZmF1bHRTdXBwb3J0V2lkdGgiLCJjb2x1bW5XaWR0aCIsImRlZmF1bHRTdXBwb3J0SGVpZ2h0IiwiY29sdW1uSGVpZ2h0Iiwib3B0aW9ucyIsImNvbHVtbkZpbGwiLCJjb2x1bW5TdXBwb3J0RmlsbCIsInN0cm9rZSIsInN1cHBvcnRXaWR0aCIsInN1cHBvcnRIZWlnaHQiLCJjb2x1bW5TaGFwZSIsInJlY3QiLCJHRVRfQ09MVU1OX0JPRFlfR1JBRElFTlQiLCJHRVRfQ09MVU1OX1NVUFBPUlRfR1JBRElFTlQiLCJjb2x1bW5Ob2RlIiwiZmlsbCIsImxpbmVXaWR0aCIsImNvbHVtblN1cHBvcnROb2RlIiwiYm91bmRzIiwiY2VudGVyWCIsIm1heFkiLCJzdXBlck9wdGlvbnMiLCJjaGlsZHJlbiIsIm1pblgiLCJtYXhYIiwiYWRkQ29sb3JTdG9wIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJMZXZlbFN1cHBvcnRDb2x1bW5Ob2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBOb2RlIHRoYXQgcmVwcmVzZW50cyBhIHN1cHBvcnQgY29sdW1uIHdpdGggYSBmbGF0IHRvcC4gQW4gZXhhbXBsZSB1c2UgY2FzZSBjYW4gYmUgc2VlbiBpbiBCYWxhbmNpbmcgQWN0LFxyXG4gKiBhbmQgdGhlIGRlZmF1bHQgdmFsdWVzIHJlcHJlc2VudCB0aGUgZGVzaWduIGRlY2lzaW9ucyBtYWRlIGZvciB0aGF0IHNpbS5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jbyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBNYXJsYSBTY2h1bHogKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgTGluZWFyR3JhZGllbnQsIE5vZGUsIE5vZGVPcHRpb25zLCBQYXRoLCBSZWN0YW5nbGUsIFRQYWludCB9IGZyb20gJy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuL3NjZW5lcnlQaGV0LmpzJztcclxuaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IGNvbWJpbmVPcHRpb25zIH0gZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBTdHJpY3RPbWl0IGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9TdHJpY3RPbWl0LmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcbiAgY29sdW1uRmlsbD86IFRQYWludCB8IG51bGw7XHJcbiAgY29sdW1uU3VwcG9ydEZpbGw/OiBUUGFpbnQgfCBudWxsO1xyXG4gIHN0cm9rZT86IFRQYWludDtcclxuICBjb2x1bW5XaWR0aDogbnVtYmVyO1xyXG4gIGNvbHVtbkhlaWdodDogbnVtYmVyO1xyXG4gIHN1cHBvcnRXaWR0aD86IG51bWJlcjtcclxuICBzdXBwb3J0SGVpZ2h0PzogbnVtYmVyO1xyXG59O1xyXG50eXBlIExldmVsU3VwcG9ydENvbHVtbk5vZGVPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBTdHJpY3RPbWl0PE5vZGVPcHRpb25zLCAnY2hpbGRyZW4nPjtcclxuXHJcbmNvbnN0IENPTFVNTl9TVVBQT1JUX0NPUk5FUl9SQURJVVMgPSAzO1xyXG5cclxuY2xhc3MgTGV2ZWxTdXBwb3J0Q29sdW1uTm9kZSBleHRlbmRzIE5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogTGV2ZWxTdXBwb3J0Q29sdW1uTm9kZU9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3QgZGVmYXVsdFN1cHBvcnRXaWR0aCA9IHByb3ZpZGVkT3B0aW9ucy5jb2x1bW5XaWR0aCAqIDEuMzsgLy8gRW1waXJpY2FsbHkgZGV0ZXJtaW5lZC5cclxuICAgIGNvbnN0IGRlZmF1bHRTdXBwb3J0SGVpZ2h0ID0gcHJvdmlkZWRPcHRpb25zLmNvbHVtbkhlaWdodCAqIDAuMTU7IC8vIEVtcGlyaWNhbGx5IGRldGVybWluZWQuXHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxMZXZlbFN1cHBvcnRDb2x1bW5Ob2RlT3B0aW9ucywgU2VsZk9wdGlvbnMsIE5vZGVPcHRpb25zPigpKCB7XHJcbiAgICAgIGNvbHVtbkZpbGw6IG51bGwsXHJcbiAgICAgIGNvbHVtblN1cHBvcnRGaWxsOiBudWxsLFxyXG4gICAgICBzdHJva2U6ICdibGFjaycsXHJcbiAgICAgIHN1cHBvcnRXaWR0aDogZGVmYXVsdFN1cHBvcnRXaWR0aCxcclxuICAgICAgc3VwcG9ydEhlaWdodDogZGVmYXVsdFN1cHBvcnRIZWlnaHRcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGNvbHVtblNoYXBlID0gU2hhcGUucmVjdCggMCwgMCwgb3B0aW9ucy5jb2x1bW5XaWR0aCwgb3B0aW9ucy5jb2x1bW5IZWlnaHQgKTtcclxuXHJcbiAgICBjb25zdCBjb2x1bW5GaWxsID0gb3B0aW9ucy5jb2x1bW5GaWxsIHx8IEdFVF9DT0xVTU5fQk9EWV9HUkFESUVOVCggY29sdW1uU2hhcGUgKTtcclxuICAgIGNvbnN0IGNvbHVtblN1cHBvcnRGaWxsID0gb3B0aW9ucy5jb2x1bW5GaWxsIHx8IEdFVF9DT0xVTU5fU1VQUE9SVF9HUkFESUVOVCggY29sdW1uU2hhcGUsIG9wdGlvbnMuc3VwcG9ydFdpZHRoICk7XHJcblxyXG4gICAgY29uc3QgY29sdW1uTm9kZSA9IG5ldyBQYXRoKCBjb2x1bW5TaGFwZSxcclxuICAgICAge1xyXG4gICAgICAgIGZpbGw6IGNvbHVtbkZpbGwsXHJcbiAgICAgICAgc3Ryb2tlOiBvcHRpb25zLnN0cm9rZSxcclxuICAgICAgICBsaW5lV2lkdGg6IDFcclxuICAgICAgfSApO1xyXG5cclxuICAgIC8vIENyZWF0ZSBhbmQgYWRkIHRoZSBjb2x1bW4gc3VwcG9ydC5cclxuICAgIGNvbnN0IGNvbHVtblN1cHBvcnROb2RlID0gbmV3IFJlY3RhbmdsZShcclxuICAgICAgY29sdW1uU2hhcGUuYm91bmRzLmNlbnRlclggLSBvcHRpb25zLnN1cHBvcnRXaWR0aCAvIDIsXHJcbiAgICAgIGNvbHVtblNoYXBlLmJvdW5kcy5tYXhZIC0gb3B0aW9ucy5zdXBwb3J0SGVpZ2h0LFxyXG4gICAgICBvcHRpb25zLnN1cHBvcnRXaWR0aCxcclxuICAgICAgb3B0aW9ucy5zdXBwb3J0SGVpZ2h0LFxyXG4gICAgICBDT0xVTU5fU1VQUE9SVF9DT1JORVJfUkFESVVTLFxyXG4gICAgICBDT0xVTU5fU1VQUE9SVF9DT1JORVJfUkFESVVTLFxyXG4gICAgICB7XHJcbiAgICAgICAgZmlsbDogY29sdW1uU3VwcG9ydEZpbGwsXHJcbiAgICAgICAgc3Ryb2tlOiBvcHRpb25zLnN0cm9rZSxcclxuICAgICAgICBsaW5lV2lkdGg6IDFcclxuICAgICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHN1cGVyT3B0aW9ucyA9IGNvbWJpbmVPcHRpb25zPE5vZGVPcHRpb25zPigge1xyXG4gICAgICBjaGlsZHJlbjogWyBjb2x1bW5Ob2RlLCBjb2x1bW5TdXBwb3J0Tm9kZSBdXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIHN1cGVyT3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuLy8gSGVscGVyIGZ1bmN0aW9ucyB0byBjcmVhdGUgdGhlIExpbmVhciBHcmFkaWVudCBmb3IgdGhlIHN1cHBvcnQgY29sdW1ucy5cclxuZXhwb3J0IGNvbnN0IEdFVF9DT0xVTU5fQk9EWV9HUkFESUVOVCA9ICggY29sdW1uTm9kZTogU2hhcGUgKTogTGluZWFyR3JhZGllbnQgPT5cclxuICBuZXcgTGluZWFyR3JhZGllbnQoXHJcbiAgICBjb2x1bW5Ob2RlLmJvdW5kcy5taW5YLCAwLFxyXG4gICAgY29sdW1uTm9kZS5ib3VuZHMubWF4WCwgMFxyXG4gIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDAsICcjQkZCRUJGJyApXHJcbiAgICAuYWRkQ29sb3JTdG9wKCAwLjE1LCAnI0JGQkVCRicgKVxyXG4gICAgLmFkZENvbG9yU3RvcCggMC4xNiwgJyNDRUNFQ0UnIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDAuMywgJyNDRUNFQ0UnIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDAuMzEsICcjQURBRkFEJyApXHJcbiAgICAuYWRkQ29sb3JTdG9wKCAwLjgsICcjQURBRkFEJyApXHJcbiAgICAuYWRkQ29sb3JTdG9wKCAwLjgxLCAnIzk3OTY5NicgKVxyXG4gICAgLmFkZENvbG9yU3RvcCggMSwgJyM5Nzk2OTYnICk7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX0NPTFVNTl9TVVBQT1JUX0dSQURJRU5UID0gKCBjb2x1bW5Ob2RlOiBTaGFwZSwgc3VwcG9ydFdpZHRoOiBudW1iZXIgKTogTGluZWFyR3JhZGllbnQgPT5cclxuICBuZXcgTGluZWFyR3JhZGllbnQoXHJcbiAgICBjb2x1bW5Ob2RlLmJvdW5kcy5jZW50ZXJYIC0gc3VwcG9ydFdpZHRoIC8gMiwgMCxcclxuICAgIGNvbHVtbk5vZGUuYm91bmRzLmNlbnRlclggKyBzdXBwb3J0V2lkdGggLyAyLCAwXHJcbiAgKVxyXG4gICAgLmFkZENvbG9yU3RvcCggMCwgJyNCRkJFQkYnIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDAuMTUsICcjQkZCRUJGJyApXHJcbiAgICAuYWRkQ29sb3JTdG9wKCAwLjE2LCAnI0NFQ0VDRScgKVxyXG4gICAgLmFkZENvbG9yU3RvcCggMC4yMiwgJyNDRUNFQ0UnIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDAuMjMsICcjQURBRkFEJyApXHJcbiAgICAuYWRkQ29sb3JTdG9wKCAwLjg0LCAnI0FEQUZBRCcgKVxyXG4gICAgLmFkZENvbG9yU3RvcCggMC44NSwgJyM5Nzk2OTYnIClcclxuICAgIC5hZGRDb2xvclN0b3AoIDEsICcjOTc5Njk2JyApO1xyXG5cclxuXHJcbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnTGV2ZWxTdXBwb3J0Q29sdW1uTm9kZScsIExldmVsU3VwcG9ydENvbHVtbk5vZGUgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExldmVsU3VwcG9ydENvbHVtbk5vZGU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxjQUFjLEVBQUVDLElBQUksRUFBZUMsSUFBSSxFQUFFQyxTQUFTLFFBQWdCLDZCQUE2QjtBQUN4RyxPQUFPQyxXQUFXLE1BQU0sa0JBQWtCO0FBQzFDLFNBQVNDLEtBQUssUUFBUSwwQkFBMEI7QUFDaEQsT0FBT0MsU0FBUyxJQUFJQyxjQUFjLFFBQVEsaUNBQWlDO0FBYzNFLE1BQU1DLDRCQUE0QixHQUFHLENBQUM7QUFFdEMsTUFBTUMsc0JBQXNCLFNBQVNSLElBQUksQ0FBQztFQUVqQ1MsV0FBV0EsQ0FBRUMsZUFBOEMsRUFBRztJQUVuRSxNQUFNQyxtQkFBbUIsR0FBR0QsZUFBZSxDQUFDRSxXQUFXLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDL0QsTUFBTUMsb0JBQW9CLEdBQUdILGVBQWUsQ0FBQ0ksWUFBWSxHQUFHLElBQUksQ0FBQyxDQUFDOztJQUVsRSxNQUFNQyxPQUFPLEdBQUdWLFNBQVMsQ0FBMEQsQ0FBQyxDQUFFO01BQ3BGVyxVQUFVLEVBQUUsSUFBSTtNQUNoQkMsaUJBQWlCLEVBQUUsSUFBSTtNQUN2QkMsTUFBTSxFQUFFLE9BQU87TUFDZkMsWUFBWSxFQUFFUixtQkFBbUI7TUFDakNTLGFBQWEsRUFBRVA7SUFDakIsQ0FBQyxFQUFFSCxlQUFnQixDQUFDO0lBRXBCLE1BQU1XLFdBQVcsR0FBR2pCLEtBQUssQ0FBQ2tCLElBQUksQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFUCxPQUFPLENBQUNILFdBQVcsRUFBRUcsT0FBTyxDQUFDRCxZQUFhLENBQUM7SUFFakYsTUFBTUUsVUFBVSxHQUFHRCxPQUFPLENBQUNDLFVBQVUsSUFBSU8sd0JBQXdCLENBQUVGLFdBQVksQ0FBQztJQUNoRixNQUFNSixpQkFBaUIsR0FBR0YsT0FBTyxDQUFDQyxVQUFVLElBQUlRLDJCQUEyQixDQUFFSCxXQUFXLEVBQUVOLE9BQU8sQ0FBQ0ksWUFBYSxDQUFDO0lBRWhILE1BQU1NLFVBQVUsR0FBRyxJQUFJeEIsSUFBSSxDQUFFb0IsV0FBVyxFQUN0QztNQUNFSyxJQUFJLEVBQUVWLFVBQVU7TUFDaEJFLE1BQU0sRUFBRUgsT0FBTyxDQUFDRyxNQUFNO01BQ3RCUyxTQUFTLEVBQUU7SUFDYixDQUFFLENBQUM7O0lBRUw7SUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJMUIsU0FBUyxDQUNyQ21CLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDQyxPQUFPLEdBQUdmLE9BQU8sQ0FBQ0ksWUFBWSxHQUFHLENBQUMsRUFDckRFLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDRSxJQUFJLEdBQUdoQixPQUFPLENBQUNLLGFBQWEsRUFDL0NMLE9BQU8sQ0FBQ0ksWUFBWSxFQUNwQkosT0FBTyxDQUFDSyxhQUFhLEVBQ3JCYiw0QkFBNEIsRUFDNUJBLDRCQUE0QixFQUM1QjtNQUNFbUIsSUFBSSxFQUFFVCxpQkFBaUI7TUFDdkJDLE1BQU0sRUFBRUgsT0FBTyxDQUFDRyxNQUFNO01BQ3RCUyxTQUFTLEVBQUU7SUFDYixDQUFFLENBQUM7SUFFTCxNQUFNSyxZQUFZLEdBQUcxQixjQUFjLENBQWU7TUFDaEQyQixRQUFRLEVBQUUsQ0FBRVIsVUFBVSxFQUFFRyxpQkFBaUI7SUFDM0MsQ0FBQyxFQUFFYixPQUFRLENBQUM7SUFFWixLQUFLLENBQUVpQixZQUFhLENBQUM7RUFDdkI7QUFDRjs7QUFFQTtBQUNBLE9BQU8sTUFBTVQsd0JBQXdCLEdBQUtFLFVBQWlCLElBQ3pELElBQUkxQixjQUFjLENBQ2hCMEIsVUFBVSxDQUFDSSxNQUFNLENBQUNLLElBQUksRUFBRSxDQUFDLEVBQ3pCVCxVQUFVLENBQUNJLE1BQU0sQ0FBQ00sSUFBSSxFQUFFLENBQzFCLENBQUMsQ0FDRUMsWUFBWSxDQUFFLENBQUMsRUFBRSxTQUFVLENBQUMsQ0FDNUJBLFlBQVksQ0FBRSxJQUFJLEVBQUUsU0FBVSxDQUFDLENBQy9CQSxZQUFZLENBQUUsSUFBSSxFQUFFLFNBQVUsQ0FBQyxDQUMvQkEsWUFBWSxDQUFFLEdBQUcsRUFBRSxTQUFVLENBQUMsQ0FDOUJBLFlBQVksQ0FBRSxJQUFJLEVBQUUsU0FBVSxDQUFDLENBQy9CQSxZQUFZLENBQUUsR0FBRyxFQUFFLFNBQVUsQ0FBQyxDQUM5QkEsWUFBWSxDQUFFLElBQUksRUFBRSxTQUFVLENBQUMsQ0FDL0JBLFlBQVksQ0FBRSxDQUFDLEVBQUUsU0FBVSxDQUFDO0FBRWpDLE9BQU8sTUFBTVosMkJBQTJCLEdBQUdBLENBQUVDLFVBQWlCLEVBQUVOLFlBQW9CLEtBQ2xGLElBQUlwQixjQUFjLENBQ2hCMEIsVUFBVSxDQUFDSSxNQUFNLENBQUNDLE9BQU8sR0FBR1gsWUFBWSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQy9DTSxVQUFVLENBQUNJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWCxZQUFZLEdBQUcsQ0FBQyxFQUFFLENBQ2hELENBQUMsQ0FDRWlCLFlBQVksQ0FBRSxDQUFDLEVBQUUsU0FBVSxDQUFDLENBQzVCQSxZQUFZLENBQUUsSUFBSSxFQUFFLFNBQVUsQ0FBQyxDQUMvQkEsWUFBWSxDQUFFLElBQUksRUFBRSxTQUFVLENBQUMsQ0FDL0JBLFlBQVksQ0FBRSxJQUFJLEVBQUUsU0FBVSxDQUFDLENBQy9CQSxZQUFZLENBQUUsSUFBSSxFQUFFLFNBQVUsQ0FBQyxDQUMvQkEsWUFBWSxDQUFFLElBQUksRUFBRSxTQUFVLENBQUMsQ0FDL0JBLFlBQVksQ0FBRSxJQUFJLEVBQUUsU0FBVSxDQUFDLENBQy9CQSxZQUFZLENBQUUsQ0FBQyxFQUFFLFNBQVUsQ0FBQztBQUdqQ2pDLFdBQVcsQ0FBQ2tDLFFBQVEsQ0FBRSx3QkFBd0IsRUFBRTdCLHNCQUF1QixDQUFDO0FBRXhFLGVBQWVBLHNCQUFzQiIsImlnbm9yZUxpc3QiOltdfQ==