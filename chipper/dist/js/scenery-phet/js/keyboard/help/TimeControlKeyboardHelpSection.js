// Copyright 2022-2024, University of Colorado Boulder

/**
 * Help section that explains how to use a keyboard to toggle play/pause and timing controls.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import sceneryPhet from '../../sceneryPhet.js';
import KeyboardHelpSection from './KeyboardHelpSection.js';
import KeyboardHelpSectionRow from './KeyboardHelpSectionRow.js';
import SceneryPhetStrings from '../../SceneryPhetStrings.js';

// constants
const timingControlsStringProperty = SceneryPhetStrings.keyboardHelpDialog.timingControls.timingControlsStringProperty;
const pauseOrPlayActionStringProperty = SceneryPhetStrings.keyboardHelpDialog.timingControls.pauseOrPlayActionStringProperty;
const pauseOrPlayActionDescriptionStringProperty = SceneryPhetStrings.a11y.keyboardHelpDialog.timingControls.pauseOrPlayActionDescriptionStringProperty;
class TimeControlKeyboardHelpSection extends KeyboardHelpSection {
  constructor(providedOptions) {
    const options = optionize()({
      headingString: timingControlsStringProperty,
      pauseOrPlayActionString: pauseOrPlayActionStringProperty,
      pauseOrPlayActionDescriptionString: pauseOrPlayActionDescriptionStringProperty
    }, providedOptions);
    const playPauseRow = KeyboardHelpSectionRow.createPlayPauseKeyRow(options.pauseOrPlayActionString, {
      labelInnerContent: options.pauseOrPlayActionDescriptionString
    });
    super(options.headingString, [playPauseRow], options);
  }
}
sceneryPhet.register('TimeControlKeyboardHelpSection', TimeControlKeyboardHelpSection);
export default TimeControlKeyboardHelpSection;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJzY2VuZXJ5UGhldCIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJLZXlib2FyZEhlbHBTZWN0aW9uUm93IiwiU2NlbmVyeVBoZXRTdHJpbmdzIiwidGltaW5nQ29udHJvbHNTdHJpbmdQcm9wZXJ0eSIsImtleWJvYXJkSGVscERpYWxvZyIsInRpbWluZ0NvbnRyb2xzIiwicGF1c2VPclBsYXlBY3Rpb25TdHJpbmdQcm9wZXJ0eSIsInBhdXNlT3JQbGF5QWN0aW9uRGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSIsImExMXkiLCJUaW1lQ29udHJvbEtleWJvYXJkSGVscFNlY3Rpb24iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJoZWFkaW5nU3RyaW5nIiwicGF1c2VPclBsYXlBY3Rpb25TdHJpbmciLCJwYXVzZU9yUGxheUFjdGlvbkRlc2NyaXB0aW9uU3RyaW5nIiwicGxheVBhdXNlUm93IiwiY3JlYXRlUGxheVBhdXNlS2V5Um93IiwibGFiZWxJbm5lckNvbnRlbnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlRpbWVDb250cm9sS2V5Ym9hcmRIZWxwU2VjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBIZWxwIHNlY3Rpb24gdGhhdCBleHBsYWlucyBob3cgdG8gdXNlIGEga2V5Ym9hcmQgdG8gdG9nZ2xlIHBsYXkvcGF1c2UgYW5kIHRpbWluZyBjb250cm9scy5cclxuICpcclxuICogQGF1dGhvciBKZXNzZSBHcmVlbmJlcmcgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFRSZWFkT25seVByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvVFJlYWRPbmx5UHJvcGVydHkuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi4vLi4vc2NlbmVyeVBoZXQuanMnO1xyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwU2VjdGlvbiwgeyBLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucyB9IGZyb20gJy4vS2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uUm93IGZyb20gJy4vS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5qcyc7XHJcbmltcG9ydCBTY2VuZXJ5UGhldFN0cmluZ3MgZnJvbSAnLi4vLi4vU2NlbmVyeVBoZXRTdHJpbmdzLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCB0aW1pbmdDb250cm9sc1N0cmluZ1Byb3BlcnR5ID0gU2NlbmVyeVBoZXRTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy50aW1pbmdDb250cm9scy50aW1pbmdDb250cm9sc1N0cmluZ1Byb3BlcnR5O1xyXG5jb25zdCBwYXVzZU9yUGxheUFjdGlvblN0cmluZ1Byb3BlcnR5ID0gU2NlbmVyeVBoZXRTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy50aW1pbmdDb250cm9scy5wYXVzZU9yUGxheUFjdGlvblN0cmluZ1Byb3BlcnR5O1xyXG5jb25zdCBwYXVzZU9yUGxheUFjdGlvbkRlc2NyaXB0aW9uU3RyaW5nUHJvcGVydHkgPSBTY2VuZXJ5UGhldFN0cmluZ3MuYTExeS5rZXlib2FyZEhlbHBEaWFsb2cudGltaW5nQ29udHJvbHMucGF1c2VPclBsYXlBY3Rpb25EZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5O1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IHtcclxuXHJcbiAgLy8gVGhlIGhlYWRpbmcgc3RyaW5nIGZvciB0aGlzIHNlY3Rpb24gb2Yga2V5Ym9hcmQgaGVscCBjb250ZW50XHJcbiAgaGVhZGluZ1N0cmluZz86IHN0cmluZyB8IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz47XHJcblxyXG4gIC8vIFZpc2libGUgc3RyaW5nIHRoYXQgZGVzY3JpYmVzIHRoZSBhY3Rpb24gb2YgcGF1c2UvcGxheSBmcm9tIGEga2V5IGNvbW1hbmQuIFlvdSBtYXkgd2FudCBzaW0tc3BlY2lmaWMgdGVybWlub2xvZ3lcclxuICAvLyBmb3IgdGhpcyBjb21tYW5kLlxyXG4gIHBhdXNlT3JQbGF5QWN0aW9uU3RyaW5nPzogc3RyaW5nIHwgVFJlYWRPbmx5UHJvcGVydHk8c3RyaW5nPjtcclxuXHJcbiAgLy8gU3RyaW5nIGZvciB0aGUgUERPTSAoc2NyZWVuIHJlYWRlcnMpIHRoYXQgZGVzY3JpYmVzIHRoZSBob3RrZXlzIGZvciBwbGF5L3BhdXNlLlxyXG4gIHBhdXNlT3JQbGF5QWN0aW9uRGVzY3JpcHRpb25TdHJpbmc/OiBzdHJpbmcgfCBUUmVhZE9ubHlQcm9wZXJ0eTxzdHJpbmc+O1xyXG59O1xyXG50eXBlIFBhcmVudE9wdGlvbnMgPSBLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucztcclxuZXhwb3J0IHR5cGUgVGltZUNvbnRyb2xLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGFyZW50T3B0aW9ucztcclxuXHJcbmNsYXNzIFRpbWVDb250cm9sS2V5Ym9hcmRIZWxwU2VjdGlvbiBleHRlbmRzIEtleWJvYXJkSGVscFNlY3Rpb24ge1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zPzogVGltZUNvbnRyb2xLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucyApIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8VGltZUNvbnRyb2xLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucywgU2VsZk9wdGlvbnMsIFBhcmVudE9wdGlvbnM+KCkoIHtcclxuICAgICAgaGVhZGluZ1N0cmluZzogdGltaW5nQ29udHJvbHNTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgcGF1c2VPclBsYXlBY3Rpb25TdHJpbmc6IHBhdXNlT3JQbGF5QWN0aW9uU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIHBhdXNlT3JQbGF5QWN0aW9uRGVzY3JpcHRpb25TdHJpbmc6IHBhdXNlT3JQbGF5QWN0aW9uRGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3QgcGxheVBhdXNlUm93ID0gS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5jcmVhdGVQbGF5UGF1c2VLZXlSb3coIG9wdGlvbnMucGF1c2VPclBsYXlBY3Rpb25TdHJpbmcsIHtcclxuICAgICAgbGFiZWxJbm5lckNvbnRlbnQ6IG9wdGlvbnMucGF1c2VPclBsYXlBY3Rpb25EZXNjcmlwdGlvblN0cmluZ1xyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zLmhlYWRpbmdTdHJpbmcsIFsgcGxheVBhdXNlUm93IF0sIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnVGltZUNvbnRyb2xLZXlib2FyZEhlbHBTZWN0aW9uJywgVGltZUNvbnRyb2xLZXlib2FyZEhlbHBTZWN0aW9uICk7XHJcbmV4cG9ydCBkZWZhdWx0IFRpbWVDb250cm9sS2V5Ym9hcmRIZWxwU2VjdGlvbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsT0FBT0EsU0FBUyxNQUFNLHVDQUF1QztBQUM3RCxPQUFPQyxXQUFXLE1BQU0sc0JBQXNCO0FBQzlDLE9BQU9DLG1CQUFtQixNQUFzQywwQkFBMEI7QUFDMUYsT0FBT0Msc0JBQXNCLE1BQU0sNkJBQTZCO0FBQ2hFLE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2Qjs7QUFFNUQ7QUFDQSxNQUFNQyw0QkFBNEIsR0FBR0Qsa0JBQWtCLENBQUNFLGtCQUFrQixDQUFDQyxjQUFjLENBQUNGLDRCQUE0QjtBQUN0SCxNQUFNRywrQkFBK0IsR0FBR0osa0JBQWtCLENBQUNFLGtCQUFrQixDQUFDQyxjQUFjLENBQUNDLCtCQUErQjtBQUM1SCxNQUFNQywwQ0FBMEMsR0FBR0wsa0JBQWtCLENBQUNNLElBQUksQ0FBQ0osa0JBQWtCLENBQUNDLGNBQWMsQ0FBQ0UsMENBQTBDO0FBaUJ2SixNQUFNRSw4QkFBOEIsU0FBU1QsbUJBQW1CLENBQUM7RUFDeERVLFdBQVdBLENBQUVDLGVBQXVELEVBQUc7SUFDNUUsTUFBTUMsT0FBTyxHQUFHZCxTQUFTLENBQW9FLENBQUMsQ0FBRTtNQUM5RmUsYUFBYSxFQUFFViw0QkFBNEI7TUFDM0NXLHVCQUF1QixFQUFFUiwrQkFBK0I7TUFDeERTLGtDQUFrQyxFQUFFUjtJQUN0QyxDQUFDLEVBQUVJLGVBQWdCLENBQUM7SUFFcEIsTUFBTUssWUFBWSxHQUFHZixzQkFBc0IsQ0FBQ2dCLHFCQUFxQixDQUFFTCxPQUFPLENBQUNFLHVCQUF1QixFQUFFO01BQ2xHSSxpQkFBaUIsRUFBRU4sT0FBTyxDQUFDRztJQUM3QixDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVILE9BQU8sQ0FBQ0MsYUFBYSxFQUFFLENBQUVHLFlBQVksQ0FBRSxFQUFFSixPQUFRLENBQUM7RUFDM0Q7QUFDRjtBQUVBYixXQUFXLENBQUNvQixRQUFRLENBQUUsZ0NBQWdDLEVBQUVWLDhCQUErQixDQUFDO0FBQ3hGLGVBQWVBLDhCQUE4QiIsImlnbm9yZUxpc3QiOltdfQ==