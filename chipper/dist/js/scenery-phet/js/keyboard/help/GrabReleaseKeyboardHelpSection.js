// Copyright 2022-2024, University of Colorado Boulder

/**
 * Help section for explaining how to use a keyboard to interact with a ComboBox.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import PatternStringProperty from '../../../../axon/js/PatternStringProperty.js';
import { combineOptions } from '../../../../phet-core/js/optionize.js';
import sceneryPhet from '../../sceneryPhet.js';
import SceneryPhetStrings from '../../SceneryPhetStrings.js';
import TextKeyNode from '../TextKeyNode.js';
import KeyboardHelpIconFactory from './KeyboardHelpIconFactory.js';
import KeyboardHelpSection from './KeyboardHelpSection.js';
import KeyboardHelpSectionRow from './KeyboardHelpSectionRow.js';
import Tandem from '../../../../tandem/js/Tandem.js';
export default class GrabReleaseKeyboardHelpSection extends KeyboardHelpSection {
  /**
   * @param thingAsTitle - the item being grabbed, capitalized as a title
   * @param thingAsLowerCase - the item being grabbed, lower case as used in a sentence.
   * @param [providedOptions]
   */
  constructor(thingAsTitle, thingAsLowerCase, providedOptions) {
    const options = combineOptions({
      // There is only a single paragraph for this section, no list needed in the PDOM
      a11yContentTagName: null
    }, providedOptions);

    // the visible heading string
    const headingStringProperty = new PatternStringProperty(SceneryPhetStrings.keyboardHelpDialog.grabOrReleaseHeadingPatternStringProperty, {
      thing: thingAsTitle
    }, {
      tandem: Tandem.OPT_OUT
    });

    // the visible label string
    const labelStringProperty = new PatternStringProperty(SceneryPhetStrings.keyboardHelpDialog.grabOrReleaseLabelPatternStringProperty, {
      thing: thingAsLowerCase
    }, {
      tandem: Tandem.OPT_OUT
    });

    // the string for the PDOM
    const descriptionStringProperty = new PatternStringProperty(SceneryPhetStrings.a11y.keyboardHelpDialog.grabOrReleaseDescriptionPatternStringProperty, {
      thing: thingAsLowerCase
    }, {
      tandem: Tandem.OPT_OUT
    });
    const spaceKeyNode = TextKeyNode.space();
    const enterKeyNode = TextKeyNode.enter();
    const icons = KeyboardHelpIconFactory.iconOrIcon(spaceKeyNode, enterKeyNode);
    const labelWithContentRow = KeyboardHelpSectionRow.labelWithIcon(labelStringProperty, icons, {
      labelInnerContent: descriptionStringProperty,
      iconOptions: {
        tagName: 'p' // it is the only item, so it is 'p' rather than 'li'
      }
    });
    super(headingStringProperty, [labelWithContentRow], options);
  }
}
sceneryPhet.register('GrabReleaseKeyboardHelpSection', GrabReleaseKeyboardHelpSection);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYXR0ZXJuU3RyaW5nUHJvcGVydHkiLCJjb21iaW5lT3B0aW9ucyIsInNjZW5lcnlQaGV0IiwiU2NlbmVyeVBoZXRTdHJpbmdzIiwiVGV4dEtleU5vZGUiLCJLZXlib2FyZEhlbHBJY29uRmFjdG9yeSIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJLZXlib2FyZEhlbHBTZWN0aW9uUm93IiwiVGFuZGVtIiwiR3JhYlJlbGVhc2VLZXlib2FyZEhlbHBTZWN0aW9uIiwiY29uc3RydWN0b3IiLCJ0aGluZ0FzVGl0bGUiLCJ0aGluZ0FzTG93ZXJDYXNlIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImExMXlDb250ZW50VGFnTmFtZSIsImhlYWRpbmdTdHJpbmdQcm9wZXJ0eSIsImtleWJvYXJkSGVscERpYWxvZyIsImdyYWJPclJlbGVhc2VIZWFkaW5nUGF0dGVyblN0cmluZ1Byb3BlcnR5IiwidGhpbmciLCJ0YW5kZW0iLCJPUFRfT1VUIiwibGFiZWxTdHJpbmdQcm9wZXJ0eSIsImdyYWJPclJlbGVhc2VMYWJlbFBhdHRlcm5TdHJpbmdQcm9wZXJ0eSIsImRlc2NyaXB0aW9uU3RyaW5nUHJvcGVydHkiLCJhMTF5IiwiZ3JhYk9yUmVsZWFzZURlc2NyaXB0aW9uUGF0dGVyblN0cmluZ1Byb3BlcnR5Iiwic3BhY2VLZXlOb2RlIiwic3BhY2UiLCJlbnRlcktleU5vZGUiLCJlbnRlciIsImljb25zIiwiaWNvbk9ySWNvbiIsImxhYmVsV2l0aENvbnRlbnRSb3ciLCJsYWJlbFdpdGhJY29uIiwibGFiZWxJbm5lckNvbnRlbnQiLCJpY29uT3B0aW9ucyIsInRhZ05hbWUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBIZWxwIHNlY3Rpb24gZm9yIGV4cGxhaW5pbmcgaG93IHRvIHVzZSBhIGtleWJvYXJkIHRvIGludGVyYWN0IHdpdGggYSBDb21ib0JveC5cclxuICpcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQYXR0ZXJuU3RyaW5nUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9QYXR0ZXJuU3RyaW5nUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCB7IGNvbWJpbmVPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBTdHJpY3RPbWl0IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9TdHJpY3RPbWl0LmpzJztcclxuaW1wb3J0IHNjZW5lcnlQaGV0IGZyb20gJy4uLy4uL3NjZW5lcnlQaGV0LmpzJztcclxuaW1wb3J0IFNjZW5lcnlQaGV0U3RyaW5ncyBmcm9tICcuLi8uLi9TY2VuZXJ5UGhldFN0cmluZ3MuanMnO1xyXG5pbXBvcnQgVGV4dEtleU5vZGUgZnJvbSAnLi4vVGV4dEtleU5vZGUuanMnO1xyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkgZnJvbSAnLi9LZXlib2FyZEhlbHBJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uLCB7IEtleWJvYXJkSGVscFNlY3Rpb25PcHRpb25zIH0gZnJvbSAnLi9LZXlib2FyZEhlbHBTZWN0aW9uLmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cgZnJvbSAnLi9LZXlib2FyZEhlbHBTZWN0aW9uUm93LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuXHJcbnR5cGUgR3JhYlJlbGVhc2VLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucyA9IFN0cmljdE9taXQ8S2V5Ym9hcmRIZWxwU2VjdGlvbk9wdGlvbnMsICdhMTF5Q29udGVudFRhZ05hbWUnPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbiBleHRlbmRzIEtleWJvYXJkSGVscFNlY3Rpb24ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gdGhpbmdBc1RpdGxlIC0gdGhlIGl0ZW0gYmVpbmcgZ3JhYmJlZCwgY2FwaXRhbGl6ZWQgYXMgYSB0aXRsZVxyXG4gICAqIEBwYXJhbSB0aGluZ0FzTG93ZXJDYXNlIC0gdGhlIGl0ZW0gYmVpbmcgZ3JhYmJlZCwgbG93ZXIgY2FzZSBhcyB1c2VkIGluIGEgc2VudGVuY2UuXHJcbiAgICogQHBhcmFtIFtwcm92aWRlZE9wdGlvbnNdXHJcbiAgICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0aGluZ0FzVGl0bGU6IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz4sIHRoaW5nQXNMb3dlckNhc2U6IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz4sXHJcbiAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlZE9wdGlvbnM/OiBHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb25PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBjb21iaW5lT3B0aW9uczxLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucz4oIHtcclxuXHJcbiAgICAgIC8vIFRoZXJlIGlzIG9ubHkgYSBzaW5nbGUgcGFyYWdyYXBoIGZvciB0aGlzIHNlY3Rpb24sIG5vIGxpc3QgbmVlZGVkIGluIHRoZSBQRE9NXHJcbiAgICAgIGExMXlDb250ZW50VGFnTmFtZTogbnVsbFxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgLy8gdGhlIHZpc2libGUgaGVhZGluZyBzdHJpbmdcclxuICAgIGNvbnN0IGhlYWRpbmdTdHJpbmdQcm9wZXJ0eSA9IG5ldyBQYXR0ZXJuU3RyaW5nUHJvcGVydHkoIFNjZW5lcnlQaGV0U3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cuZ3JhYk9yUmVsZWFzZUhlYWRpbmdQYXR0ZXJuU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgdGhpbmc6IHRoaW5nQXNUaXRsZVxyXG4gICAgfSwgeyB0YW5kZW06IFRhbmRlbS5PUFRfT1VUIH0gKTtcclxuXHJcbiAgICAvLyB0aGUgdmlzaWJsZSBsYWJlbCBzdHJpbmdcclxuICAgIGNvbnN0IGxhYmVsU3RyaW5nUHJvcGVydHkgPSBuZXcgUGF0dGVyblN0cmluZ1Byb3BlcnR5KCBTY2VuZXJ5UGhldFN0cmluZ3Mua2V5Ym9hcmRIZWxwRGlhbG9nLmdyYWJPclJlbGVhc2VMYWJlbFBhdHRlcm5TdHJpbmdQcm9wZXJ0eSwge1xyXG4gICAgICB0aGluZzogdGhpbmdBc0xvd2VyQ2FzZVxyXG4gICAgfSwgeyB0YW5kZW06IFRhbmRlbS5PUFRfT1VUIH0gKTtcclxuXHJcbiAgICAvLyB0aGUgc3RyaW5nIGZvciB0aGUgUERPTVxyXG4gICAgY29uc3QgZGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSA9IG5ldyBQYXR0ZXJuU3RyaW5nUHJvcGVydHkoIFNjZW5lcnlQaGV0U3RyaW5ncy5hMTF5LmtleWJvYXJkSGVscERpYWxvZy5ncmFiT3JSZWxlYXNlRGVzY3JpcHRpb25QYXR0ZXJuU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgdGhpbmc6IHRoaW5nQXNMb3dlckNhc2VcclxuICAgIH0sIHsgdGFuZGVtOiBUYW5kZW0uT1BUX09VVCB9ICk7XHJcblxyXG4gICAgY29uc3Qgc3BhY2VLZXlOb2RlID0gVGV4dEtleU5vZGUuc3BhY2UoKTtcclxuICAgIGNvbnN0IGVudGVyS2V5Tm9kZSA9IFRleHRLZXlOb2RlLmVudGVyKCk7XHJcbiAgICBjb25zdCBpY29ucyA9IEtleWJvYXJkSGVscEljb25GYWN0b3J5Lmljb25Pckljb24oIHNwYWNlS2V5Tm9kZSwgZW50ZXJLZXlOb2RlICk7XHJcbiAgICBjb25zdCBsYWJlbFdpdGhDb250ZW50Um93ID0gS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5sYWJlbFdpdGhJY29uKCBsYWJlbFN0cmluZ1Byb3BlcnR5LCBpY29ucywge1xyXG4gICAgICBsYWJlbElubmVyQ29udGVudDogZGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgaWNvbk9wdGlvbnM6IHtcclxuICAgICAgICB0YWdOYW1lOiAncCcgLy8gaXQgaXMgdGhlIG9ubHkgaXRlbSwgc28gaXQgaXMgJ3AnIHJhdGhlciB0aGFuICdsaSdcclxuICAgICAgfVxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBoZWFkaW5nU3RyaW5nUHJvcGVydHksIFsgbGFiZWxXaXRoQ29udGVudFJvdyBdLCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5zY2VuZXJ5UGhldC5yZWdpc3RlciggJ0dyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbicsIEdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxxQkFBcUIsTUFBTSw4Q0FBOEM7QUFFaEYsU0FBU0MsY0FBYyxRQUFRLHVDQUF1QztBQUV0RSxPQUFPQyxXQUFXLE1BQU0sc0JBQXNCO0FBQzlDLE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2QjtBQUM1RCxPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBQzNDLE9BQU9DLHVCQUF1QixNQUFNLDhCQUE4QjtBQUNsRSxPQUFPQyxtQkFBbUIsTUFBc0MsMEJBQTBCO0FBQzFGLE9BQU9DLHNCQUFzQixNQUFNLDZCQUE2QjtBQUNoRSxPQUFPQyxNQUFNLE1BQU0saUNBQWlDO0FBSXBELGVBQWUsTUFBTUMsOEJBQThCLFNBQVNILG1CQUFtQixDQUFDO0VBRTlFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDU0ksV0FBV0EsQ0FBRUMsWUFBdUMsRUFBRUMsZ0JBQTJDLEVBQ3BGQyxlQUF1RCxFQUFHO0lBRTVFLE1BQU1DLE9BQU8sR0FBR2IsY0FBYyxDQUE4QjtNQUUxRDtNQUNBYyxrQkFBa0IsRUFBRTtJQUN0QixDQUFDLEVBQUVGLGVBQWdCLENBQUM7O0lBRXBCO0lBQ0EsTUFBTUcscUJBQXFCLEdBQUcsSUFBSWhCLHFCQUFxQixDQUFFRyxrQkFBa0IsQ0FBQ2Msa0JBQWtCLENBQUNDLHlDQUF5QyxFQUFFO01BQ3hJQyxLQUFLLEVBQUVSO0lBQ1QsQ0FBQyxFQUFFO01BQUVTLE1BQU0sRUFBRVosTUFBTSxDQUFDYTtJQUFRLENBQUUsQ0FBQzs7SUFFL0I7SUFDQSxNQUFNQyxtQkFBbUIsR0FBRyxJQUFJdEIscUJBQXFCLENBQUVHLGtCQUFrQixDQUFDYyxrQkFBa0IsQ0FBQ00sdUNBQXVDLEVBQUU7TUFDcElKLEtBQUssRUFBRVA7SUFDVCxDQUFDLEVBQUU7TUFBRVEsTUFBTSxFQUFFWixNQUFNLENBQUNhO0lBQVEsQ0FBRSxDQUFDOztJQUUvQjtJQUNBLE1BQU1HLHlCQUF5QixHQUFHLElBQUl4QixxQkFBcUIsQ0FBRUcsa0JBQWtCLENBQUNzQixJQUFJLENBQUNSLGtCQUFrQixDQUFDUyw2Q0FBNkMsRUFBRTtNQUNySlAsS0FBSyxFQUFFUDtJQUNULENBQUMsRUFBRTtNQUFFUSxNQUFNLEVBQUVaLE1BQU0sQ0FBQ2E7SUFBUSxDQUFFLENBQUM7SUFFL0IsTUFBTU0sWUFBWSxHQUFHdkIsV0FBVyxDQUFDd0IsS0FBSyxDQUFDLENBQUM7SUFDeEMsTUFBTUMsWUFBWSxHQUFHekIsV0FBVyxDQUFDMEIsS0FBSyxDQUFDLENBQUM7SUFDeEMsTUFBTUMsS0FBSyxHQUFHMUIsdUJBQXVCLENBQUMyQixVQUFVLENBQUVMLFlBQVksRUFBRUUsWUFBYSxDQUFDO0lBQzlFLE1BQU1JLG1CQUFtQixHQUFHMUIsc0JBQXNCLENBQUMyQixhQUFhLENBQUVaLG1CQUFtQixFQUFFUyxLQUFLLEVBQUU7TUFDNUZJLGlCQUFpQixFQUFFWCx5QkFBeUI7TUFDNUNZLFdBQVcsRUFBRTtRQUNYQyxPQUFPLEVBQUUsR0FBRyxDQUFDO01BQ2Y7SUFDRixDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVyQixxQkFBcUIsRUFBRSxDQUFFaUIsbUJBQW1CLENBQUUsRUFBRW5CLE9BQVEsQ0FBQztFQUNsRTtBQUNGO0FBRUFaLFdBQVcsQ0FBQ29DLFFBQVEsQ0FBRSxnQ0FBZ0MsRUFBRTdCLDhCQUErQixDQUFDIiwiaWdub3JlTGlzdCI6W119