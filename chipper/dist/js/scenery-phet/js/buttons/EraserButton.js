// Copyright 2014-2024, University of Colorado Boulder

/**
 * Button with an eraser icon.
 *
 * @author John Blanco
 */

import InstanceRegistry from '../../../phet-core/js/documentation/InstanceRegistry.js';
import optionize from '../../../phet-core/js/optionize.js';
import { Image } from '../../../scenery/js/imports.js';
import RectangularPushButton from '../../../sun/js/buttons/RectangularPushButton.js';
import eraser_png from '../../images/eraser_png.js';
import PhetColorScheme from '../PhetColorScheme.js';
import sceneryPhet from '../sceneryPhet.js';
import SoundClipPlayer from '../../../tambo/js/sound-generators/SoundClipPlayer.js';
import erase_mp3 from '../../sounds/erase_mp3.js';
export default class EraserButton extends RectangularPushButton {
  constructor(providedOptions) {
    const options = optionize()({
      // SelfOptions
      iconWidth: 20,
      // RectangularPushButtonOptions
      baseColor: PhetColorScheme.BUTTON_YELLOW,
      soundPlayer: new SoundClipPlayer(erase_mp3, {
        soundClipOptions: {
          initialOutputLevel: 0.22
        }
      })
    }, providedOptions);

    // eraser icon
    options.content = new Image(eraser_png);
    options.content.scale(options.iconWidth / options.content.width);
    super(options);

    // support for binder documentation, stripped out in builds and only runs when ?binder is specified
    assert && phet?.chipper?.queryParameters?.binder && InstanceRegistry.registerDataURL('scenery-phet', 'EraserButton', this);
  }
}
sceneryPhet.register('EraserButton', EraserButton);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbnN0YW5jZVJlZ2lzdHJ5Iiwib3B0aW9uaXplIiwiSW1hZ2UiLCJSZWN0YW5ndWxhclB1c2hCdXR0b24iLCJlcmFzZXJfcG5nIiwiUGhldENvbG9yU2NoZW1lIiwic2NlbmVyeVBoZXQiLCJTb3VuZENsaXBQbGF5ZXIiLCJlcmFzZV9tcDMiLCJFcmFzZXJCdXR0b24iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJpY29uV2lkdGgiLCJiYXNlQ29sb3IiLCJCVVRUT05fWUVMTE9XIiwic291bmRQbGF5ZXIiLCJzb3VuZENsaXBPcHRpb25zIiwiaW5pdGlhbE91dHB1dExldmVsIiwiY29udGVudCIsInNjYWxlIiwid2lkdGgiLCJhc3NlcnQiLCJwaGV0IiwiY2hpcHBlciIsInF1ZXJ5UGFyYW1ldGVycyIsImJpbmRlciIsInJlZ2lzdGVyRGF0YVVSTCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRXJhc2VyQnV0dG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJ1dHRvbiB3aXRoIGFuIGVyYXNlciBpY29uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqL1xyXG5cclxuaW1wb3J0IEluc3RhbmNlUmVnaXN0cnkgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL2RvY3VtZW50YXRpb24vSW5zdGFuY2VSZWdpc3RyeS5qcyc7XHJcbmltcG9ydCBTdHJpY3RPbWl0IGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9TdHJpY3RPbWl0LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uLCB7IFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9SZWN0YW5ndWxhclB1c2hCdXR0b24uanMnO1xyXG5pbXBvcnQgZXJhc2VyX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvZXJhc2VyX3BuZy5qcyc7XHJcbmltcG9ydCBQaGV0Q29sb3JTY2hlbWUgZnJvbSAnLi4vUGhldENvbG9yU2NoZW1lLmpzJztcclxuaW1wb3J0IHNjZW5lcnlQaGV0IGZyb20gJy4uL3NjZW5lcnlQaGV0LmpzJztcclxuaW1wb3J0IFNvdW5kQ2xpcFBsYXllciBmcm9tICcuLi8uLi8uLi90YW1iby9qcy9zb3VuZC1nZW5lcmF0b3JzL1NvdW5kQ2xpcFBsYXllci5qcyc7XHJcbmltcG9ydCBlcmFzZV9tcDMgZnJvbSAnLi4vLi4vc291bmRzL2VyYXNlX21wMy5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG4gIGljb25XaWR0aD86IG51bWJlcjsgLy8gd2lkdGggb2YgZXJhc2VyIGljb24sIHVzZWQgZm9yIHNjYWxpbmcsIHRoZSBhc3BlY3QgcmF0aW8gd2lsbCBkZXRlcm1pbmUgaGVpZ2h0XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBFcmFzZXJCdXR0b25PcHRpb25zID0gU2VsZk9wdGlvbnMgJiBTdHJpY3RPbWl0PFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbk9wdGlvbnMsICdjb250ZW50Jz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcmFzZXJCdXR0b24gZXh0ZW5kcyBSZWN0YW5ndWxhclB1c2hCdXR0b24ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9ucz86IEVyYXNlckJ1dHRvbk9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxFcmFzZXJCdXR0b25PcHRpb25zLCBTZWxmT3B0aW9ucywgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gU2VsZk9wdGlvbnNcclxuICAgICAgaWNvbldpZHRoOiAyMCxcclxuXHJcbiAgICAgIC8vIFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbk9wdGlvbnNcclxuICAgICAgYmFzZUNvbG9yOiBQaGV0Q29sb3JTY2hlbWUuQlVUVE9OX1lFTExPVyxcclxuXHJcbiAgICAgIHNvdW5kUGxheWVyOiBuZXcgU291bmRDbGlwUGxheWVyKCBlcmFzZV9tcDMsIHtcclxuICAgICAgICBzb3VuZENsaXBPcHRpb25zOiB7IGluaXRpYWxPdXRwdXRMZXZlbDogMC4yMiB9XHJcbiAgICAgIH0gKVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgLy8gZXJhc2VyIGljb25cclxuICAgIG9wdGlvbnMuY29udGVudCA9IG5ldyBJbWFnZSggZXJhc2VyX3BuZyApO1xyXG4gICAgb3B0aW9ucy5jb250ZW50LnNjYWxlKCBvcHRpb25zLmljb25XaWR0aCAvIG9wdGlvbnMuY29udGVudC53aWR0aCApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gc3VwcG9ydCBmb3IgYmluZGVyIGRvY3VtZW50YXRpb24sIHN0cmlwcGVkIG91dCBpbiBidWlsZHMgYW5kIG9ubHkgcnVucyB3aGVuID9iaW5kZXIgaXMgc3BlY2lmaWVkXHJcbiAgICBhc3NlcnQgJiYgcGhldD8uY2hpcHBlcj8ucXVlcnlQYXJhbWV0ZXJzPy5iaW5kZXIgJiYgSW5zdGFuY2VSZWdpc3RyeS5yZWdpc3RlckRhdGFVUkwoICdzY2VuZXJ5LXBoZXQnLCAnRXJhc2VyQnV0dG9uJywgdGhpcyApO1xyXG4gIH1cclxufVxyXG5cclxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdFcmFzZXJCdXR0b24nLCBFcmFzZXJCdXR0b24gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZ0JBQWdCLE1BQU0seURBQXlEO0FBRXRGLE9BQU9DLFNBQVMsTUFBTSxvQ0FBb0M7QUFDMUQsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxPQUFPQyxxQkFBcUIsTUFBd0Msa0RBQWtEO0FBQ3RILE9BQU9DLFVBQVUsTUFBTSw0QkFBNEI7QUFDbkQsT0FBT0MsZUFBZSxNQUFNLHVCQUF1QjtBQUNuRCxPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBQzNDLE9BQU9DLGVBQWUsTUFBTSx1REFBdUQ7QUFDbkYsT0FBT0MsU0FBUyxNQUFNLDJCQUEyQjtBQVFqRCxlQUFlLE1BQU1DLFlBQVksU0FBU04scUJBQXFCLENBQUM7RUFFdkRPLFdBQVdBLENBQUVDLGVBQXFDLEVBQUc7SUFFMUQsTUFBTUMsT0FBTyxHQUFHWCxTQUFTLENBQWlFLENBQUMsQ0FBRTtNQUUzRjtNQUNBWSxTQUFTLEVBQUUsRUFBRTtNQUViO01BQ0FDLFNBQVMsRUFBRVQsZUFBZSxDQUFDVSxhQUFhO01BRXhDQyxXQUFXLEVBQUUsSUFBSVQsZUFBZSxDQUFFQyxTQUFTLEVBQUU7UUFDM0NTLGdCQUFnQixFQUFFO1VBQUVDLGtCQUFrQixFQUFFO1FBQUs7TUFDL0MsQ0FBRTtJQUNKLENBQUMsRUFBRVAsZUFBZ0IsQ0FBQzs7SUFFcEI7SUFDQUMsT0FBTyxDQUFDTyxPQUFPLEdBQUcsSUFBSWpCLEtBQUssQ0FBRUUsVUFBVyxDQUFDO0lBQ3pDUSxPQUFPLENBQUNPLE9BQU8sQ0FBQ0MsS0FBSyxDQUFFUixPQUFPLENBQUNDLFNBQVMsR0FBR0QsT0FBTyxDQUFDTyxPQUFPLENBQUNFLEtBQU0sQ0FBQztJQUVsRSxLQUFLLENBQUVULE9BQVEsQ0FBQzs7SUFFaEI7SUFDQVUsTUFBTSxJQUFJQyxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsZUFBZSxFQUFFQyxNQUFNLElBQUkxQixnQkFBZ0IsQ0FBQzJCLGVBQWUsQ0FBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLElBQUssQ0FBQztFQUM5SDtBQUNGO0FBRUFyQixXQUFXLENBQUNzQixRQUFRLENBQUUsY0FBYyxFQUFFbkIsWUFBYSxDQUFDIiwiaWdub3JlTGlzdCI6W119