// Copyright 2022-2024, University of Colorado Boulder

/**
 * Demonstrates how to create custom help with KeyboardHelpSection.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import KeyboardHelpIconFactory from '../../keyboard/help/KeyboardHelpIconFactory.js';
import KeyboardHelpSection from '../../keyboard/help/KeyboardHelpSection.js';
import TextKeyNode from '../../keyboard/TextKeyNode.js';
import KeyboardHelpSectionRow from '../../keyboard/help/KeyboardHelpSectionRow.js';
export default function demoKeyboardHelpSection(layoutBounds) {
  const labelWithIcon = KeyboardHelpSectionRow.labelWithIcon('Label With Icon:', new TextKeyNode('Hi'), {
    labelInnerContent: 'Label With Icon Hi'
  });
  const labelWithIconList = KeyboardHelpSectionRow.labelWithIconList('Label With Icon List:', [new TextKeyNode('Hi'), new TextKeyNode('Hello'), new TextKeyNode('Ahoy\' Manatee')], {
    labelInnerContent: 'Label with icon list of hi, hello, Ahoy Manatee.'
  });
  const labelWithArrowKeysRowIcon = KeyboardHelpSectionRow.labelWithIcon('Label with arrows:', KeyboardHelpIconFactory.arrowKeysRowIcon(), {
    labelInnerContent: 'Label with arrows, up, left, down, right'
  });
  const labelWithUpDownArrowKeysRowIcon = KeyboardHelpSectionRow.labelWithIcon('Label with up down arrows:', KeyboardHelpIconFactory.upDownArrowKeysRowIcon(), {
    labelInnerContent: 'Label with up down arrows'
  });
  const labelWithLeftRightArrowKeysRowIcon = KeyboardHelpSectionRow.labelWithIcon('Label with left right arrows:', KeyboardHelpIconFactory.leftRightArrowKeysRowIcon(), {
    labelInnerContent: 'Label with left right arrows'
  });
  const content = [labelWithIcon, labelWithIconList, labelWithArrowKeysRowIcon, labelWithUpDownArrowKeysRowIcon, labelWithLeftRightArrowKeysRowIcon];
  return new KeyboardHelpSection('Custom Help Content', content, {
    center: layoutBounds.center
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJLZXlib2FyZEhlbHBJY29uRmFjdG9yeSIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJUZXh0S2V5Tm9kZSIsIktleWJvYXJkSGVscFNlY3Rpb25Sb3ciLCJkZW1vS2V5Ym9hcmRIZWxwU2VjdGlvbiIsImxheW91dEJvdW5kcyIsImxhYmVsV2l0aEljb24iLCJsYWJlbElubmVyQ29udGVudCIsImxhYmVsV2l0aEljb25MaXN0IiwibGFiZWxXaXRoQXJyb3dLZXlzUm93SWNvbiIsImFycm93S2V5c1Jvd0ljb24iLCJsYWJlbFdpdGhVcERvd25BcnJvd0tleXNSb3dJY29uIiwidXBEb3duQXJyb3dLZXlzUm93SWNvbiIsImxhYmVsV2l0aExlZnRSaWdodEFycm93S2V5c1Jvd0ljb24iLCJsZWZ0UmlnaHRBcnJvd0tleXNSb3dJY29uIiwiY29udGVudCIsImNlbnRlciJdLCJzb3VyY2VzIjpbImRlbW9LZXlib2FyZEhlbHBTZWN0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIERlbW9uc3RyYXRlcyBob3cgdG8gY3JlYXRlIGN1c3RvbSBoZWxwIHdpdGggS2V5Ym9hcmRIZWxwU2VjdGlvbi5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkgZnJvbSAnLi4vLi4va2V5Ym9hcmQvaGVscC9LZXlib2FyZEhlbHBJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uL2tleWJvYXJkL2hlbHAvS2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBUZXh0S2V5Tm9kZSBmcm9tICcuLi8uLi9rZXlib2FyZC9UZXh0S2V5Tm9kZS5qcyc7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgQm91bmRzMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvQm91bmRzMi5qcyc7XHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uUm93IGZyb20gJy4uLy4uL2tleWJvYXJkL2hlbHAvS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZW1vS2V5Ym9hcmRIZWxwU2VjdGlvbiggbGF5b3V0Qm91bmRzOiBCb3VuZHMyICk6IE5vZGUge1xyXG5cclxuICBjb25zdCBsYWJlbFdpdGhJY29uID0gS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5sYWJlbFdpdGhJY29uKCAnTGFiZWwgV2l0aCBJY29uOicsIG5ldyBUZXh0S2V5Tm9kZSggJ0hpJyApLCB7XHJcbiAgICBsYWJlbElubmVyQ29udGVudDogJ0xhYmVsIFdpdGggSWNvbiBIaSdcclxuICB9ICk7XHJcblxyXG4gIGNvbnN0IGxhYmVsV2l0aEljb25MaXN0ID0gS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5sYWJlbFdpdGhJY29uTGlzdCggJ0xhYmVsIFdpdGggSWNvbiBMaXN0OicsIFtcclxuICAgIG5ldyBUZXh0S2V5Tm9kZSggJ0hpJyApLFxyXG4gICAgbmV3IFRleHRLZXlOb2RlKCAnSGVsbG8nICksXHJcbiAgICBuZXcgVGV4dEtleU5vZGUoICdBaG95XFwnIE1hbmF0ZWUnIClcclxuICBdLCB7XHJcbiAgICBsYWJlbElubmVyQ29udGVudDogJ0xhYmVsIHdpdGggaWNvbiBsaXN0IG9mIGhpLCBoZWxsbywgQWhveSBNYW5hdGVlLidcclxuICB9ICk7XHJcblxyXG4gIGNvbnN0IGxhYmVsV2l0aEFycm93S2V5c1Jvd0ljb24gPSBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmxhYmVsV2l0aEljb24oICdMYWJlbCB3aXRoIGFycm93czonLFxyXG4gICAgS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkuYXJyb3dLZXlzUm93SWNvbigpLCB7XHJcbiAgICAgIGxhYmVsSW5uZXJDb250ZW50OiAnTGFiZWwgd2l0aCBhcnJvd3MsIHVwLCBsZWZ0LCBkb3duLCByaWdodCdcclxuICAgIH0gKTtcclxuXHJcbiAgY29uc3QgbGFiZWxXaXRoVXBEb3duQXJyb3dLZXlzUm93SWNvbiA9IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cubGFiZWxXaXRoSWNvbiggJ0xhYmVsIHdpdGggdXAgZG93biBhcnJvd3M6JyxcclxuICAgIEtleWJvYXJkSGVscEljb25GYWN0b3J5LnVwRG93bkFycm93S2V5c1Jvd0ljb24oKSwge1xyXG4gICAgICBsYWJlbElubmVyQ29udGVudDogJ0xhYmVsIHdpdGggdXAgZG93biBhcnJvd3MnXHJcbiAgICB9ICk7XHJcblxyXG4gIGNvbnN0IGxhYmVsV2l0aExlZnRSaWdodEFycm93S2V5c1Jvd0ljb24gPSBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmxhYmVsV2l0aEljb24oICdMYWJlbCB3aXRoIGxlZnQgcmlnaHQgYXJyb3dzOicsXHJcbiAgICBLZXlib2FyZEhlbHBJY29uRmFjdG9yeS5sZWZ0UmlnaHRBcnJvd0tleXNSb3dJY29uKCksIHtcclxuICAgICAgbGFiZWxJbm5lckNvbnRlbnQ6ICdMYWJlbCB3aXRoIGxlZnQgcmlnaHQgYXJyb3dzJ1xyXG4gICAgfSApO1xyXG5cclxuICBjb25zdCBjb250ZW50ID0gW1xyXG4gICAgbGFiZWxXaXRoSWNvbixcclxuICAgIGxhYmVsV2l0aEljb25MaXN0LFxyXG4gICAgbGFiZWxXaXRoQXJyb3dLZXlzUm93SWNvbixcclxuICAgIGxhYmVsV2l0aFVwRG93bkFycm93S2V5c1Jvd0ljb24sXHJcbiAgICBsYWJlbFdpdGhMZWZ0UmlnaHRBcnJvd0tleXNSb3dJY29uXHJcbiAgXTtcclxuXHJcbiAgcmV0dXJuIG5ldyBLZXlib2FyZEhlbHBTZWN0aW9uKCAnQ3VzdG9tIEhlbHAgQ29udGVudCcsIGNvbnRlbnQsIHtcclxuICAgIGNlbnRlcjogbGF5b3V0Qm91bmRzLmNlbnRlclxyXG4gIH0gKTtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSx1QkFBdUIsTUFBTSxnREFBZ0Q7QUFDcEYsT0FBT0MsbUJBQW1CLE1BQU0sNENBQTRDO0FBQzVFLE9BQU9DLFdBQVcsTUFBTSwrQkFBK0I7QUFHdkQsT0FBT0Msc0JBQXNCLE1BQU0sK0NBQStDO0FBRWxGLGVBQWUsU0FBU0MsdUJBQXVCQSxDQUFFQyxZQUFxQixFQUFTO0VBRTdFLE1BQU1DLGFBQWEsR0FBR0gsc0JBQXNCLENBQUNHLGFBQWEsQ0FBRSxrQkFBa0IsRUFBRSxJQUFJSixXQUFXLENBQUUsSUFBSyxDQUFDLEVBQUU7SUFDdkdLLGlCQUFpQixFQUFFO0VBQ3JCLENBQUUsQ0FBQztFQUVILE1BQU1DLGlCQUFpQixHQUFHTCxzQkFBc0IsQ0FBQ0ssaUJBQWlCLENBQUUsdUJBQXVCLEVBQUUsQ0FDM0YsSUFBSU4sV0FBVyxDQUFFLElBQUssQ0FBQyxFQUN2QixJQUFJQSxXQUFXLENBQUUsT0FBUSxDQUFDLEVBQzFCLElBQUlBLFdBQVcsQ0FBRSxnQkFBaUIsQ0FBQyxDQUNwQyxFQUFFO0lBQ0RLLGlCQUFpQixFQUFFO0VBQ3JCLENBQUUsQ0FBQztFQUVILE1BQU1FLHlCQUF5QixHQUFHTixzQkFBc0IsQ0FBQ0csYUFBYSxDQUFFLG9CQUFvQixFQUMxRk4sdUJBQXVCLENBQUNVLGdCQUFnQixDQUFDLENBQUMsRUFBRTtJQUMxQ0gsaUJBQWlCLEVBQUU7RUFDckIsQ0FBRSxDQUFDO0VBRUwsTUFBTUksK0JBQStCLEdBQUdSLHNCQUFzQixDQUFDRyxhQUFhLENBQUUsNEJBQTRCLEVBQ3hHTix1QkFBdUIsQ0FBQ1ksc0JBQXNCLENBQUMsQ0FBQyxFQUFFO0lBQ2hETCxpQkFBaUIsRUFBRTtFQUNyQixDQUFFLENBQUM7RUFFTCxNQUFNTSxrQ0FBa0MsR0FBR1Ysc0JBQXNCLENBQUNHLGFBQWEsQ0FBRSwrQkFBK0IsRUFDOUdOLHVCQUF1QixDQUFDYyx5QkFBeUIsQ0FBQyxDQUFDLEVBQUU7SUFDbkRQLGlCQUFpQixFQUFFO0VBQ3JCLENBQUUsQ0FBQztFQUVMLE1BQU1RLE9BQU8sR0FBRyxDQUNkVCxhQUFhLEVBQ2JFLGlCQUFpQixFQUNqQkMseUJBQXlCLEVBQ3pCRSwrQkFBK0IsRUFDL0JFLGtDQUFrQyxDQUNuQztFQUVELE9BQU8sSUFBSVosbUJBQW1CLENBQUUscUJBQXFCLEVBQUVjLE9BQU8sRUFBRTtJQUM5REMsTUFBTSxFQUFFWCxZQUFZLENBQUNXO0VBQ3ZCLENBQUUsQ0FBQztBQUNMIiwiaWdub3JlTGlzdCI6W119