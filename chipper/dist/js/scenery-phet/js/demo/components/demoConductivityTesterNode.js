// Copyright 2023, University of Colorado Boulder

/**
 * Demo for ConductivityTesterNode
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../../axon/js/Property.js';
import Range from '../../../../dot/js/Range.js';
import Dimension2 from '../../../../dot/js/Dimension2.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import Vector2Property from '../../../../dot/js/Vector2Property.js';
import { DragListener, Node, Text } from '../../../../scenery/js/imports.js';
import Checkbox from '../../../../sun/js/Checkbox.js';
import HSlider from '../../../../sun/js/HSlider.js';
import ConductivityTesterNode from '../../ConductivityTesterNode.js';
import PhetFont from '../../PhetFont.js';
import NumberProperty from '../../../../axon/js/NumberProperty.js';
import Tandem from '../../../../tandem/js/Tandem.js';
export default function demoConductivityTesterNode(layoutBounds) {
  const brightnessProperty = new NumberProperty(0, {
    range: new Range(0, 1)
  });
  const testerPositionProperty = new Vector2Property(new Vector2(0, 0));
  const positiveProbePositionProperty = new Vector2Property(new Vector2(testerPositionProperty.get().x + 140, testerPositionProperty.get().y + 100));
  const negativeProbePositionProperty = new Vector2Property(new Vector2(testerPositionProperty.get().x - 40, testerPositionProperty.get().y + 100));
  const conductivityTesterNode = new ConductivityTesterNode(brightnessProperty, testerPositionProperty, positiveProbePositionProperty, negativeProbePositionProperty, {
    positiveProbeFill: 'orange',
    cursor: 'pointer',
    tandem: Tandem.OPT_OUT
  });
  conductivityTesterNode.addInputListener(new DragListener({
    positionProperty: testerPositionProperty
  }));

  // brightness slider
  const brightnessSlider = new HSlider(brightnessProperty, new Range(0, 1), {
    trackSize: new Dimension2(200, 5),
    thumbSize: new Dimension2(25, 45),
    thumbFill: 'orange',
    thumbFillHighlighted: 'rgb( 255, 210, 0 )',
    thumbCenterLineStroke: 'black',
    centerX: conductivityTesterNode.centerX,
    bottom: conductivityTesterNode.bottom + 100
  });
  const shortCircuitProperty = new Property(false);
  shortCircuitProperty.link(shortCircuit => {
    conductivityTesterNode.shortCircuit = shortCircuit;
  });
  const shortCircuitCheckbox = new Checkbox(shortCircuitProperty, new Text('short circuit', {
    font: new PhetFont(20)
  }), {
    centerX: brightnessSlider.centerX,
    bottom: brightnessSlider.bottom + 50
  });
  return new Node({
    children: [conductivityTesterNode, brightnessSlider, shortCircuitCheckbox],
    center: layoutBounds.center
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlJhbmdlIiwiRGltZW5zaW9uMiIsIlZlY3RvcjIiLCJWZWN0b3IyUHJvcGVydHkiLCJEcmFnTGlzdGVuZXIiLCJOb2RlIiwiVGV4dCIsIkNoZWNrYm94IiwiSFNsaWRlciIsIkNvbmR1Y3Rpdml0eVRlc3Rlck5vZGUiLCJQaGV0Rm9udCIsIk51bWJlclByb3BlcnR5IiwiVGFuZGVtIiwiZGVtb0NvbmR1Y3Rpdml0eVRlc3Rlck5vZGUiLCJsYXlvdXRCb3VuZHMiLCJicmlnaHRuZXNzUHJvcGVydHkiLCJyYW5nZSIsInRlc3RlclBvc2l0aW9uUHJvcGVydHkiLCJwb3NpdGl2ZVByb2JlUG9zaXRpb25Qcm9wZXJ0eSIsImdldCIsIngiLCJ5IiwibmVnYXRpdmVQcm9iZVBvc2l0aW9uUHJvcGVydHkiLCJjb25kdWN0aXZpdHlUZXN0ZXJOb2RlIiwicG9zaXRpdmVQcm9iZUZpbGwiLCJjdXJzb3IiLCJ0YW5kZW0iLCJPUFRfT1VUIiwiYWRkSW5wdXRMaXN0ZW5lciIsInBvc2l0aW9uUHJvcGVydHkiLCJicmlnaHRuZXNzU2xpZGVyIiwidHJhY2tTaXplIiwidGh1bWJTaXplIiwidGh1bWJGaWxsIiwidGh1bWJGaWxsSGlnaGxpZ2h0ZWQiLCJ0aHVtYkNlbnRlckxpbmVTdHJva2UiLCJjZW50ZXJYIiwiYm90dG9tIiwic2hvcnRDaXJjdWl0UHJvcGVydHkiLCJsaW5rIiwic2hvcnRDaXJjdWl0Iiwic2hvcnRDaXJjdWl0Q2hlY2tib3giLCJmb250IiwiY2hpbGRyZW4iLCJjZW50ZXIiXSwic291cmNlcyI6WyJkZW1vQ29uZHVjdGl2aXR5VGVzdGVyTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGVtbyBmb3IgQ29uZHVjdGl2aXR5VGVzdGVyTm9kZVxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgUmFuZ2UgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1JhbmdlLmpzJztcclxuaW1wb3J0IERpbWVuc2lvbjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0RpbWVuc2lvbjIuanMnO1xyXG5pbXBvcnQgVmVjdG9yMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVmVjdG9yMi5qcyc7XHJcbmltcG9ydCBWZWN0b3IyUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjJQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCB7IERyYWdMaXN0ZW5lciwgTm9kZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBDaGVja2JveCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvQ2hlY2tib3guanMnO1xyXG5pbXBvcnQgSFNsaWRlciBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvSFNsaWRlci5qcyc7XHJcbmltcG9ydCBDb25kdWN0aXZpdHlUZXN0ZXJOb2RlIGZyb20gJy4uLy4uL0NvbmR1Y3Rpdml0eVRlc3Rlck5vZGUuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgTnVtYmVyUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9OdW1iZXJQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZW1vQ29uZHVjdGl2aXR5VGVzdGVyTm9kZSggbGF5b3V0Qm91bmRzOiBCb3VuZHMyICk6IE5vZGUge1xyXG5cclxuICBjb25zdCBicmlnaHRuZXNzUHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIDAsIHsgcmFuZ2U6IG5ldyBSYW5nZSggMCwgMSApIH0gKTtcclxuICBjb25zdCB0ZXN0ZXJQb3NpdGlvblByb3BlcnR5ID0gbmV3IFZlY3RvcjJQcm9wZXJ0eSggbmV3IFZlY3RvcjIoIDAsIDAgKSApO1xyXG4gIGNvbnN0IHBvc2l0aXZlUHJvYmVQb3NpdGlvblByb3BlcnR5ID0gbmV3IFZlY3RvcjJQcm9wZXJ0eSggbmV3IFZlY3RvcjIoIHRlc3RlclBvc2l0aW9uUHJvcGVydHkuZ2V0KCkueCArIDE0MCwgdGVzdGVyUG9zaXRpb25Qcm9wZXJ0eS5nZXQoKS55ICsgMTAwICkgKTtcclxuICBjb25zdCBuZWdhdGl2ZVByb2JlUG9zaXRpb25Qcm9wZXJ0eSA9IG5ldyBWZWN0b3IyUHJvcGVydHkoIG5ldyBWZWN0b3IyKCB0ZXN0ZXJQb3NpdGlvblByb3BlcnR5LmdldCgpLnggLSA0MCwgdGVzdGVyUG9zaXRpb25Qcm9wZXJ0eS5nZXQoKS55ICsgMTAwICkgKTtcclxuXHJcbiAgY29uc3QgY29uZHVjdGl2aXR5VGVzdGVyTm9kZSA9IG5ldyBDb25kdWN0aXZpdHlUZXN0ZXJOb2RlKCBicmlnaHRuZXNzUHJvcGVydHksXHJcbiAgICB0ZXN0ZXJQb3NpdGlvblByb3BlcnR5LCBwb3NpdGl2ZVByb2JlUG9zaXRpb25Qcm9wZXJ0eSwgbmVnYXRpdmVQcm9iZVBvc2l0aW9uUHJvcGVydHksIHtcclxuICAgICAgcG9zaXRpdmVQcm9iZUZpbGw6ICdvcmFuZ2UnLFxyXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uT1BUX09VVFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIGNvbmR1Y3Rpdml0eVRlc3Rlck5vZGUuYWRkSW5wdXRMaXN0ZW5lciggbmV3IERyYWdMaXN0ZW5lcigge1xyXG4gICAgcG9zaXRpb25Qcm9wZXJ0eTogdGVzdGVyUG9zaXRpb25Qcm9wZXJ0eVxyXG4gIH0gKSApO1xyXG5cclxuICAvLyBicmlnaHRuZXNzIHNsaWRlclxyXG4gIGNvbnN0IGJyaWdodG5lc3NTbGlkZXIgPSBuZXcgSFNsaWRlciggYnJpZ2h0bmVzc1Byb3BlcnR5LCBuZXcgUmFuZ2UoIDAsIDEgKSwge1xyXG4gICAgdHJhY2tTaXplOiBuZXcgRGltZW5zaW9uMiggMjAwLCA1ICksXHJcbiAgICB0aHVtYlNpemU6IG5ldyBEaW1lbnNpb24yKCAyNSwgNDUgKSxcclxuICAgIHRodW1iRmlsbDogJ29yYW5nZScsXHJcbiAgICB0aHVtYkZpbGxIaWdobGlnaHRlZDogJ3JnYiggMjU1LCAyMTAsIDAgKScsXHJcbiAgICB0aHVtYkNlbnRlckxpbmVTdHJva2U6ICdibGFjaycsXHJcbiAgICBjZW50ZXJYOiBjb25kdWN0aXZpdHlUZXN0ZXJOb2RlLmNlbnRlclgsXHJcbiAgICBib3R0b206IGNvbmR1Y3Rpdml0eVRlc3Rlck5vZGUuYm90dG9tICsgMTAwXHJcbiAgfSApO1xyXG5cclxuICBjb25zdCBzaG9ydENpcmN1aXRQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eSggZmFsc2UgKTtcclxuICBzaG9ydENpcmN1aXRQcm9wZXJ0eS5saW5rKCBzaG9ydENpcmN1aXQgPT4ge1xyXG4gICAgY29uZHVjdGl2aXR5VGVzdGVyTm9kZS5zaG9ydENpcmN1aXQgPSBzaG9ydENpcmN1aXQ7XHJcbiAgfSApO1xyXG5cclxuICBjb25zdCBzaG9ydENpcmN1aXRDaGVja2JveCA9IG5ldyBDaGVja2JveCggc2hvcnRDaXJjdWl0UHJvcGVydHksIG5ldyBUZXh0KCAnc2hvcnQgY2lyY3VpdCcsIHsgZm9udDogbmV3IFBoZXRGb250KCAyMCApIH0gKSwge1xyXG4gICAgY2VudGVyWDogYnJpZ2h0bmVzc1NsaWRlci5jZW50ZXJYLFxyXG4gICAgYm90dG9tOiBicmlnaHRuZXNzU2xpZGVyLmJvdHRvbSArIDUwXHJcbiAgfSApO1xyXG5cclxuICByZXR1cm4gbmV3IE5vZGUoIHtcclxuICAgIGNoaWxkcmVuOiBbIGNvbmR1Y3Rpdml0eVRlc3Rlck5vZGUsIGJyaWdodG5lc3NTbGlkZXIsIHNob3J0Q2lyY3VpdENoZWNrYm94IF0sXHJcbiAgICBjZW50ZXI6IGxheW91dEJvdW5kcy5jZW50ZXJcclxuICB9ICk7XHJcbn0iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLGlDQUFpQztBQUV0RCxPQUFPQyxLQUFLLE1BQU0sNkJBQTZCO0FBQy9DLE9BQU9DLFVBQVUsTUFBTSxrQ0FBa0M7QUFDekQsT0FBT0MsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxlQUFlLE1BQU0sdUNBQXVDO0FBQ25FLFNBQVNDLFlBQVksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQzVFLE9BQU9DLFFBQVEsTUFBTSxnQ0FBZ0M7QUFDckQsT0FBT0MsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxzQkFBc0IsTUFBTSxpQ0FBaUM7QUFDcEUsT0FBT0MsUUFBUSxNQUFNLG1CQUFtQjtBQUN4QyxPQUFPQyxjQUFjLE1BQU0sdUNBQXVDO0FBQ2xFLE9BQU9DLE1BQU0sTUFBTSxpQ0FBaUM7QUFFcEQsZUFBZSxTQUFTQywwQkFBMEJBLENBQUVDLFlBQXFCLEVBQVM7RUFFaEYsTUFBTUMsa0JBQWtCLEdBQUcsSUFBSUosY0FBYyxDQUFFLENBQUMsRUFBRTtJQUFFSyxLQUFLLEVBQUUsSUFBSWhCLEtBQUssQ0FBRSxDQUFDLEVBQUUsQ0FBRTtFQUFFLENBQUUsQ0FBQztFQUNoRixNQUFNaUIsc0JBQXNCLEdBQUcsSUFBSWQsZUFBZSxDQUFFLElBQUlELE9BQU8sQ0FBRSxDQUFDLEVBQUUsQ0FBRSxDQUFFLENBQUM7RUFDekUsTUFBTWdCLDZCQUE2QixHQUFHLElBQUlmLGVBQWUsQ0FBRSxJQUFJRCxPQUFPLENBQUVlLHNCQUFzQixDQUFDRSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxDQUFDLEdBQUcsR0FBRyxFQUFFSCxzQkFBc0IsQ0FBQ0UsR0FBRyxDQUFDLENBQUMsQ0FBQ0UsQ0FBQyxHQUFHLEdBQUksQ0FBRSxDQUFDO0VBQ3RKLE1BQU1DLDZCQUE2QixHQUFHLElBQUluQixlQUFlLENBQUUsSUFBSUQsT0FBTyxDQUFFZSxzQkFBc0IsQ0FBQ0UsR0FBRyxDQUFDLENBQUMsQ0FBQ0MsQ0FBQyxHQUFHLEVBQUUsRUFBRUgsc0JBQXNCLENBQUNFLEdBQUcsQ0FBQyxDQUFDLENBQUNFLENBQUMsR0FBRyxHQUFJLENBQUUsQ0FBQztFQUVySixNQUFNRSxzQkFBc0IsR0FBRyxJQUFJZCxzQkFBc0IsQ0FBRU0sa0JBQWtCLEVBQzNFRSxzQkFBc0IsRUFBRUMsNkJBQTZCLEVBQUVJLDZCQUE2QixFQUFFO0lBQ3BGRSxpQkFBaUIsRUFBRSxRQUFRO0lBQzNCQyxNQUFNLEVBQUUsU0FBUztJQUNqQkMsTUFBTSxFQUFFZCxNQUFNLENBQUNlO0VBQ2pCLENBQ0YsQ0FBQztFQUVESixzQkFBc0IsQ0FBQ0ssZ0JBQWdCLENBQUUsSUFBSXhCLFlBQVksQ0FBRTtJQUN6RHlCLGdCQUFnQixFQUFFWjtFQUNwQixDQUFFLENBQUUsQ0FBQzs7RUFFTDtFQUNBLE1BQU1hLGdCQUFnQixHQUFHLElBQUl0QixPQUFPLENBQUVPLGtCQUFrQixFQUFFLElBQUlmLEtBQUssQ0FBRSxDQUFDLEVBQUUsQ0FBRSxDQUFDLEVBQUU7SUFDM0UrQixTQUFTLEVBQUUsSUFBSTlCLFVBQVUsQ0FBRSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0lBQ25DK0IsU0FBUyxFQUFFLElBQUkvQixVQUFVLENBQUUsRUFBRSxFQUFFLEVBQUcsQ0FBQztJQUNuQ2dDLFNBQVMsRUFBRSxRQUFRO0lBQ25CQyxvQkFBb0IsRUFBRSxvQkFBb0I7SUFDMUNDLHFCQUFxQixFQUFFLE9BQU87SUFDOUJDLE9BQU8sRUFBRWIsc0JBQXNCLENBQUNhLE9BQU87SUFDdkNDLE1BQU0sRUFBRWQsc0JBQXNCLENBQUNjLE1BQU0sR0FBRztFQUMxQyxDQUFFLENBQUM7RUFFSCxNQUFNQyxvQkFBb0IsR0FBRyxJQUFJdkMsUUFBUSxDQUFFLEtBQU0sQ0FBQztFQUNsRHVDLG9CQUFvQixDQUFDQyxJQUFJLENBQUVDLFlBQVksSUFBSTtJQUN6Q2pCLHNCQUFzQixDQUFDaUIsWUFBWSxHQUFHQSxZQUFZO0VBQ3BELENBQUUsQ0FBQztFQUVILE1BQU1DLG9CQUFvQixHQUFHLElBQUlsQyxRQUFRLENBQUUrQixvQkFBb0IsRUFBRSxJQUFJaEMsSUFBSSxDQUFFLGVBQWUsRUFBRTtJQUFFb0MsSUFBSSxFQUFFLElBQUloQyxRQUFRLENBQUUsRUFBRztFQUFFLENBQUUsQ0FBQyxFQUFFO0lBQzFIMEIsT0FBTyxFQUFFTixnQkFBZ0IsQ0FBQ00sT0FBTztJQUNqQ0MsTUFBTSxFQUFFUCxnQkFBZ0IsQ0FBQ08sTUFBTSxHQUFHO0VBQ3BDLENBQUUsQ0FBQztFQUVILE9BQU8sSUFBSWhDLElBQUksQ0FBRTtJQUNmc0MsUUFBUSxFQUFFLENBQUVwQixzQkFBc0IsRUFBRU8sZ0JBQWdCLEVBQUVXLG9CQUFvQixDQUFFO0lBQzVFRyxNQUFNLEVBQUU5QixZQUFZLENBQUM4QjtFQUN2QixDQUFFLENBQUM7QUFDTCIsImlnbm9yZUxpc3QiOltdfQ==