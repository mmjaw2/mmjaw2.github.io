// Copyright 2015-2023, University of Colorado Boulder

/**
 * View for demonstrating dialogs.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import BasicActionsKeyboardHelpSection from '../../../scenery-phet/js/keyboard/help/BasicActionsKeyboardHelpSection.js';
import { HBox, VBox } from '../../../scenery/js/imports.js';
import Panel from '../../../sun/js/Panel.js';
import Tandem from '../../../tandem/js/Tandem.js';
import joist from '../joist.js';
import KeyboardHelpButton from '../KeyboardHelpButton.js';
import ScreenView from '../ScreenView.js';
import NavigationBarPreferencesButton from '../preferences/NavigationBarPreferencesButton.js';
import PreferencesModel from '../preferences/PreferencesModel.js';
import PreferencesDialogDemoSection from './PreferencesDialogDemoSection.js';
class DialogsScreenView extends ScreenView {
  constructor(providedOptions) {
    super(providedOptions);
    const sim = phet.joist.sim;
    const keyboardHelpDialogContent = new BasicActionsKeyboardHelpSection();
    const fakeScreen = {
      createKeyboardHelpNode: () => keyboardHelpDialogContent,
      tandem: Tandem.OPT_OUT
    };
    const keyboardHelpButton = new KeyboardHelpButton([fakeScreen], new Property(fakeScreen), sim.lookAndFeel.navigationBarFillProperty, {
      tandem: Tandem.GENERAL_VIEW.createTandem('keyboardHelpButton')
    });
    const preferencesModel = new PreferencesModel({
      simulationOptions: {
        customPreferences: [{
          createContent: tandem => new PreferencesDialogDemoSection()
        }]
      }
    });
    const preferencesButton = new NavigationBarPreferencesButton(preferencesModel, sim.lookAndFeel.navigationBarFillProperty, {
      tandem: Tandem.GENERAL_VIEW.createTandem('preferencesButton')
    });
    const buttonsHBox = new HBox({
      children: [keyboardHelpButton, preferencesButton]
    });
    buttonsHBox.setScaleMagnitude(2);
    // Since KeyboardHelpButton adapts its color to the navigation bar, put the button in a panel that's the same
    // color as the navigation bar. You can test this by toggling sim.lookAndFeel.backgroundColorProperty
    // between 'white' and 'black' is the browser console.
    const keyboardHelpPanel = new Panel(buttonsHBox, {
      fill: sim.lookAndFeel.navigationBarFillProperty.value
    });
    sim.lookAndFeel.navigationBarFillProperty.link(navigationBarFill => {
      keyboardHelpPanel.setFill(navigationBarFill);
    });
    this.addChild(new VBox({
      children: [keyboardHelpPanel],
      spacing: 20,
      center: this.layoutBounds.center
    }));
  }
}
joist.register('DialogsScreenView', DialogsScreenView);
export default DialogsScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIkJhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24iLCJIQm94IiwiVkJveCIsIlBhbmVsIiwiVGFuZGVtIiwiam9pc3QiLCJLZXlib2FyZEhlbHBCdXR0b24iLCJTY3JlZW5WaWV3IiwiTmF2aWdhdGlvbkJhclByZWZlcmVuY2VzQnV0dG9uIiwiUHJlZmVyZW5jZXNNb2RlbCIsIlByZWZlcmVuY2VzRGlhbG9nRGVtb1NlY3Rpb24iLCJEaWFsb2dzU2NyZWVuVmlldyIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwic2ltIiwicGhldCIsImtleWJvYXJkSGVscERpYWxvZ0NvbnRlbnQiLCJmYWtlU2NyZWVuIiwiY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZSIsInRhbmRlbSIsIk9QVF9PVVQiLCJrZXlib2FyZEhlbHBCdXR0b24iLCJsb29rQW5kRmVlbCIsIm5hdmlnYXRpb25CYXJGaWxsUHJvcGVydHkiLCJHRU5FUkFMX1ZJRVciLCJjcmVhdGVUYW5kZW0iLCJwcmVmZXJlbmNlc01vZGVsIiwic2ltdWxhdGlvbk9wdGlvbnMiLCJjdXN0b21QcmVmZXJlbmNlcyIsImNyZWF0ZUNvbnRlbnQiLCJwcmVmZXJlbmNlc0J1dHRvbiIsImJ1dHRvbnNIQm94IiwiY2hpbGRyZW4iLCJzZXRTY2FsZU1hZ25pdHVkZSIsImtleWJvYXJkSGVscFBhbmVsIiwiZmlsbCIsInZhbHVlIiwibGluayIsIm5hdmlnYXRpb25CYXJGaWxsIiwic2V0RmlsbCIsImFkZENoaWxkIiwic3BhY2luZyIsImNlbnRlciIsImxheW91dEJvdW5kcyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRGlhbG9nc1NjcmVlblZpZXcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVmlldyBmb3IgZGVtb25zdHJhdGluZyBkaWFsb2dzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IEJhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFZCb3ggfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUGFuZWwgZnJvbSAnLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGpvaXN0IGZyb20gJy4uL2pvaXN0LmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscEJ1dHRvbiBmcm9tICcuLi9LZXlib2FyZEhlbHBCdXR0b24uanMnO1xyXG5pbXBvcnQgU2NyZWVuVmlldywgeyBTY3JlZW5WaWV3T3B0aW9ucyB9IGZyb20gJy4uL1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgeyBBbnlTY3JlZW4gfSBmcm9tICcuLi9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2ltIGZyb20gJy4uL1NpbS5qcyc7XHJcbmltcG9ydCBOYXZpZ2F0aW9uQmFyUHJlZmVyZW5jZXNCdXR0b24gZnJvbSAnLi4vcHJlZmVyZW5jZXMvTmF2aWdhdGlvbkJhclByZWZlcmVuY2VzQnV0dG9uLmpzJztcclxuaW1wb3J0IFByZWZlcmVuY2VzTW9kZWwgZnJvbSAnLi4vcHJlZmVyZW5jZXMvUHJlZmVyZW5jZXNNb2RlbC5qcyc7XHJcbmltcG9ydCBQcmVmZXJlbmNlc0RpYWxvZ0RlbW9TZWN0aW9uIGZyb20gJy4vUHJlZmVyZW5jZXNEaWFsb2dEZW1vU2VjdGlvbi5qcyc7XHJcblxyXG5jbGFzcyBEaWFsb2dzU2NyZWVuVmlldyBleHRlbmRzIFNjcmVlblZpZXcge1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zOiBTY3JlZW5WaWV3T3B0aW9ucyApIHtcclxuXHJcbiAgICBzdXBlciggcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3Qgc2ltID0gcGhldC5qb2lzdC5zaW0gYXMgU2ltO1xyXG5cclxuICAgIGNvbnN0IGtleWJvYXJkSGVscERpYWxvZ0NvbnRlbnQgPSBuZXcgQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbigpO1xyXG5cclxuICAgIGNvbnN0IGZha2VTY3JlZW4gPSB7IGNyZWF0ZUtleWJvYXJkSGVscE5vZGU6ICgpID0+IGtleWJvYXJkSGVscERpYWxvZ0NvbnRlbnQsIHRhbmRlbTogVGFuZGVtLk9QVF9PVVQgfSBhcyB1bmtub3duIGFzIEFueVNjcmVlbjtcclxuICAgIGNvbnN0IGtleWJvYXJkSGVscEJ1dHRvbiA9IG5ldyBLZXlib2FyZEhlbHBCdXR0b24oXHJcbiAgICAgIFsgZmFrZVNjcmVlbiBdLFxyXG4gICAgICBuZXcgUHJvcGVydHkoIGZha2VTY3JlZW4gKSxcclxuICAgICAgc2ltLmxvb2tBbmRGZWVsLm5hdmlnYXRpb25CYXJGaWxsUHJvcGVydHksIHtcclxuICAgICAgICB0YW5kZW06IFRhbmRlbS5HRU5FUkFMX1ZJRVcuY3JlYXRlVGFuZGVtKCAna2V5Ym9hcmRIZWxwQnV0dG9uJyApXHJcbiAgICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBwcmVmZXJlbmNlc01vZGVsID0gbmV3IFByZWZlcmVuY2VzTW9kZWwoIHtcclxuICAgICAgc2ltdWxhdGlvbk9wdGlvbnM6IHtcclxuICAgICAgICBjdXN0b21QcmVmZXJlbmNlczogWyB7XHJcbiAgICAgICAgICBjcmVhdGVDb250ZW50OiB0YW5kZW0gPT4gbmV3IFByZWZlcmVuY2VzRGlhbG9nRGVtb1NlY3Rpb24oKVxyXG4gICAgICAgIH0gXVxyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCBwcmVmZXJlbmNlc0J1dHRvbiA9IG5ldyBOYXZpZ2F0aW9uQmFyUHJlZmVyZW5jZXNCdXR0b24oXHJcbiAgICAgIHByZWZlcmVuY2VzTW9kZWwsXHJcbiAgICAgIHNpbS5sb29rQW5kRmVlbC5uYXZpZ2F0aW9uQmFyRmlsbFByb3BlcnR5LCB7XHJcbiAgICAgICAgdGFuZGVtOiBUYW5kZW0uR0VORVJBTF9WSUVXLmNyZWF0ZVRhbmRlbSggJ3ByZWZlcmVuY2VzQnV0dG9uJyApXHJcbiAgICAgIH0gKTtcclxuXHJcblxyXG4gICAgY29uc3QgYnV0dG9uc0hCb3ggPSBuZXcgSEJveCggeyBjaGlsZHJlbjogWyBrZXlib2FyZEhlbHBCdXR0b24sIHByZWZlcmVuY2VzQnV0dG9uIF0gfSApO1xyXG4gICAgYnV0dG9uc0hCb3guc2V0U2NhbGVNYWduaXR1ZGUoIDIgKTtcclxuICAgIC8vIFNpbmNlIEtleWJvYXJkSGVscEJ1dHRvbiBhZGFwdHMgaXRzIGNvbG9yIHRvIHRoZSBuYXZpZ2F0aW9uIGJhciwgcHV0IHRoZSBidXR0b24gaW4gYSBwYW5lbCB0aGF0J3MgdGhlIHNhbWVcclxuICAgIC8vIGNvbG9yIGFzIHRoZSBuYXZpZ2F0aW9uIGJhci4gWW91IGNhbiB0ZXN0IHRoaXMgYnkgdG9nZ2xpbmcgc2ltLmxvb2tBbmRGZWVsLmJhY2tncm91bmRDb2xvclByb3BlcnR5XHJcbiAgICAvLyBiZXR3ZWVuICd3aGl0ZScgYW5kICdibGFjaycgaXMgdGhlIGJyb3dzZXIgY29uc29sZS5cclxuICAgIGNvbnN0IGtleWJvYXJkSGVscFBhbmVsID0gbmV3IFBhbmVsKCBidXR0b25zSEJveCwge1xyXG4gICAgICBmaWxsOiBzaW0ubG9va0FuZEZlZWwubmF2aWdhdGlvbkJhckZpbGxQcm9wZXJ0eS52YWx1ZVxyXG4gICAgfSApO1xyXG4gICAgc2ltLmxvb2tBbmRGZWVsLm5hdmlnYXRpb25CYXJGaWxsUHJvcGVydHkubGluayggbmF2aWdhdGlvbkJhckZpbGwgPT4ge1xyXG4gICAgICBrZXlib2FyZEhlbHBQYW5lbC5zZXRGaWxsKCBuYXZpZ2F0aW9uQmFyRmlsbCApO1xyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBWQm94KCB7XHJcbiAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAga2V5Ym9hcmRIZWxwUGFuZWxcclxuICAgICAgXSxcclxuICAgICAgc3BhY2luZzogMjAsXHJcbiAgICAgIGNlbnRlcjogdGhpcy5sYXlvdXRCb3VuZHMuY2VudGVyXHJcbiAgICB9ICkgKTtcclxuICB9XHJcbn1cclxuXHJcbmpvaXN0LnJlZ2lzdGVyKCAnRGlhbG9nc1NjcmVlblZpZXcnLCBEaWFsb2dzU2NyZWVuVmlldyApO1xyXG5leHBvcnQgZGVmYXVsdCBEaWFsb2dzU2NyZWVuVmlldzsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLDhCQUE4QjtBQUNuRCxPQUFPQywrQkFBK0IsTUFBTSwyRUFBMkU7QUFDdkgsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLFFBQVEsZ0NBQWdDO0FBQzNELE9BQU9DLEtBQUssTUFBTSwwQkFBMEI7QUFDNUMsT0FBT0MsTUFBTSxNQUFNLDhCQUE4QjtBQUNqRCxPQUFPQyxLQUFLLE1BQU0sYUFBYTtBQUMvQixPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0MsVUFBVSxNQUE2QixrQkFBa0I7QUFHaEUsT0FBT0MsOEJBQThCLE1BQU0sa0RBQWtEO0FBQzdGLE9BQU9DLGdCQUFnQixNQUFNLG9DQUFvQztBQUNqRSxPQUFPQyw0QkFBNEIsTUFBTSxtQ0FBbUM7QUFFNUUsTUFBTUMsaUJBQWlCLFNBQVNKLFVBQVUsQ0FBQztFQUNsQ0ssV0FBV0EsQ0FBRUMsZUFBa0MsRUFBRztJQUV2RCxLQUFLLENBQUVBLGVBQWdCLENBQUM7SUFFeEIsTUFBTUMsR0FBRyxHQUFHQyxJQUFJLENBQUNWLEtBQUssQ0FBQ1MsR0FBVTtJQUVqQyxNQUFNRSx5QkFBeUIsR0FBRyxJQUFJaEIsK0JBQStCLENBQUMsQ0FBQztJQUV2RSxNQUFNaUIsVUFBVSxHQUFHO01BQUVDLHNCQUFzQixFQUFFQSxDQUFBLEtBQU1GLHlCQUF5QjtNQUFFRyxNQUFNLEVBQUVmLE1BQU0sQ0FBQ2dCO0lBQVEsQ0FBeUI7SUFDOUgsTUFBTUMsa0JBQWtCLEdBQUcsSUFBSWYsa0JBQWtCLENBQy9DLENBQUVXLFVBQVUsQ0FBRSxFQUNkLElBQUlsQixRQUFRLENBQUVrQixVQUFXLENBQUMsRUFDMUJILEdBQUcsQ0FBQ1EsV0FBVyxDQUFDQyx5QkFBeUIsRUFBRTtNQUN6Q0osTUFBTSxFQUFFZixNQUFNLENBQUNvQixZQUFZLENBQUNDLFlBQVksQ0FBRSxvQkFBcUI7SUFDakUsQ0FBRSxDQUFDO0lBRUwsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBSWpCLGdCQUFnQixDQUFFO01BQzdDa0IsaUJBQWlCLEVBQUU7UUFDakJDLGlCQUFpQixFQUFFLENBQUU7VUFDbkJDLGFBQWEsRUFBRVYsTUFBTSxJQUFJLElBQUlULDRCQUE0QixDQUFDO1FBQzVELENBQUM7TUFDSDtJQUNGLENBQUUsQ0FBQztJQUNILE1BQU1vQixpQkFBaUIsR0FBRyxJQUFJdEIsOEJBQThCLENBQzFEa0IsZ0JBQWdCLEVBQ2hCWixHQUFHLENBQUNRLFdBQVcsQ0FBQ0MseUJBQXlCLEVBQUU7TUFDekNKLE1BQU0sRUFBRWYsTUFBTSxDQUFDb0IsWUFBWSxDQUFDQyxZQUFZLENBQUUsbUJBQW9CO0lBQ2hFLENBQUUsQ0FBQztJQUdMLE1BQU1NLFdBQVcsR0FBRyxJQUFJOUIsSUFBSSxDQUFFO01BQUUrQixRQUFRLEVBQUUsQ0FBRVgsa0JBQWtCLEVBQUVTLGlCQUFpQjtJQUFHLENBQUUsQ0FBQztJQUN2RkMsV0FBVyxDQUFDRSxpQkFBaUIsQ0FBRSxDQUFFLENBQUM7SUFDbEM7SUFDQTtJQUNBO0lBQ0EsTUFBTUMsaUJBQWlCLEdBQUcsSUFBSS9CLEtBQUssQ0FBRTRCLFdBQVcsRUFBRTtNQUNoREksSUFBSSxFQUFFckIsR0FBRyxDQUFDUSxXQUFXLENBQUNDLHlCQUF5QixDQUFDYTtJQUNsRCxDQUFFLENBQUM7SUFDSHRCLEdBQUcsQ0FBQ1EsV0FBVyxDQUFDQyx5QkFBeUIsQ0FBQ2MsSUFBSSxDQUFFQyxpQkFBaUIsSUFBSTtNQUNuRUosaUJBQWlCLENBQUNLLE9BQU8sQ0FBRUQsaUJBQWtCLENBQUM7SUFDaEQsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDRSxRQUFRLENBQUUsSUFBSXRDLElBQUksQ0FBRTtNQUN2QjhCLFFBQVEsRUFBRSxDQUNSRSxpQkFBaUIsQ0FDbEI7TUFDRE8sT0FBTyxFQUFFLEVBQUU7TUFDWEMsTUFBTSxFQUFFLElBQUksQ0FBQ0MsWUFBWSxDQUFDRDtJQUM1QixDQUFFLENBQUUsQ0FBQztFQUNQO0FBQ0Y7QUFFQXJDLEtBQUssQ0FBQ3VDLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRWpDLGlCQUFrQixDQUFDO0FBQ3hELGVBQWVBLGlCQUFpQiIsImlnbm9yZUxpc3QiOltdfQ==